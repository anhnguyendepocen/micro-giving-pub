source('~/.active-rstudio-document', echo=TRUE)
preview_chapter(demand_101.Rmd)
bookdown::preview_chapter(demand_101.Rmd)
bookdown::preview_chapter("demand_101.Rmd")
bookdown::preview_chapter("index.Rmd","demand_101.Rmd")
format_with_col("Can you write the own price elasticity $\nu_i$ in this notation?","blue")
knitr::include_graphics("picsfigs/solutioninngoods.png")
```{r  fig.cap = '', out.width='65%', fig.asp=.4, fig.align='center',  echo = FALSE}
knitr::include_graphics("picsfigs/dmrs_cobbdoug_autor_calc.png")
knitr::include_graphics("picsfigs/dmrs_cobbdoug_autor_calc.png")
knitr::include_graphics("picsfigs/autor_lagrange_general.png")
knitr::include_graphics("picsfigs/autor_lagrange_example.png")
knitr::include_graphics("picsfigs/autor_cobbdoug_lagrange.png")
statmod::power.fisher.test(0.0003,0.00045,150000,150000,alpha=0.01,nsim=10000)
?statmod::power.fisher.test
statmod::power.fisher.test(0.005,0.0065,100,100,alpha=0.01,nsim=10000)
statmod::power.fisher.test(0.005,0.0065,1000,1000,alpha=0.01,nsim=10000)
statmod::power.fisher.test(0.005,0.0065,10000,10000,alpha=0.01,nsim=10000)
statmod::power.fisher.test(0.005,0.0065,50000,50000,alpha=0.01,nsim=10000)
statmod::power.fisher.test(0.005,0.0065,60000,60000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.005,0.0065,60000,60000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.005,0.0065,20000,20000,alpha=0.05,nsim=1000)
```statmod::power.fisher.test(0.05,0.0625,10000,10000,alpha=0.01,nsim=1000))```
statmod::power.fisher.test(0.05,0.0625,10000,10000,alpha=0.01,nsim=1000))
statmod::power.fisher.test(0.05,0.0625,10000,10000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.05,0.0625,8000,8000,alpha=0.01,nsim=1000)
R command: statmod::power.fisher.test(0.01,0.013333,25000,25000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,25000,25000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,20000,20000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,18000,18000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,18000,18000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,16000,16000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,16000,16000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,16000,16000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,16500,16500,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,16500,16500,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,16500,16500,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,16600,16600,alpha=0.05,nsim=5000)
statmod::power.fisher.test(0.01,0.0133333,16600,16600,alpha=0.05,nsim=5000)
statmod::power.fisher.test(0.001,0.0013333,16600,16600,alpha=0.05,nsim=5000)
statmod::power.fisher.test(0.1,0.133,16600,16600,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.1,0.133,1000,1000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.1,0.133,2000,2000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.1,0.133,1500,1500,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.1,0.133,1500,1500,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,1500,1500,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,1000,1000,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,800,800,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,750,750,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,750,750,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,650,650,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,650,650,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,625,625,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,625,625,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,625,625,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,640,640,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,640,640,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,640,640,alpha=0.05,nsim=1000)
statmod::power.fisher.test(0.2,0.2*1.33333,640,640,alpha=0.05,nsim=1000)
