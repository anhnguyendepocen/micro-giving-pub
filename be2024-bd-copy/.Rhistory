fun1p <-function(x) 2*x -4
fun1 <-function(x)  x * x - 4*x+1
plot(fun1p,-.5,5,asp=1,xlim=c(-2,3),ylim=c(-3,4))
plot(fun1,-.5,5,asp=1,xlim=c(-2,3),ylim=c(-3,4),add=TRUE)
abline(h=-1:3, v=-3:3, col="gray", lty=3)
abline(h=0,v=0)
plot(fun1p,-.5,5,asp=1,xlim=c(-2,3),ylim=c(-3,4))
knitr::include_graphics("picsfigs/plotaquadfncn_andderiv.png")
```{r  fig.cap = '', out.width='60%', fig.asp=.4, fig.align='center',  echo = FALSE}
knitr::include_graphics("picsfigs/contourcombos.png")
knitr::include_graphics("picsfigs/contourlines_example.png")
knitr::include_graphics("picsfigs/contourlines_example.png")
knitr::include_graphics("picsfigs/contourcombos.png")
knitr::include_graphics("picsfigs/contourlines_example.png")
statmod::power.fisher.test(0.01,0.013333,60000,60000,alpha=0.01,nsim=1000))```
statmod::power.fisher.test(0.01,0.013333,60000,60000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,10000,10000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,20000,20000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,25000,25000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,25000,20000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,20000,25000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,20000,25000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,20000,25000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,25000,20000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,25000,20000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,25000,20000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,22500,22500,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,22500,22500,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,22500,22500,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,25000,25000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,25000,25000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.013333,25000,25000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.015,25000,25000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.015,20000,20000,alpha=0.01,nsim=1000)
statmod::power.fisher.test(0.01,0.015,10000,10000,alpha=0.01,nsim=1000)
