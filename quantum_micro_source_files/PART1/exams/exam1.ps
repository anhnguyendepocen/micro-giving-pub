%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95b Copyright 2005 Radical Eye Software
%%Title: exam1.dvi
%%CreationDate: Wed Jan 16 20:49:23 2008
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR12 CMSY10 CMR10 CMTI10 CMMI10 CMBX10 CMEX10 CMMI7
%%+ CMSL10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe exam1.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.01.16:2048
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def% return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def% return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSL10
%!PS-AdobeFont-1.1: CMSL10 1.0
%%CreationDate: 1991 Aug 20 16:40:20
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSL10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -9.46 def
/isFixedPitch false def
end readonly def
/FontName /CMSL10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 36 /dollar put
readonly def
/FontBBox{-62 -250 1123 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9429B9D40924DC059325D9D4CC0344F3F997A99E6CC0676735EBCD685AAC9142
08DAFEC78BB41AFC2F1C219910BDF41D6279284EF600B69776CA15BC8A34347C
30783C52AFA60FBE3E353E2AE354CF87B558776A22C776C7A0B5AB5CE1F941EF
C2D9CAC37294BF407A671F10E4743BF842143F4F7DFEE643BA3BBD8BB9E3F24A
BCCF7F0ADF8BA500620C81033EAE8C4EF2C1DEF13AC575F1B3BBB66F093D3B78
5412B82B67FFA087AF57182B2230F9F2137180CA58A7D9B2C822FF04BE6CD01D
43B2CA7058C7B953F6D9B5D6E91ECBAA5CDE1159B0E59C83DBAD96D6C8C8BAB1
374EF652D10C0F3EE7104472C98DD3572AAF2D45A70BF7061447E21EE3C3BF23
DF39C2D1B35B42CD5297BEBE6BC94F7C9DC6E61EC67E4F677256FED9064BD3E4
B51A71B1D27CA4E5AA9E1D8080E6DAB5310711EEF87C40859FA935B19524AE83
63B163FA8397BDFF443227FEDF7DB27DC35D89FB1C5E435DA0619A5C88AFC73B
89A2DF5E767C5B536BC7167A840A0C32BD57A14DE69A7D0D819AC36FF32F908A
5070F32983BB007437E3500799DF5E0AD3710A4C0000F0098D5BE99F2EB9C1C2
C444FD9552D0DCA098A94B3BF176F511CEE13DB7EFFAED7C47B5ADCF8D4700F5
7B6DF50EE617C00966B9A2828882804DB7477F4A8CF5345B7F3568B4F72BCE73
2E2AA5BC4B4C70E21F3AD9AFC3B8605A00D67EF9ED1F4D13DDAA920D45B43CE0
0941BF17CF05D2B777C11D4D844AB20C0693D1DDF00B27D9E1AA2D98A4A06CC6
D342AD8F644F4787B66CA7D861E7CE13FCDA85C1B0C9F94009768EA89838EBA2
7818F40BFA0D9884DAACD9C2503E7C7B656D3720CA214442D25A6CCFBF2494D3
4D66C28ABAD6C90AAB2A8572B220453BF7E2C37A0A8A66B7AB4E0B9564BAC1AE
7F621649DC41303355E5C510402302EA5053AE20EF10148800353F1336EF85EE
04DB662898A7829FEB98172C650811489F143730EF042A23074BCAD0488B5F69
FC129145530922C86400188CE4571D3CC4727DB10B4ED9551370C8020BE2AC33
3683D7969CD4E3F3A72F4A683A37C5006FF66212D74CA1448A18D4A82CE7AA4A
D8AE2685A9F9B777345B42A9FFEDB5C733F0CDEB03C2FE689552182BEA8E6A53
BDD6CEC01F70C4ADAE3A6E29065FE5D7344C642FC9BE8F377F006C396B575906
5502CB1AA6AB1606263ADCB9B5EB939D7EB41C4902F5CA9D627D3CBBEBC836E7
399AD4CFF5D83FBAD8581AA3C8EBA4A857C8DE59794F1E15E71278BE484F691E
6DBF7366B04DA718C83B57F6794E40DDE166CE831B8BBF309AF08D4DA076A9C6
45E783A0EE41D55EA860CA320B6B97508AC30BF6DD7D4394C0AF7CA622C9B7E4
2D557CD6D280A3CC57CE28
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /n put
readonly def
/FontBBox{0 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC194F782420BB447DE705EAE7963391B36647C8B3796E8E8774CD38D
675A89E8D077644F37FBFE9EB36C5B4455A94D61E2EC58C4544B2714F8B66FF5
D09FF25507481406F93BD74C2F14785C9AFFC6458E10A133E0ECD17301B2B5DF
DE0C0D73DED3F4BE21027581FC25B49D6B1F1934F8745C4CE9610BE5A10F91C3
561C994E4BCD46A084D51E268092BEA0AB544F91C9CA2692A02575863E04350D
23051121C2B09186AE02C550040C09905EBFAAB4859901E0D1349E104862C122
65A2855C94549313EA44C9D9F1B3EB99D644FA8FE08D5F40A506639B0344B894
882ED4C0BBCFE4A30B6DA93BE0DCA9671E984F279295B45C8DED7D77BA7874AE
8B21F1148B253610333230100049EEBB1D4D58E17059C374AC2AF9CEE11B4D59
A7281AB04644DE042145245F04DE6CB5413889575CD415C721A7C18B3C3FE177
2FD7256E2E686938E36AC765FAF48D83C561C2E25807CDA6087E4A3B1E82216B
A3609E28E6B58E3F36CB36315314A72CC7EC4ED8CF2E6761EC6409A74339CAF5
D148FFFAF620CE77
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /bracketlefttp put
dup 51 /bracketrighttp put
dup 52 /bracketleftbt put
dup 53 /bracketrightbt put
dup 54 /bracketleftex put
dup 55 /bracketrightex put
dup 88 /summationdisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C261F8E7BD4643B16ABD7E1B7F1C70A92FD52960048F4DBBB12DC5C5
3DA14140B681566FC91D02E19A47F43A23D457C2CC86D601060E2FF1E2E38109
D17A803664D2A012AA6CA3B1325D78A14EDDD6E5B6C2440E87028A29F044C902
A48CCB89AEC530935B948744670AF6C799E9A35A4D1370DD60FB257376B907FA
6AD17D985BF1430315D987301BB191CA657A1B236E7794F23635C1AEA6EF1C47
7C9BEF5A744171FBE4701D0F9413842B9BF551323A3648AA542EFAACC6319740
10804F215773C0D8C72CA4DEB409EC7F2F618421BAF464686364D6852BB73C45
F3590A5AB0535555D6D2CA3E16A07BD6579D92DA2F34A5522DEC7838751C2E3C
9BE04F6877B09DCA2B948BA4CC9FAB6B889A95A5EB5ED435A827199B2BC79A3E
7683D0BFAB4EE2DE0D3AEBE7A7A270AA0E9FB789E214FBE033A0D5FE6F158805
113D3C85FE1903ECCED1C852E5FE566B61B87AE48FEC46F293DD52B0ED0AD0B6
835FAB0CF76B77D24A9C1047A4FD346AB4B76E7C6A3FC4A225E0E3ECD092F90A
D97DF41546191F2B6B62C9945E9155E63B5100B69A6CB18CF3016ADBA530849B
D1A825FE1FE06FE0E0D9DBF8427E97A0BA739942CF5B12DD4277B674EC5E3631
0461F5CCFFBEA92BE4DCA22BD976FFEB6A993EDF030C89F7E608572A3779F998
7E28536D19FFFC5C15128BCF42B3F1D062E79CA7A0DF0046A2CF2F0AE330731D
4BF6A2EA0476B48A1C7932C5DFB935535BC3400F2E5B99C4D3EAFD7581ECA0F8
BED1CE7ECF6EDD88E28DF01C7E98E80DF4D09814A5C54AABAD373A3889D00D86
A286FDA6E83F3A72793C221BCDFDF0FAF37267DC051E7C9F9315D7DACDB36505
E6B5CE36213A7740BBF11803929FE612EF0495FE3B715152DC37FB500171A065
FFBB0ECBC29A07F237BCB9FC1AC5EBAE8F38E0036528FCE80FA72719B79B2FD5
AEB644C5044C69A2AA0F7058F8ECB5BE9CA464E16C89AED820F614BC0C3CD8D3
C8EA46AFAFCE813466AE648CED1B983D8E4601AF74F0633038A5EA98BD00514B
56D8209F402C5A1E5B753A939C055527DDCC952D51FBFC72C15F43EFC011BBB0
5FE66AC3BCCB7B5E96EECA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /fl put
dup 34 /quotedblright put
dup 58 /colon put
dup 69 /E put
dup 73 /I put
dup 78 /N put
dup 89 /Y put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405CF54722827FBC24AEF08
F6DD0BC6A79A2DB1FF539454E8F5D1A42D40CCFBC093AFD3E57973A009095CEA
B91FAFD236C47F453B38DB0067907A28EB5E9ADE87A2181F1D6DE4E183631716
C21F0F952E0666AC74371F8B5C888DC44FBA5607435A619684F502CF625663C7
94B0DAA79BE8E129E7F5C5AD1B7495C1BC9B1C759FD67200DFF251DB7C95C09E
89EA1F66EADC3439C72468503347EA1A45344A43E0DC78100DFE972638580C16
F60E1CE273350076DA9B152901A965A8131B3E4859826310476781777382D05A
089F2CEE01CF9E6CAB50A0E70CD5AD69A8E0A853C02606DCF3DCC9B45852176D
66D31F2AD15DDD86D0C4CE2BC1A91F7E1F44B5CD719979AE367BF00C69E70AB0
073D6C92F24E89634FD8C13852A64454AA643E808AA09C97C98A31B06B0BA2B6
A876158CAD8A1D654C2683E8F0DF62E08C56D9F1EC84055EE321F664A094158A
1562B6777F3B3E12DDA2EA33F18CEED2D24BB0C12715940D7E71930FD4FF2C33
B1CFCEAF69D164DB4895D52DC322D96E8A8F4079E4B1C3196E6DF48B0762B57F
8AAC873F5B2F33E47951985B4BB8105F1286FD595F4DE1A069C7433BCBF6334A
59D6DEDB23B6D652E67D3144E728B107840F037B3305705ACE79041FDD00E071
0026539AC3A9EC9099BA9E2044ECC17EC3CC2FBDA663508C2652C3F19B527DE7
3595318B43DBF8921DFA0D1383C50BB3E6C3DF078ACB88DB37ECB38C04D69777
104325756BFE344220BA375310F88CFBEE2D17130BCDE456A6C21732D17F5C66
C86976899314F75F1815AA5345C39238342BAAF1FD9643E94C88F49B08E0BA7A
883E888B2C77DBDA49C6C7CBAC7D62CFA9D08495929165145C09D80748A29E88
461C9BA69BED509B9E141BFA6890D19FE47DCB4E86713EB619B6C788A2D7B2A1
A21CA1FD252A74490DBEE0ED3B26189BE310026364331848A065EC3887DC8FC9
B706953B283B33D68C3F646B4A877F4C329A7D9643E23DFDA57C18121C1681F8
D6D29E3CF7EEF9560CED7F132661F510690C4BBD7FAC80F4EBA71A0DDC8F8529
19C302D82CDF8136AAA2AE7D1853DFAF57248FCD58CEF761A810419FC36A7180
5FC20EE3C988ED8606E71588B33C1B19FDD72AA1318BA3BA678F122B38121C32
BE82D6ADB5AB716C9C67C92E29C680D651A1C881337B1BF2D7F851A8688D45BD
7A585C6294617719A590032B30AF1F362A92696C698BCD4A13278D5FA4DFFC56
ED23BF6AC32F29CC293A762900DA065DABF68D51132727D2352B3DB340604A48
FE3BAF61A8E597ABAD9CDFACB50B6752372BF655AAA79B0C298BE772CE4889B9
5D3E4B275DD815FF654F2DC116FAAAB371043E1A4E64CCAE9BC5F573B74B66D8
9AAC266DC23714651E742D2C4DB346CAF1D4EEB8E0F34566B532B2C9E3501F17
EB596165DE4CD4F89C1A21D69B0370C35FF17CF5B04471432DF3C86FFCB62115
341FB2D1CC0FB65BA0DC0574C2C37ACA3A2CE3B0FF5F683CEFCE9DCD1E444CD7
4C41B6FD24986230ABE51E525BA90C42A98B6771F1C71A454FC1414E168AAF7D
F918149F16F472C6BC58CF724914AB6868CACB3A7234C0F5D71127332505FCD5
561C2D84BADC6FA13F824DC2392B432335D731449B227E98FC75CA349C9A06EC
E22419398AEACAC09DF968F5B98F865ADEACD00225464CC086217B8080AF3756
B10A0324C870CADED2901923F3DC6CB9FCE748E3E678EC1F5D7805BCCC26B2AA
477FB612B8B90F53D719FC33A57CF994FA8527A1D55762BF41F53C61819A0E69
7DCAB700527317B879ADCB4D882D31100167190799B1E6445F6FAA67D03D9CE2
508EC0CD87C90E96D46515A379DC4EA425B6BCB7F61755BF3CD8349F007747BC
DA31E0016DF7F2212BD4FF887F2987BD568C190888644D23090A6B63A603EA28
565D6190740B62E515F8FB34B5CA05A9574C11401BF1B79E9C381D1127EC246B
8D3506FA51882F0708A77CFCC72236D9FBB5235C0EE8A7B6C86389DCD2256DD2
FBAF0B9FBD4EF3DE8A43FE058F44F771EC896C7DF7D84549B7CC13424183452E
5E4BB7E1734F4E86DFE8E89817EE595DD9B60E7AF810913F23B8D2DE907B76C4
17ED8984CD1ACAADCA2CE1FE8C9F050B26D87E8B8C60B05D6826F4F2F72C4D6F
FE24E9A555AAE1741D275CB54183E3B2E257319F457526D376BE22EC17C5A750
F10AEA7ABBB797D95DD6A385615EE9CEBFD6BE2C745C0B70F145C0AEEF6E2457
95BB92A664CDC585C08AAC4E1570715CB7493D838A26F32A7B2927C4949C44A4
B25DE38F3B2433CE4B84940BC87CA87A51CA614C377890498C34CD01F022A50E
42B612B5CFD41A65DADAF884D35C6EF4687B2F667FD00FDC897515227F61252D
36D1DE463109D1B8EB2E74D458CFB80515EFB8657C79A4E0FB56F8D2313DE809
111750897E14E25A2D969ED0F03A7255C9E562D81279ACB72CDA9003502BE798
B386C726FB038B9F440C988A966A8AB4B0573B1C2EFFDBD8D7D0C0EF4B5A5B49
E28DD2C315A7B73CE528B4CC5C7ACBFD7562022FB201E12F7FF04AC513167D48
8C0F31195A8CCF7FBCD35786EA5D26341264E47BE02CD7068040221F4B913C2D
752B2821DBA8CCBB4851571C0A52ABCA01D2873AC63504995559A11299D9F3F1
965BC832CD52721EF586563A5069828251733AEE6114C28227677CE46CA24355
AFD3949B5A98EEC4126184DD18521E7041E32CBC1ADBA1666A8FAB16963D8FAE
9748703FF23156F2120023024B42EC43B2DA3D4296E95BAC633DE0C477337D33
893468C61EDD5A1E1E9A398579A41E32620BB2EBA0211AA8636594F0C9A5FC95
FFA5849D5C79A9B6829A4AE6D092F7EA58EDDDEAA73D2C4FF3F065241002CC62
FE179AA024B377DAB5E71D820A54A3664D0306F73596FA1FBD56DFDF8CB7086B
CDDE3BAFB44045D0D6D935CAF18948FB69E6E5744469B17747D1B57C463DAC37
263E7AE85D0279288B27FFCDF850A4488B4EB9B176930C71F4A312557E323292
1FBC7B318B51A706CC5F3ECD15D73CC276AEF1CEAC5CA43C16DF20A8F1C3153C
09F647E33EB107E557B92E223A03115139ABFAE318B1EB57AD99486346E5BB50
C94624357551983B3EBB8E8314FD6B78685563265E6D34D663B29A3B3ECB8594
FD9A2F3B1EFB0FB9296B82BA56B2D6B104F62E6227E36B22C7BC55D839473478
8D7875B89EF3FEAED46FA018AAFBE9BCA68BC180B72B2B9680FCD6C66E72C8BB
E3A45DD88360D50DE44B3AA8CF2A8282C0D1B04EC827DA0CF01E143DB81DA086
9923D1976700A7FE28D77B47CF6C26FCCA0B0F3E7A2AF7952971F2B0B70A431A
8FE7F288C01C2EA877562C06D2A18E92972E01006AA972450D6DFE8A9689FAE8
0964D798BCC7FFA78E54D79E2465F79AF6CEE75D4B2EC4FA329151332CA81AA8
6F09108B608A441B14EA8B2E5F73E6FAA78384517D034093455A28829B4B1B9D
3D2BB3FF2567976779F6A7BCDDA05EDF1EE568F3CC4EF099250BE6841A5EAEEE
8709F043C421C29C3C3EA11907671F46378ED813F897183356C56BE9A0910125
6C2EC10458BFD5F6FA07B83EC56257F2EEC8618C376585C88DAD59F4B24E76CC
C26EB2F8867C99EBDAAB689266B89213F574CC6F62415EEF19C331A9A9C545FA
E66756DB3724DA42452344D6A29D1E32EADB239A6C3CA3E2146077B9D32C889E
917BCCF1BCC0EE8F918BF5352268CECFA71A6DD584385C30F3CF83B5D0060C5B
B9646283DDBECCB34C5C94ED92C0EED93F078C382EA292513375F22EB1442BFB
85BA1606788199FAC94449255CE5B86F950E31F6B48059C6B8B50F9EF95CC138
8C88F61D656D83CBD975D6CE9AD3F160D0E6B79F77C4C7D979B4E7FC509F202E
3005E9A2B7D660BED6888A8DFAD32127D1E83348BCB0BD6DEE81FD0B279DC6B1
5F92FCE633541568982C5B32534A8429EE1E3C0E26678B1439CF9349C1BE1F28
58A9985644819E1D7A042C9B7E775F958406CFA6B102400F160D88F3D0C2A137
2CAAD92B9B2FEC3C91A7E2453E7EDEF2A2F286C119746EC79BE9DA65E0C51B3C
51B0AB7ACC9FBF1C2545C885FC51548AAC15D0814625330DFEE4AE3427865598
F9DCD511E4B9355CBF229CDB1DB85834A9C942B121CD93F3C0F9FED52BF92DD4
D47F64B94E4F03B6F509DE97FC46D82C1DB884E6CF38B16F1374A3C6E8E39BF2
9A9B796DB367814D6F4AA10241035D9086D26360A43CE3C5C7655BDD501DAF42
6C1F5DF7D9064088A96FDFEF908AE018F8CD802510ADB613823BB5E5B889533C
290B8F90BD18519DCEC16454D55E85E6B33742FF913FC5C4CD5321F91A01F201
45A4BB8669CB3733F1B3A05442ACF70506D48096A901E300C47084BD57FB9D44
8AAEF69512FF462BE72FA25C5A84432606426F6C04BD65BA879A0C6B589753C0
1C4334D719A61F2B81282598E707C093D58AE75DD9490C26B3FAC27446497A95
0FDA6EA1DCFD735432653C71697CEAC24CD2BFCE7CCDABB44EB0330D1F213D6C
88F7645F88BB4896D7F3FFDEB6D2836B7C1E3B17B826C0F8654BBCE32B683907
00BD6166BCC9557AA4700AD5C83B381A9C53712D68B1690455DFCF4DB193ECC0
717E0C2B4A34A9F7465E56891F4F4B747C974C3448BE236CFCF2D9E4F612294A
BC8EC143B7EECD593B9A8FF85051CDED7F88B1AD084E6A739E5262802EF4F0D9
CD8C916BDEFFEE61EE8B30B4329604676AAEA534197089472182C1AEF91FF31E
4BB80799D97030A33781C65A6EF51758407CFDD68F543C509DDCBB943E07D045
8082CE1073D045EDED43E04308AE3D1F0DF9A617DD3C9F525118CDD7831B082A
42262F724663287B517D7825FCA6EB1E13B79B902DE70EC94059014CB1BB8FC7
4BB4E608FA4D0959BE623D892492ED5F0A6B020900D45A50450AA9C0924C6BB3
AE3976F001780D7B8F1C691214430EFCE0CCE55E35CB454C45F79573124E5FB3
7B4F6E7EA4AAC65FE408884DA80D74E4B63344DBDDBD5464BCB4E1B1EEF6D108
0127EEDD37E80F66A5A4DC19D882F811489F225D1206E6D28510AC1195E47CE8
AE6A9F796B5B0105C4C922A59EA2BBBCCE66A9A7E2C7164EC6C8F3A19B15969F
5D9FEF3ACA1113B08E8F12BDFA683DE074722C9D02CFEC88F0A7111136C0322D
445DDEDF21C9E9271C4DC75B5A8013F63C20E4BE3BE43328002AFAFFB45297CC
16780142100E2B2D2776816DEE5D7378BC3B1D5C992BF4D16C004CF44C9CF3D3
5F5603856B9D20D095F7D76E48DC18BF123B46FD0DDF0E1F8B9018173B6B5ED5
4D1B73A111EDA592AF88BE6E1A4C562A33466DE4F2D20AF1BB69C153117AF666
16EEA32FE8A4E8EA484E02FA4D689EA0A8C50543660AB73E8155943CBE2045B2
7757CE081A2ACEC3C4EA58797154E94CCCB2AB696A6C6C8C0A353F64F91DC940
6A207819B8EAECF0B8827319C1803CC208D9ED5C23E8A3BD727BD25D558794F9
FB5E106C605EF2A72F58124CF0692D273BB8C9F4C91AA07B196F24704AEBECC2
3B6EC9F2230B03E6FE5770AD82D5AB7CD14FCCA6452D336E2BF68C7FAF2F2D2E
62A4D8C005657CB6530A7E5A33DF06BEC1819C4593717B20903DA7A43579AEDD
19B055CE07E12C06384293FEFCC8F10ACBFD74076919981D5A1EC58A0864DD33
7A040CDF8ACBE3DB94D656D0AD6001456C32760BEF763F305ACD546FC14F02C5
F2335D76E299C44C9AA888F32DE01F2E339A2BAC0887974E7066B9DF89964427
68B740D7A4A567579EB45F83A878D1C8B83949ABEDDB00D6157A2B038648FA49
3FA4A238EECDBDC4F971E5513A52ECBE765B67A7B427F742028AEF516E03442A
D6A0BBFD99D13CC4E95A8286D039907D7A773829C3336347FF83649A81D5F5AC
D6EBC04C80945141FEAE045A60C7C35A734BCB75C9A6DE695273F06FB7550D34
398965F6079EEBC26861DC9669ED3602E7F4658C6CF719612C1194DA57990AC0
5F6824BC9C3DDA6EBA7E88F0AF6E75D304892E2BDAF19C71194C9F44478116A3
EDA6AA335FE250D0815A30E9AF055F3C0DD8718BB0E64CDB010B20504B961C7C
85912B44B9A0B7A179F1EFA3F553DE48AB2DFEF2D3FA0D64C2685EB444F6E93C
6D0C0DE3933EECAF4381E6B5184EB05EA6AF2B30F12A11059578390F87831AA4
4D0A069E777A2488CB7BA366660DADF5A70231EDF7CAADE589E35820545CE7AC
8D17161E43EF9A01E5F178972EF1B806D004AD9C3DB43DCF0E09A562D8965CED
2DC24D2C40251A5B79DC60597313837FC12E531A7362B6856992D8D183F7DA98
8B22C2C48DF3D6497CFB2B0D7F65E2AE592328BB15261BF910142DA4CB57FA8D
5C8E1C93E7F7FB58352AF4B7D934E4D9A7ECFE8D69B1D401B4669CF53F3B8A57
06B0BE1214CDBD069B6FC0AA6802E4D050A99AA36D5D514DC06210B23B6B3CCB
467B737B8D550BAB91CB8E53BED7A78DC094FD4024B66EBF5D0D6B39D6A65BCC
14448B10A9933640A0128E51EA82494463C02A93424AA4191E872D2B6CB568FC
B085AB7E4A084C2195A68F4AFE7EA6D7376EEA6510A97CD09EA9284DC36D54F9
274F5B89BF0EC82B10348871DB09D8C945259CCF791FC45AFD6BFB7893033E88
B4831537DBEAE09A8D53ADA7EDF3DC24B86F39BB44105C99AF4C72A535222F48
509885E64A663BD99F6DB4062B45D233B59106EFB1DAB58EECCC92C8D32DB808
F6AC4FBBF8201B4AD80B19A5E993FB193A86E25F97940A40F13701B055CD1398
DE6018B2E19FB4EF5E280E83401F870DCAD41C70C0457DE184BBDC61A5C58706
F77020031C5BFF65ED2154BCAE2D1048E24F619FBA9F2D51629103BBF1BBAC98
9FA215DB8EB4B26BD31642E891BB48D93587A253656449BBF663FB95093C822B
A499445E300527404796FDF13FE5C55C84ECEA6DC1A5F38A64FE80006345DFF9
3AA4EF41E6D83C7496B497024BC325E6EC20B818FC2B34E551C2DF3BFB3B55FF
94BF09BDB358468B10948FC0000C9B78A3F02636D923C95B29AEF20B78B686E0
648CADA2CDFA951A90AA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 71 /G put
dup 105 /i put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 120 /x put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667C419C4021DA92976C7550A196C257FC2124E6F6653FAEA9ECD781C6
793D55009809849DCD349D18C46B7072E96A292E937463E1671EFEF393030EF2
3127AEE8F957106A8BAE6B4C2B8779DF8696E89827DACC26FA565065212213B5
C7FAE4BFC0A793746555FB409DA199A38B1E20D88A84D211FAFF0DE90D9EF442
A897B72523A452660941F855496B75F771D5942B405091C5A54E1FF30956190F
D26B45801C6E3E21ECE7A0A2967B0228B4A32D7F5CC3656CEB3051D3C964EAC0
C2613784C908B23E55B1243EA550432BA73D6FA30FB75DEA40FC7D99A24DDE49
9936EAE6095E4300CC2E9EEAD33A15366B7859856B05906A6E11108D22686C0E
B727263868F201202C9A314DB7F5D0AEE1DA3288D49C68FFC97A157F2BF77D45
3FF55C1DA71DD91AC5E89FF00E45B57158E54F634E041C5B2A014E21267CB499
34B925EC7853879F2EBD39F44AFB3CFFBC5E2DC40524DC953E7D9C69562E7672
8F2390B49E69BF00DAB553E513FAD24624BC1BC4B8A09D47E8B1B569F970FA77
BD353F9A9569FB49146C1FB845FD355D8FDFF7055B2807EEF136CB96FF07B7AB
3B82F1550DF32DA08312497DBF5C9FCCEC2C0455BDBD3CF32F64D6DD6F876132
3239C1CC104F1A6C6B18CE0E97A7617E3912E504F534AD8B4FD7202B9A8D0D31
B2FD6A368D9E58B152DAF33D64D0241A10F7908422196D39EE3856A8AB6BCCDB
D6CB8D58431AE0D1F0906B618501A2D459B919AF879CA7DE2A766AED9B948CD0
44CAB75C1ED68F029C48ED832AAA0043480C73268DC62B64F197324A8929F694
543D92CEEDDE1D3BD9611D3C3A3DB18E72097AD0352AA7F2D8FC90D0ADA741C8
15670156A2449A941A0E69065BAECD3CA852AC3E01204BC10233DBBD70985221
7F3B77D5BE64F3169A479C202C94E1691695A5451C7331CB2474E9D69C19D73B
E22633D5C1C371E7DE6DC8480AA414E7AD9DD468BAEBFD477147BCB2E8DF7E8B
2EE667B2A75978A56E1A2AFB8AE86C27DF1C651A1FCFC6099F5EE878AF816EFA
8067580B002ED8D7930C11F530B26C580EAB721EFBA5CA60C752E6D8473B7401
B287170D5C58DA0921F965DF65A6CAE1D00618DBF86C74D6A2C8783848DCE8D2
D08188157F6FD1E2CCB9EF11D60EE79BA08E1738F4F1882CB3EF9596EB44CF92
4B541924D577D3F738503CB82D20D2905F9D0597FEC0743F695B8F36E9BAC027
E7E8BDDE7BADB5C120D0F298EDB215FDBF6F969C11FF8E55803A6DFA641F8A28
250742C60C7590CC72096CC92E84892B8399F4281B400927023DF4EFE72E771E
03143C40905300B348361EF0DF4EE7EECCA6BDAEEA3612D47BC27392949F61CC
2BB79CB1AAD53CB3C9B51886D47FCA5C9A3CBB697BFE5B5F3383AA7738A11B25
CC77A96E7DAF8B660F09D5CCFF4CFB1320F6F7A45537095B35FFEE523B61BAF1
E7D700E58AEF22D246A3B1044B2D7CD1969A3E2A63C86550DD77C4270665F90C
545F97B56C15D023319E259BCE4A792D7CFF86D5C8A178A63D46AB033D1F596F
D960C833EA32C907E889F284DAD3B0357FB8251B2AF549E17202A37E100C9618
D716E3BF9CC38FD63715F174B4F2CCD736B8917297EC01747234D94AB620D4BF
C59C7E02B573548A7AD362B87B717403D3F016463D7C31BD2E629ECCB73240D8
23B91D598DBCA6062C1B1B9BE6AB0E472672FB72201124F02508F472AA4A3B97
85271A1B830DF44713FB339C345C6885D082F9DD53A98A11A63655872349147D
6C58E3FD8FC3AA32708C66BDA6BF7AB5712AA28AD40A5136F4EABB1B122456A5
F84295909418EEC750B14B4DBF6443740F673259BEF191C2CFB89A11385E975B
8E80F106A181EE4DFF2C99AFB4F81377484F24C5A765E278487BA1BA2BDC48B2
79B42C2F2C734025A0516B08ED5C4001CF2868714A97E96CB157D134EB98340E
336635E70ABB0E7AE76565FAB2F0C4EF663FF588450F36BB0756B3AAFCFDC024
857322361854879B537E4FA1B215711621B5BF46D43A9E8780B9830D3E5F2F6F
B63C7087DE9014D9D7ACE1AB63A52A9F46D968FD7DCBB931D3ABBEEC05024B38
61F4DA81A327C9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 44 /comma put
dup 46 /period put
dup 52 /four put
dup 69 /E put
dup 73 /I put
dup 74 /J put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2D80B2772B05DA60F3DC15A815A6BAFEDC399C7956E75
3851CB3588E22936FBFB63A58300298B11C45D82385C083D07AF133BB1BC941A
FDD9F34D5E0B8087EF2A58C54D8AB7580EE3ED58AEB83B72CB9028F472ADBF11
05A77651F118824F6CD00209EFB60C1D32D46A78E8C8DCB8B0E742828E3B7D17
DF5200D68189C91FB8489CDEE8BC223C4281DDCA5F7DA80BD5C2D66A14695EA1
5F05E03500579ADD440ED2C57F535807560C6FE3873143D792734FEAB93AE8DD
633BA6FC5683083402BF086D23594AAC84A4868AFAA32AFBDF86142B350F8F62
E2531321E4CCF34293024EF8AB617BAB11A3A5EDA03CAC5AC431C893607DF8E5
C3DC8646027A7554625A16FD184A70DB5FE6DCEA366B64430A147144CC9839F5
72829FFA42BC3A8406D680E44A0305C9C9E265E91AE82EDF30F73730DCD4ABED
B34FBFC98EB355638DE8E4B5978033614215BC45F259ACDE7BFEE1E24D3AF2C0
B8231A14999CF83A662839B75833A8CBBDADFA27279208F198ED621192CA1F12
1140E1373C1FF0B843B3BD6F32E0B2831D22432671B61FD796907C8583D81F85
3AD78B332E5FAFD30BB53347A3DE567FA19142761C2C3F18EF11CBC027CE6309
0E46E0CD87557D673B49D0E8BFB4039F795E13595A4E3264A7648FCD25AD2D65
5210576DF054A25A140F8BB71B5F0770A41073AC17C34FB3908E92B50682A3D7
21707D9E2B50774E0193B40B4CFB2C1B5CC6340D8A522F722E273D4B86E95913
D53D41AB9ACCEC0BBC956DBD91A9273819C199F558FBACF020F002CBE58B27AB
52FFD11B096BEA7DC482FEF73BCD1AD7011160792A8099C9797A920B35CAD736
51A12BDE391F495F53680C9DA65D61425E926C782E81119B8897F4F923080D82
BBF7DA911D8A5C7132FC14C6078E81E8D25DD4DB6AF1310D911A67600754EBCC
ECC3008BE7050F70D49A85FC13A6FFD9B47BE7D7DF2EDA884BD04371B4A4A3C9
2125F69D44CA8645F57CEC14D00F916C569BC16BA0109FBEC68E2F15D86554A6
6E0B907AB5881125A38D9A0CE0ED10F356E76E10553E1081D0891C7D1AB10495
FDD1F457FBBB6FBC783AC1FD50902449E5384377CADC8EC613D7C3A3CC9877A4
5398EE001A4A0A903325063FC23ACDEF0FD3DD1D1B4EEDEBBAAC48A1174CCDEF
88D14A6697EF1EAA705C65D1F178DCED532F88AF7E8B0F6677B33655ECA899A4
AB07F7050EEBEDD65497A7F9AF01E52B7EF5E7778F32872FC2428B33C94ECBB3
AA5A939219A5FD574093F1D356120EACA71DC71D5097094FEF50989AF4380674
96F413F45369B34BB294B3FCA333D62AEB76835BB66F67E38A8A956897AB5C22
790527158BF8C1BD0333433797AEAF855D846161EF0079AEC83ABDA930A9F287
86C06E3696EC43EDB27ABDCBE29BAB6AA255F0F4D67BEB4E0C5D6AA9C5E8D48B
A40911E25F467ECC897F4426F3F69CBE22311800FD110643B9887DB0DBDC8A23
3D0F080CAAC944D92D589C66B19CB384CE8AEFDC4A491577D34F0BA177AC9DEC
61A3331DDF0F0ED8AC4871AF160A5D522FBD37EDE2FB78A3DB318A0086B724B4
F8DE2289D3D1F18C1B1333A023A6622614D4B5D211F66901749B76665A42817B
91644B492B66F1DE8F62EC3A747E1F44C71F8C48424BAB5CE4604A9BEEBA320D
0B778E1DD0007FADFD192686A332AB20820E5081E5E6EA58E554347DE37A2F94
6E1C4F58B5EADCC5BA6A57DBD4B970612A940A01A7311958E2B852D03824F77E
B7446EF2245220B493D0883F5244C9FCFD22E6A6CBE280D83F713CF67441F5F2
ADB31C4358CBB0EE52608CCB1309AA2C37807D4A842C5225537DB18B1914F816
17DD9FD26995C32924AFC50A0C93500082942A72B79BAAA1EFD5DA94A332A634
AF34427E85E5DE40DCA9664DB4E3CF8DE3EA8F5553CFDCC31CEA5BDDB1561DB0
784D222F64B4DE867F0C8EF548F95367D732DBB4EA3F93A5341D9DCE5EDD11AD
26A052098AB6551CFCAAE02DBDD59952B9599FE9DF27BBC4F019F17A691304B2
867C7E52D638A32FDE3B1F311B2910A0E45F05AA5E76F799471C861892DDEE90
88733262AE99E644EAC639872C6974D6BD370C6D282CC41DB64320FC91135C82
68A100472DD135811D084F190A27DC9886DA0268D8A7D82853AC43E59B7EDA27
62336B6E3C3D9D70CC069B4FF3055516CFA6A97CAA16316F22BCB81DB250177B
C7E454352FEB0784C09E9A8027E19EC94003DD50774FC3D81AACA87BA2559EB9
0A1C9351D04BBA15934D49727F33573A72B165FF3A03C8F1B54526FD3D502D8B
ABE7E0814E053A2637C045892FE64658875DAE05A2A3578B15AEAD3EBE7FEB55
93AE77D22DEB20330D488DA52DB7D24468A0C754B5E9C839B0FB5AF072A304E4
A8CD4CF176010D7AB5D492487707E920F78F03566ECA788EC2452DB9716C61DC
577CD397D867E729A69ECA4E9928E68643CCA1420B1B110053EAB742F54B55C7
9A68E37B262FF500DE20901E805C4D72BF928D7EA71F94CF43AD96DF9779165A
726484E294AB093CC4571C9ABA53940079696CE3A4F1DA15D6F6E19C2D24B779
D3EFE88BD5E5D71DADC5E8E42616B4C3D583ADF386036E301914B411D8F6E30E
5DD493BCDF753347FCF90D906C18281892F41A69C2C6EC75D0B568BC8DD96D63
642D144649A89C26668102BE8824FDF3876508CB6BA0A3BE8657AE9AAF8801F7
0779CEFF7BBA183CB19A85F940E9C28A0E72D6764B30D01BC0AFE462804E9379
703DFD768A7493567157AB0EAC1B0DD05B26FBD1754BB006D5AB4F1E6C9752E7
1B064F2267966F7EDD002CCBD4C2095B0E527C8F9F4CD2C84BA9F586C5663E81
828674561E27BFF50B6F29169DD8FF4C8A90831B7323C9D2D153C6643416CAEE
D3030E535D9E27AD8BF894B91DEC5DE54234DAA637542C42497A136048D717ED
82B743EF6AE1F9DF7FF03F46B693FF6B5EBEED9D16C139A42041F24528374734
C54C426D37E303AEF17160E7F64FBB83ACA3DB34C6D0BD4D5963DA15CF9C2D7F
BE1BCED712A3E079A4B08C640F39C5F562B63DCB99631598D0D2D096D9E06423
F493BE7CDD6764EB11AB71FEAE830A09BAF800C22F77C1FC413EB9C422C76415
A57A0D27454E224AA00DBA91BA8646C542AE4DE7BAC221AA122DEAE0A5D844C1
CF03927450CA9FFD3D2ACE66A72F20C253D688388BB0D69B82EC97F5DBE101A9
0216F8495E6BA1D9B46BACBDFD13F5D0B9E902D8DB0941E1E34D70ED7B465265
01706BCFB2691A2D3FFD1F91B9B9FDA23D907C852DB71235FFF2A72F592C57FC
41E742247E1F5BA24C0BE379BAC4D7DE066D9264B711224DB0A8B71C4C055A80
E5AFA8721B6029C36A31D08333D56FEBA78063F145458601FF7829B855374044
6B30A151A1FEA4F2C7096211C755F4D8EAB8C0D3047E2666E8C7B66A90507897
9C1AE4ED2E6A1C41F60FD6E1C30384D020A89AE7C0C6E1F8F3D67A9E3EC87564
94AA3643607417D4E09241DC4991DBFBE768B6197987E9B58991CA1C486145A4
D76C4E17D0198E991B3B0322016504E11F7A234D6F8388963E7AB7CC23855D31
0AD391CDFD806B96BBE6C450FED15F7063EB4E9381B260E772028044042542C5
E6CBB81A07C9218A4AE0DE79D81A76EE427ACEA62FE84041A27EDDB35F425110
3B8AEF73CAC9ABCCF09A7B7A4E4697322A27AAC281E3A06ABDF08FB06AA8D49B
42241232121A74F71B5178ABC09812ECFF3D6A6F9DA7B5A0FC2A34A81E7B416F
9DB7978B255D0EB35C08C38FDB2A9AA885ACF60A5C2CE0D5C8F10474ED6B0D00
B20C5E8720D628F202EAE98F1F77B3DC0F7C6F0B5008664DD39B774D972DF58E
88CAB8C1D8CD91E783964760B20852D8BE081342E06E75D73EC51D5CE7CD3203
1D89C28EA0FDBF221848FBCFA17BC4DC1D24DF2BD74EA7DF2A0614728693CE80
271E3EE71747AFDFC3BFAF08D3590E4A46F1260F1AB5B75E81BE00818EB3D33D
AEE06D0A1FE03FADE0B80962EEFD34F3376759AC61F76450846C248E68DF4FD8
3D0D1A22EB697707097AD9069C7A79FDFC9EFB73F28A276770E1B2E572458A90
1FD0D3E1535FA023904281AF236BD137A7D5850551A12D171A9ECBD79418B782
8AF44552802BCD5D692C3F79E5F0B1E40DE755890417DFA38418DCDE987B60BC
7498B04BD3BAFFA2AF4B4861FF630BAEB6606AA56DF4F0A14A2E06DFF088ADE3
BB6F0526E63E5449415E994788209363FB7B2ADED2EA5055EF3FA99C3EECEAF6
50B98A29E10CE9F099C3BB4F36F126A2119DBF488528A31574FB1250E0D2CA72
EA882D37A160227B0296FB2CAE225E8ADFDBD3C5BABDFB9D90C2A5C147D75C57
688F7B7BD25A44DC73A1847C0626E69E3B60B3BD7F3DBE8B1DC5C73E68264C01
1A7C16AC2ABCF6C2EDD0D729F75C3395DF3A739378190DA172605499B9DCD447
BF0A73BBB606B042D483D7FDC92D1714EF8869C2AEC3EFC5448BD521082C22FB
86CEF1659F0352B8311D338FD71997BE8D0EF6766255EF324E1FC67727EC1C0B
A101505A9CB5EBCFFC66CBD5984A19BAC5174CB1A25AAAA67CE993A2D9F6D645
17638B78842993D49D0FBDB4F02C117E7F47C54060376362A7000749B6D0DE45
311D04649A0BECE51C2E4B5C9F773614F88C4617C3CB315BAA5E501937E3C22A
F0534BA175B0BF38887EFBD9146181F331F27989968A39D2B2FD3097708EBBC9
AE6CE53686CCA3C89F47F200605986F7EABDE0F64C33E644630CCDF1E022209C
2C85FA5CA68A442208B33BABAB323CB516F619D7429F940A0679431332136F89
793C1F09345013156E94BAAF864F334D997E7E64C48180DB8C440B4658CC9F06
F5A80EF5C613BBA749C0C116CF0365104F5F1E3E116BF5487B05985843FE5091
212C1844A3235881DC5DA9AEAD192EB8DB74E9D5CB92B9A48F668992BC1D8766
9695F58FB0D9124E5EB71D62B206EE3227C1BA61CB25CB2990DC301E3AEBC0C0
BCEC3F777E2B1C493FDA42B81F84AC411CF47D6FAF3A399F864ADF0E01FA3A0B
C16CD227B0FB7E3EC1FA004D0BEECB59D112573E5F7B78B693E2ACECE7839FC1
E1E22BA904A17893281D6A3DF0C43E061B814B033686E4CAB74FF44B1C35925D
298D32198D889C8B3A33FBE170F41AD43116C2CDBE6E34F9308272259DC24E57
7AA78AA2CA54296BF7CAF3992ECA96A85A9E485C7EA62B7B056ABC55CA246B2D
8AF53AB40E23C1C61C73E9D100EBBC921BFD6B706B7B91A4624AFA2274B74170
D4884E841553C90244BCFB572154DF6B9B72A7E0555C2ED8784B522448F66B06
AEA6627E386C472151D72F201CD99DDA33820D533C0350D3094210F09A296351
E3E4F7E50676964277DC189E8DF6E58B9DC2FC0F43A0EE8A75AF1C3001D67BC6
05510FB235AC190B2943B91D76DD3A316B9E48B141E4FBCD50F6807D709E99F7
1C6942446EBBFDFE7AE4BB392E270500A8E0DFCBDB9A3CBEAD0F8188A5A21172
C8E8A0E6975571DE831854A6A18D89516145805416B4F612939835B8FA37DB55
AB1696B02AAFCDC9C4B387C16E27B6B3B3C53EF7B9338B1071B5F37D3F727E31
9C4E9DC0F56DDA7B022CF363AD26C0FA6FB6A387C9CAD45637248DAF8D68EF48
F4CEB0A8530F49FF1C29D2973C169BE31CD68D5EB95C52B69CFBFBAA1C05986C
3939F0514F8D3125487AC73615F3CB80507683B2A76878771213EDED78D22052
688D1290AAABD09A604E3BBF7BB25CED1DE7D69B457109324D280A588A37585C
F7FD755C8EAF66568452A8A7F4E460EA6F38F030B1E0284B27522CF3FC91B6F8
5D38938ACC23C260D9CDC8686786F381F4DB4A62A248BD4BC63FD81517949452
28958E097E7F89C77ACBF7C34962E5CA1B970EE0963CCB3ECF67086B88B59683
B650E4220DF2BAC2CD79BC63836F58B1CED7A1BAB06690F2A0B94C6EF443F783
56695CA694D99FE4DB5A73BA4B96F7FF0CC0AC7458EB834241F96153BC251FEB
8DB1C30CA857F3DE05D965A2B05EE4B5E8AECFD3B462C86E576172DB707C105E
1009B3AFFBB1AB3490886402B1C81D1155365A33B5EBE1C1923FF94CED57C95D
E8280AB96C6F139BFC1042873B4318F2EFA6FCCD5C2CF882420D8C04B6C83AE8
662FDC83D4D48E07DFD0A18243520723F46A1FEF805868778DF0715D38986EBE
71588551B2EF46FD5CDA1780014CB9CEDDDC0C51C5717865B7DE2FB497C40988
249F2DAD0F305880A4D04DEE93F25F94D041C118647C6F73B7124851C3887D53
1FA8DFD97D0750C59EAB4E214CD38BBCD1760DB0874958AB91FE793BE33B50A1
76E369641D0299C1A89D46E2FAB8AE8AC44EBF05A02A040AD86E17E3D414F6F5
2D10DA0C5BC753BF2DAB446C4924B8BB9419A0C282BC356BAB9E9595E84DCBB1
7EFC2C00CDE0FB227C7098D252073013F61BFAD707BCD5D6B6864F6FB02E3ABB
4E60FAB7059C76B3C80801372E48D78E87711B7E2B0D44061B56C25B713B0C29
85C656AF841A146C61A636D24E4E3281504E85C3A8F624AB7105563B85EF0183
17618A00CA4A9C99F2D9BB837F7DDEB693D72F19E7942147A635969CF33B4FAE
F933B71A5014BF943A9B22A7044515B35BAF5D26DCEDE021681D4602FB72D693
F807A4B545398B4D6A4A8677E01C9A22E7FA7DF8D5D1540F63234619659B63AA
796CE77321B136564887687D20D6B34D5C900FDE944FB72A6321F06747D08695
94307B82C66ECE49F107A2C55EE1EA6F4EACA25D2B26AF2CEB9E50AB6A07FF49
45A5D5C9C189FCB75929F92FD67479AADB24300D6A8879D3DC36F093AC099EAC
20FC2C198B25805F341AB13FA9762723F80BF3F8019F80859B92CBDB91B10CEE
31C79C2CACA42920119A695485DCD1CA75264A4563F2126B82475D70C5F91D5A
69314896B86A4EF50DB764A2AB42112EC05953DDFAEB31F01882105D38C0DC19
634C2152235F8646DA8568ACA5A03E4C9DB98F84E7CC9339B913C57B033A47F2
EACBDB9CDA6C8A179C1B2F77F889A9A1D8AA4A429C6432849E4E31D1E8B21543
9CE8BEF2C5EE362C3652A66CDF4CC3F04086244D211641C741CAFE934023F312
E9EE66C6C4454B13C39E3120B86325A7A2A050B728D493E421200B3F07A044CA
09FB8F7F25231A4F7829853E6C12C855312FD4AF9D2D337031932A243B3D74E9
6827487C52B82715C38B4C9DB8E4C8891794C368BCEE2D01A46E157078165F9E
278FEED9EA5F7A04A1D8FB64FD0DC69EE510269743FE227A4C90B305F322BF44
95B2E6949CCCF23F966A24290A0C25A8F7FC5B89836350E4A52417BD6186EEB6
523CAAF925C8CFB0CCCFF81B10E15D78AD5F760DD99182060C00EA0A983EE9E9
970B3112A447DEC96F4E138C94444A9DCBF4ADF3660FC2942737F7DA1A9E240B
AD5102E2E2668A9FBFAEEC9AD6405ED2D805A7515BB3C2D5B4DE04889039F957
B8C9D1E0F7326027007E7714D8DBD00AC10B142097F1FBC4B46CEBCF4AB287E6
9052AB45F4CD1F08A2A7CAB72996800B4D81E36DE74CBFD1ABB9F0E86A2E9A92
9FCAAC8F40E49E19104F1EB5F0971151FAC3C96BF62F663F39CA52C5BE8900A0
A60AFB41640FA921234C654CFB021F806C1FF578FEE65223A43654894718CBC0
8C6762294ADF66EAB966E74BDBF923E3A6EAA471D443B8FC34A4D5EBDF8DCF8B
2610719889E84293CE8C0F1FCC320D718D32F1C9886C3117812A87310B4202E9
E9EA0D8EF5A52F40766A02592735956DE7DAB7BE54A1C6AAE86DACF4257DFD0D
6283E0474268F3F7A6406EBA3C144C2C30E51CB76041C12A66CB388BD3C6947E
3BD5F1CB8E031778ED51A7A9DC6C5BCE152F86B13AFF7DC2A448D5343D191C8F
C4FDAEE66232821D053A7A6FC76659911DFC056C69E05517A667B0A6129FE4A8
7C0971D5FB42CE081F25A9E3743A77CFA982EFE92745D0AAAE6D6CDB9C969314
A84148EA3D758E5B5464810E5CC0D4662B13EE6635C94663FF859E0F44AC8C64
5AD34BA45CB2DE1640077B0A54C6EEDF7BC214424D62EBF95B7CFA5F7FD067DD
9D6F4533AAA2D4644E0DB36E3D928E7163C14E63E903A1C2AE894605E2DC91D6
F18076DB9998DDFA452D26302D5B3FEE1FE361BAB723AD15B7D3E77D6D668C07
B18063A0E9D55FD0EE7EF3770975F2F096802DEA0D4BEF00BB83185BE3AC1575
A39579441BD334BA3E2EF94288DF00C798D79EC026857F6927D7664ECA5B83E1
9AA6D73951697BCE7ABD5425C38179DB5A18B3560EBEE60A56A739E570AD8D6C
73544C0A591CBBB6F33548A9682F9810801E1C1156B0E5094C9CED868C1E148F
6CF4B2473A927FD6CCB437FEBFBDA7F5DC5D5307295641919BFE0A28E2425126
CCD982B5E20CB9EC9EFC3D51771F19B5F355B4AF3407F1D6196F20DC0F64F7D3
06C2FAD0AB82FCF750D788953DC98423E61D9DE39EEDDD8FBC64524CA9A9E035
99563F4446FD17AAF68784017E68BA913D378E9924BEB6B66C3B89825E44EB47
7AD819E3C29093D248CEEBC30638522A8A9B755E85D0B7FFA49C565574895D81
E20B6FE07DB290ED67FB99C199EEC89458C6FE4A2D9BB4524FCB8D3793F9B57B
27DAD833204CBC02BC7835F092FA3C38F82B334C3A5FA56E997744CF62B831D3
211CAD987AFBC1ACBE021059BB75115D56E8F04F639D8FE8F97160470E7EBD51
57FF9123754A86809DD782BD63601BC7B70E5D8A94CF20A7DB7D4B733D7E5AE3
86BA64E2FC50A3D5C8FA8CE0BD1256DDA5EB013FCC4D6B4C0DD06FFC3F41D1A5
06779A31A9995A35F3D657BB826BE5B1C983B041C79C22A26C65745EBFC48081
8D8EEBFCE71ABE0516CE5EB19CD5B9E8BFF493E8CD63B04E27EABC28FF444AC4
9606475C472FE6B901B81239689F246A6D2DEECA57B294CD64C3F8AAAABED3C4
7CC0565253D787B24DB2804C4A4FF4599ACB4BA5EAA6CA904B838E1DE8A1B0A7
E8E6488FE381D34A3F525372DCC68E8195B48168ABFC0B34FDD65B32C686F151
E2506A8C7D4E0284C6FFEF54486DC5E10C5F49B2E182DF805F120A2D7AA110D6
77EECD499DC930822231010993B11F59FC50E02A8FA91219A21F67991A32FB09
C49D5FFD33C719C81F164CA2A8D0501621D604ECED79C15346F535E56EAE8292
14A41553578662B0384C28DAB3BD6C088914967A5C329C919A56D7AE7ECDB275
42F35A1F85A5D958D5C68E2244433787589129B27CDCDD9F3C6BF2876488D37C
88E06A12A21F4CED9365A99ECC70602CEDD533C26F32D4671146B00273A05F7F
FF6C0B9FFA9113C45D0F582EAB8DE2E76C2FCFC9824F0C7F77B585711AF09AEA
37A7332B63914D91921A341FF9FDB8714835505C427B96165C2E3F885C47FEDF
8B4F15DB1815D291469593ECBBD22924A69A6A5D8ECA9E8E15DB805CE07D70A1
1F1CE8322AA903674B8874E912B417A40E3DBE304A9A33B14CC99A0DCB735EA2
69431D01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F966977BD8C8D07FDBD
F4D058444E7D7D91788DEA997CBE0545902E67194B7BA3CD0BF454FCA60B9A20
3E6BB526D2D5B5321EE18DD2A0B15E53BCB8E3E01067B30ED2DD2CB9B06D3122
A737435305D42DE9C6B614926BFD44DF10D14402EBEDFF0B144B1C9BD22D7379
5262FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EA4FA77428025D4059BA
2988AC2E3D7246BAAAFB89745F0E38580546045527C8779A254DB08DCC6FB9B9
0E172209FBE3857AF495A7F2B34BC895A39A30F903DC6E3202D29AC110D868F4
7184CB78407B8B9D42F6375F67FD4B828592E4A977B9E71854D143CD1A9EDCD1
767CC2929E071FBA4C3D17500E28A23F697B5D5CC68D5F56EAD14BD504E07182
3FDC12F5404E74EC1C02AF00C1A6A17F958770ED4A024F5B3644DEFB61F2578E
56013D0B4E7CA3AD255E23DD63369A921D427EEE0E098E8148B16E8A5613A8F8
A5F1099E15AD16EC554B644DF306F0CF3571055A81F1B464529DB49E919F88E7
581066BEC4765E31BBE28C245BBF0B74610DBA30C63A71A4F3B60593A6B41C6C
636C980828CFE9A3362FBC02F1967F0F770A4790F90DEF9D56E0A76B0703FC58
2841E6E8D984FB476D4FEB960FFB6B386EC6CBB9EB83704B0AF63F38C77090A8
DAA165E6C6BC86601B14F8E9F504A9D578AF05128D8C1BCEA9D21057958D5DCF
63459352EAD6B4A2A666CC5D85855641CB31507F9E30405977B74356FE985A6D
541884CB65A4F5A8D4C82CB9D82846CC510CBD243E98A0011AD37A81047021DF
46F69D7C3DFAF2F10F1F0CCEFBE12EB70420BE90C450975434E223C67D24226E
8B62BCA6BF93B0B1373AF55E4ADD92775B2DF199B6599CB02DB64B2D6160BEBE
449C057B5B2D226E0F5D7CFB5C9A4A7184FB29A595E91252AE787861A6331FC2
6605C995D55120121CB463473A7CBD22F270D56CA8E0DA99832A468D399CB9F5
A1CBCF0031D99F3C4F4B78A0944BED5A7B1AE23E3A66EED453917F9296077306
06CFA772BE60854A30885DC5FB8417E0D3F7AB45ABFE186D877A377F5D17DD35
0FAB81745294E35A5DCAB20321C6ECAE276B63BB17366867F346CAD53E06AD96
091CAC75465BCDDFDE9C4364B2A8EF496C4CDF76B058E4BC1F616F6CF62FB60A
64F81BABA7A729B8CF679CEE01B1C985558E8D1493C03B834F3696E5511A1917
2AE7E16AA8FC516CD2CEDE020BC5777598165B6EF2310F4DBD54FE14071101EB
47F4B2B59778B1EA7DE13ADF46393E07DBE2082C2487944A71CEDD4ED7D3D877
749D2500636C3996A34EE0CBA770F6B6A655DCB9840AA8236EF3F6182E1C8997
395077D9DB15B9D0A2DF9A3F6042C94E6E492C965E4E8542AC4AF5B21906B6E8
4AE2B01C0810E38BFAE99DD83EBFF8E145D09F763B6B134A25A1CC067C6DC1D0
7286045CE90BA968598D83E5602ED96C72A424848E211C028CB344D95DA04ADE
4C5DADCE9009A72B6EC01E7B5CF8C52BDFD2B416F5E1833F514659D94BB2F452
EC4F2E65CE71AAF79106A0468D76D283ADD44D7DB5760AA429D61C1DC2E912C7
9446C19557A1D12E7116B765BE522EA166E8F0B604807215323DC5C2DB1F2E05
246873CE189E03FA291A961E4AD90563A8F7B0E08A67DE4CB3607C6ECA114DD0
DCE97976E208615F3CA13FC44041360086A4A173D5441D9C33A38013099F73E9
0FBC96808F7442FD4D56DF7C4F2D4C9B2301F7CE626B4C6C1617B8F1584DF195
F92FC6385070EB02BF2541307E4EA34C131815FB9028C118F4B792CAEFC6F51F
4DC115006ECB287EAC4E447EA356A0DFEA611EFF604D7EDB0DABED8E38B5BF4B
D03BA95B86D5DF86F53A424B3335D8DFFB4AC8E018EA2CC7B53A5A7B7437D7EB
4BE435023D4D9F726B83CE5533CE1855C3E431D0043BC126451BB6D6DE22BDED
A1401D7F36B96AC13294C5708E439D666F8D17735573C94A4181950C42015E5C
F4D07204BD0B76D4674C19051622E4F4105A885E6BDD573C1A6128156A068794
8CD91957079FC32D43418B774D3474B980B77B8F4158AEDEECD295ED2B1AB215
FAE4DB7E9A23DE7CCA8F576379574B8547B9316610D3349BB7240436A3DB4A24
F05F52B51EF6AEA2550CAC632D401E4131A87056BB6C7807FFA93DF9A2223AA8
A06DD528531E1BDB1DA2D7D31A9F046582EBB0F4391734C17126990063AA6CB3
1EA7D214BA1E922989892DD9F44B6A3477F7FB725315DD9976960CA235BEF1C5
2837299BBF61116F00E5DAB074CCC84C6114C09291006BC5D337E02B4E0C52B9
7DFF68D9AE078AECC28F0F2E86017D9D56B549DEB8CB8067573E831411160576
4D26C55A02568B8AF01599F3697015674F08BB462790B082C1B6C5849C3F66EE
0E8D0794AB7D403B5485C571B25EF6EFF2F879DC67F6D9BDF0D7E4DB5776F668
2F6E1280116BF150F62D48E711BB66BD9FCE486D9839B6C903C7FFD1173A411E
04BE60CD0C2D67D1B891728740381BDB5705A5669A63234BAF12482E96713988
490D904F87FFA718299DBDB290EF5617037686B5D7018E300A77EA70289D1480
A8C817F151E6E9587F63C0D2ABE64101C688809ED5D081A4021C5984DA8903C0
CEB70B778BFB7F4697D9E0C69B7844EC1E798C4371262A04765270DF490B5011
FCE7B08FB076A00AC2075F6E97199742B8C122E736AE68F1FEF573377DBC6569
3F22337E489ECDAEED24D9915D75DD39AB1F4ED09A9AF12E7B0C71430E98E518
687F466F9D7ACBB984F48EFD92703F5355222F2C725DA2CE3ACCD1296059DC3C
83F28B4F1C38917556FB67FC0CB330CE5D5438513F7370D96A8A8F37D4B3657C
0EDC4520EF9DACD7C9E7181EA9A9D26F089590DE9D53E930AAB6D98077208196
30FA9656004ECC6AF10ADE708CF238F2F60DB194AEF947281ED163E5E8F74DBD
7244997272A6EB9CDF83F6003A692EE32559BB2A95DA75518E94861191CEF58F
359806BD61478858FE535DA0F28CB65D12BC1728A1AB85FEE79FA096BEAF3517
D8262C9A2EF1DF1F0ABC056D8E847869B99926D5B787ADB28B2250FEAC827D28
E399E719E2C24A1D23F4209FDE0ECA4E88CB29F9B23A3EC2F06E9B7C32D1E52A
A25A2D1BEB29F7DAC78897F27ED454D4D917230993392AFDF84098E0E38A04A5
9EFE930B4BA25FD0608B5DCB74787864EB9FF6942C9F596B1D7E4FC367DDBB58
BEFE7F5CF8489137FB2739C9CD05A59B51FC91442DB39906B404128920462DBD
89ECB3ECFFCE351A31E3651C616FB2DB22B0613B0EB605DDBE6ADD026048B1AC
DA2BF65525A3D15E90BDCCD0D8724ADF85282E923539A93D392B178ADC5F39D4
FED38C760FCEF1335490C6687DDEEA39C737940925540F49CDC6F23D2A59D9C7
18F530BEA40FE722B3AFC38A96621C2C17044B21FA7334316308BA63C1C68CA7
F788B4480FEE95274EB43F1F2C21B9E30932991127F92F67A84A87096BD7A39A
B060549079D2ED45152EB27CA2C606B5A3EFBC6772B6B326A6C8DABCB6B7EA8D
417FAA9D334AF51CBCF72A629F9CA4FC6FB0067860A26A414E2B5EA2D4D7614B
F3A60DB39C6A3E6CD439B81824ED453E19E39D0B3955F9927BEE3D250378E7C4
D170E904893F1286E83D4DC09E78AF3379BFCD01CF9FC108BF9611311710F8E7
455DA2E2D6F158495AE9CE8EFFC672DBB2BB6AFFB4A318B5DB3BA291323B677E
4317041463EB79F2998DE3536F1866D292DE56EB36545226724A3A7E62AB88A8
060E87E0D0243DBA8175F22D690AD9898552DB87AF2442D1CA2051EDCC1E9A8C
5AB7FEEB29972214099665FFE7510C17B524BE4BCBA1F3F9222727F3139B426F
59F85F2000610FC05793C5A4753435D991C72B628E1B445FEAF10CD6AA4947F8
EFDE5E1CA3601227B1A18DD563F9DCBCC506C94FAA300283588E319070190337
2BF034AA3ABFAA18D735B06D0A677837AC13914DA4FDE4BF9F69CCD13AFED2CB
30636A595633A61938E90934543309839ED73A3C7C76A4CD7685AF39F3596316
B789136C7B923D4519156DD390C48D18EDF4F05D0EDDA8988A86751D639CE21B
40AF616CEEBFFC44DC96011ED2F334CA41E70FD86C0852EE4F36C90C07804013
41DBCFA9F6695C6CBD0787FF3B7A022DB308C98F705240CC1D0178194D0BA4B1
35A9BDD4BD935C5C54949F389BFBA3C198DD3FBEC1EAF036BCB6B738FB09D532
482EA7155B8EF9B24F6B3E422E27C2781A3F7CC9AC62075D60AA96F65566277B
79C24D8931CB1763F0A3B79F61026AF8408B61F704FE474172683337D5817313
FBB408D4A4F2A07F7C302764819D77B7E812F0077A5F3F90BCB021E28CB2B8F6
E7C2E1E1F33F1EF69EA05179DD68B5BF130990731479037228032C9C8121E1FA
389C1B8E7D12E25939133E341F722EAD764D1E4D560130DAE0E677E42020AE69
02D17B357EFE00C7B2C0623C486BBAC02F6D063D7B1A154809D84FE801D9334D
0A0D8A43A67DBDD76A36A41E65FD60CEBE76B7EBF96124C3F44D0988BB712783
D5AADD955B10331D6680760D088BED7FCD3ABDE10F9DCB729A16359A24F578CD
1E3E1E9A8371DE7BC95F0C5D6968DC12DCF6452CC4F4D78A061EAFD48B9DF840
645881837616B9B246B8F3DCA6697ACF787F18087019925F239DEA86B191AE8D
37393D4F791EEFF2B4CC4BAF6C19C8446A96B2BECDDB42BEC63A5E5CE3F4ABF3
E84B85A8EB4E33E7C3187FF93D6390C2552B02099C90EEEDA23BF2E597C92F89
98564C89AF33EC98FD75B5AED558ECF8037C595F09BB217B5B05D05A85258ED0
9E4C4CDE60F0C7CA445B9D184B388B4F8E5D75D15F7626D3C00A83B462E1DB97
E40CFB4B3C1B20B9F049A64114391DA1634703EC5FBDC89F15DC4D2D77AA820B
0033299DA79210F4934AD0C6437F6F2B35DFB37D1B0DEBC420494B9719E56A62
2DF1B2B1AA6BFA0CE2C2B39CB2E53556F7C08536754DC3DAB7BF8E5A35257064
C9194FE4B834E0ABDF2E79AE0D6E7B5B8C1F99F7E33B5C806342C9587161D549
9D86FD8E8E6003E087AF32B6F12BD6D9E2A03496F02556E62662EBC38A74D380
ED10AB26AD8BAF8CA4892D522641327BACE650EAD2B4664A5AFE42399562555B
25B44C617D1261E8DC817784E0655CC99932553FCE545BF53BCC11BBB938EDE6
E2ABC33EE6B7DE5F43986137F17F3EC63713BC3A2900ADE9E2236FDC670B4A07
4512035A33C5AB7CD89C77E77DB02D79074A0BF6662DD4FDA24DA6519E8C68E2
04A2EC7235B8652B4BE419C888B4BBBFE0E914B2B3709EAAAB6F12CF39579AFF
4C55368FA54E8CB0EB822D85F655DAC7B91FD58D8B9A352D27669416F1E81D25
BE9F9B09A11FAC91853594B5A0B35FC778D18BE6C4B7946F0DC7015E1A70E88B
99D5BC8C767E558DB10C9DE042BAC30EF96216775D61E238780D41616C63DC2C
6D908389A374BD7E033B1550CD540C0D43F4A0F604B8379FFAD37A92A50F2D5E
B01DEFDDF41D8806D23DE261FEC7392809BAA946D3E5F02E586E7C5F8F51B5C7
CB75B3BC4206D97D605321209F75D3947869AF85FD45F9A3661993560C0042AF
524082E430D1032BC84235C6A5563F8B14BB921558AE4E39DBEEF7BDA2B45DCD
82585081921E57B803B21F0CCD883B81D09F6FBFED056B515357785490281CA9
B7D36463B7752156AC78E30599028012E477412FC21E56BDBAE5EE5A692FD051
618C132D302E778F9691F91DBA197BB9E7BB12D76B9398AE476084210A2553D1
3ECADAC9EAFC9F003CDB7D6D037D07A72667DCED48CE74AF4D6EA56C82D51F04
E2E70CF9E9251532224B0DAB0E7A20FA79C06D0ED78291F79653EFECCA2B7F9A
DED50FB1D7D964580FD7B8C0D10AEF3D008E921AF82568279B1645AFA0F4C420
0FE37B99B96D31528038224C91E8E65B6509AF72599751EF2A4A8E85D92F2D74
0485111C6859FC75E85E7BC400161E2C60F857F63B482EB0D4B9B73C664293C4
7DB408F7F8645C2F1978B8E21091268041DF736B08A21A5C793B3AC458A0C392
1BBC9D8EB014CEEC2F57CD5A3E758422813C632D9F7C3C2BD78520BAF20F6A2A
4CC667019F4DD6D30A5C5AA882AE539DD0B309819DFCB3E64D77A2AAA7C5AB0B
DD64D37BB95B3686B902E530CABC904083D4DA8448C3851877811B5152EBD21E
41EF5CBAA5E84E2BC51B82D2921F51803A9C2DFE9DAA5D6A0E821B8713A59308
A1EE67F98F0344C8A3845F308DC395EDF80D87AF56FE3381111299D65FA80575
6D0FA2AC6D955924C27578262F1CF0AA4E30471151EA0A85B96B841668B9478C
2DDA6FD74A892431820B77145FAB53758777B166586C6897AB0DB687B46FAFDB
F784263EA3ED569A49CF76773D1E6DAD2B5AF1CF4F92B1A6C819B358E939CABC
8C0E32E50E320255B0E5E6EE981EE71AB910FF38CBF7AC2526AE6308DCFA172D
1B0E669884641910BE6E5FEA89E9F7FD4CBC3E2B9F0DB5B44182504FDA4E62A5
367CD21B8B99F9C80A07180C35A75CFE11B7641ADF2A1071F0EFED7A79CBCF5E
4B986AD262E6A2D228CD9992830D8E1CA7E6A8D3472DD904ABED647D50D43592
63D106AE875B75F44094718E527FF8D889CE58B99BAA1314D5A5F8AC77E83256
7CFCE919E5BD57EA582B4EA2DA18E6054091E3C20CF5ED267F5A04E84C9BB15E
BE28ECDE577C38C0326463940D139240731F0AA0BFD1469D2D025A72C1A594F7
C958B1AB717A8132CB07180D03C964E277EF9169F3C54D6380DED2BAE5B04076
4A95FDD5E7C1D962431330DE25F689A8CFC70B7BF6CAEA757EFE8ED468C4B14D
0383DF5F17BA37DB0E8B4072146FECC206D4F7AB0DEE1A3C7780601281385ADC
31BA933F50B579550F8C03BC174AFE32BD16BE7C6344E04299A98133908F3DFC
E83F142E22AD612B5CCDCCB5749051A601FF603F76A382AD6BE2AB90E553AC34
EA4A3EB8968760845C3FBB4ABD77E8B6EE8EBBDEE328E2E626D6CEF3FD1DBF96
E4E862F00E6C36215E61B976006AA3D6A2967E9B160DD69D0857FB1F1FBB3A48
33CA7A3CE45A05DA20CE802F6984C386A3484585E2F57E079B888468FDE0438C
BBA794FFF54C6E6AC2C8C6DA6D26C7AD3934C13DD86C3D88141575FF4EE9705B
C37871F7C09309DCB61695119DF06CE67AAF46434322C7AE74925E15C8D09D76
B0BB7FD4CFF8DFDF563B065AA3D4854884A65C19CF5FEACCE494F04C5D449081
4DFA62AA7F1CE9669634C3B95A9AAF953F0C799B7F39BE929802AAC8F15EF265
186B788A478A37CBDC6201240A8AFB1DEF36FCD01E258F1E77147A11C284C02A
A36D6F8ABBB641F18C3F76D9B8C03C2ACFEDF5658B2A127F250D253FCA0B53F4
A48BD9FFE2B30C1D74B8182C095902D724A077F94FDF183D4B6A13DDDABD5066
5C0425517175647B02407B9AEC52564D6A8EC61720B6031E8317B7D984A1FEA6
588C6E106B66B810AD950ACCC59AC89B24536E0FBF037B26C4FD554DEFD2C3E9
B55A6280E9568B55B4722D87994BF2A8D02DD26121B68529628B90F848173384
835EFC7E82C0BCF9195DA242A035F62C733F07226987A219CC5FBB905589718F
7023ECE7804163833B05B345D3CB1D655242F5BCC8C78DD6C6F81C23C94CA549
55830D23EE45247FC5524B82B0ECE1AF54401A0D134B97CB2264322FFBB9138C
5EA02027FBEBEE4F2860CCB034699DFC48447C5F1B63B63C8A9AA2D0EC99E3B9
7F5B48ABCC83045991A9311D7C9B6ACEC3F888683F53ACFC1F64B1008777EBBC
2202D5DEACC74C24CAC5D2BCED685F57195A8E59B73B58B63FFE5E0086478EED
D037F72CAC7F90497E46A0255085E242490CC5D9D86CFB9E606756641C5AA1B5
79793BEE0D1D0C597AED9781D8058115170F49E4BC3FDEC25D308596E8CD42AD
F436C5567DD1875937136BDDBFBB950F1F94085816437541BF323C25691E18CB
21B7A41765CC585E32B0D2EFEDD04D870DF6BAE813772C5E2B402985C05F1FE8
224B4D9FEDC85C33508322CA59A2B92727F14237D655998FC2E934BAB53B8B12
85BCEB41B57B36ECB27494C613A3C02E51C66526259D4A320D21302AB6478943
AFB34315E10EAEEC839FE54C76BED31DB650E6DFB9AD2F50B03D443C57CDDC10
D54EC2D0D5821D1C3E53654540E6C6EF8D316025A9047D59ACF431628BA0FC18
D0D6C969C2F6AB5CB07D21BC865E3562D783A20B4E84D0CD38A9BB4DFB2C60B7
93B66EA417A6311C14D2765435FFF427D9E215A4622C655ACECF4EE404A7B111
3481EAFA094D14088E558A646141BF38AECF9CEBABC9A51309287B7A26ADD737
D43E7F2BEB9B6D8D5A4A056620107EA8EAA400C953601FEC0427D5F024251892
9430950BEA687419AA97F3C818037649497500B9C011443E02CEB7FDA25B6F0D
FA66889BA6DEED7F235A0E13CA6118B723F36176A14EB1E994943B5F6D186B14
73B85F831D619978CF6AC1521BA9DD5063339F72A804DA24811982170BC8E29B
71DAB8F95A1D34F4CE45F716F8AF79B4798FBFC6090DF9D8CC26DA89FE50FEC8
56B05CC196357CBEBF48C61B40E4860E3AB8E362A38A3BEDDED12701461065E1
ED22C39AD81BC15766AF82D7F467140A508123B3A86E116025A569067636E335
1ABFF3861E0D088C5655530269C15C63C081709503FE6E968267E1B463E2D89C
FEA2A9805A005DBFB27C0F82DCE652206FC021757EAEC0A3A93D30C50DD76935
CA3C30A37CE22481B8D403E5933118395770F1513033162FD9F77238CC259851
B4BFD1A8B61901E471638E14572D1C44AAF9ED1511087D644249416D4F4FEA11
697569C07E508EBF5335189C1C97BF5C7896D3D3EF143EBF9DB88E1160DF5F4D
F9A4F60CF1D440361D123678F1C32876941638ADC2B79F81BB842EF43205105C
70330DB0447AA6B82A858085E81CD177B239084EC86782F6971C4F222BD9619F
537C2CF99DC3E883642BA301AC90FE7D1D7E61CAF5DF00C7FC24D51A4741C9E4
0B1453079885B8B278D8FCAD5046C5AE21F4FF11C7A9A39DA2BEDCB52313889A
0BD40C5307611A384B84F549F4FF3FEF15FA59D92963EA72D2B7D79FA0768CF5
171334333C0908E00CE47BCDEFE00F984580D78701B6D6D7FFE64608CF12B66A
1D741E49A4726BD74E0DF87F90DFF5A10D9E11A00E98BB7027AF7E8704D8C613
1B7A253FE818843E3F66BC3F9125DF7902636B5D61AD1B3AC0FA21DE4D00C2AF
56C5F156F19C9344EDDAF31DBC9C39B4D41ADE177BDB43CDC921D6ACC2A5C28B
05B6D826FAE37CA0135D5696B00A86074B37B4975C8CA27D69C5FD1D642874FA
AEAF4011DD89984A578167D03B12BC82345A48831D5A2E1C4A9887CF31E45673
7D75050921D2863F7B9727738FC690E27CF2092B20A5CC3BCA7A1D4EADBA4617
63AEF62C1B5A98E8C1C61D5A02D1C90476B2FEF731BCF320CA9ADECA7B72E002
92FDF8EEEC4A1BF589B7CF1D77AAAEB4B0BE7CF6344CB87951529BDC64CEEB4A
948432B632EA36B39B2D0F1A94C2D2A7B3EA4797BB554FEA54B8E9C2430AFE59
995EA937ED20DDB5A45CC6C96B81A6A3CDCA6EA3A00625C4257B408B337BAADB
21A76D13BBDD36238276DC62ADA748DFEE21BF0306CA2BC2041B860138C7EAD9
79E84A06E5E12287DE30FBA076A81A9E14FB11CDD9A9E933BC6A2EFE4FCFC2F4
7031FC1E1D161DCE78B67171F5692972C7996A93A739F5C29565E8A0444895B6
460EC7F84B30DB82E6A876E891F2DFB7B79F6555BE785DDC753C80DFF1DAE395
D3377526682BC5370601417FF16E96DB81A37D44427B0B74AEED61C324D31206
FA2F99E2E7B87441D00AEE970A2316DB9D90B63784FFB150CFCC2322719BA552
46569774464EBE5B51670274617C43F00606AAF2BBA6D03CEE07FD3BEB87C8DC
736D5E877AC1F281964570DBE36F15961769524722FDD0A05929F9207F2685F0
4060C68CB5E1A1E333392F1F3A5DF6D257A919027B687CFDCB0025405790249A
772D775AB0294D8641CB5F59B2B15CD4E163461742B56FFAAC1BFCF933DD9BA2
BBB6289F6D080071BC19138E64AE8C362F670EC2390FBE36958579BE51A94FD1
EF92B4191FA5B0FBEDC01921ECFCEDD4C81A8402FE8BF1F0E176B1705C32849A
171168D849345DD74644C26B7DC123B846DB9EA6774ADCE7E1B6592F8021116D
F95C8DB23F02AF789488C48901786BB16BD83240F5E96072F12C59E601B63CFC
B8FFD54B506AF75065AE12CB1C8B899586680BC3B05D7C6330838F700E2EE611
181D7ECB2229A39E2277CFC20A3746133F9942F8DA38163BC115381D2D694272
BB1C8CD72EA2C09EC6B075749FE236DD4B77358952C1C3A4FA8093436DFB036F
52DD19DBD52092F3E9D8E2469E5728033414D9C2668C4D108FC5AA920CC60DC8
7B6844F9CA23BCA6DE1EFB0FCB5025FDEAE0B8CF355D7D3E642D4E89921BAB99
8D50F219AD55301B77A67E6EB8135EF02259BF939E9D66A148B26BD8E3461AB4
D56A50A7E606748E07CE08A2CC874ECD02FAE3574296D83CF6D6F93AEEF001B7
9E2B3ACB86F96C417A5307D5EDF157ED552662CA8E127C1B538E631CED710CB5
94CEC0EA2AB0B4547F11A5D8B58165BF67CD719551B73E5ACC9AFB4B4D8119E2
0E5633CA93BF0896109D81A6D303C037282EAC49CAA3D60EC22F4F77F39AD9FA
45EE47B6A27F3994C834DCE4090D00043AFB9EA102D45F04075E2C97EF58E524
14EF9680B7CC3F3A54AFBFAFCA5D529E225338CE591F428771E185791C416726
009C6C6764CA702E96D3FA97021BFAADE46061A2CA24E04E22A46F44E1E0B5EC
2366F357DD95019D3E05BF5556DB47F43C95347D11524EBF7C0BCF288DFB9EB2
1F3FF690DA0268762797224E56628B8D985C237B363D5E6387F2679751758B3A
512F7D6EF9785221BA7B849EF56F5FB12A733EEF0AEFF601854721FBF724011C
CAAB424167576053CD17F01D7ABD330B1ADD91BE8CD1F2211303DF4973023C90
02349AC9BC2E5044BE4ED9402A6E27ED0B4091CB8F476E455B01AF7AB173F584
77183DB7D406FD33E11EBA09A84D93463E9E629ABABF9A481123C60935415094
51A0541568A8D365EB64DDE5CE860C96C3C9FC269B8862E369126D2E55D98C7A
E6F013C3057569E67A7F8B37EABC2A494D734D541B9B70F9AE3E2EEF807F652E
09964893C4690DA8799CFD0DA988BF012B0737E20940BBB8290E7FA948492F76
AFC246284F0DB69561D6D5328CA331FD400E48F4EC35EB89938C27B517C9CB83
4E3FC5744FBEE1346A1E4AE48C995F4019FCC7DC79075EF63A7920FA97378579
CDD29099C828DCC4875B829F201CC56CA17C79AA3F566FAAE40AD464A5E25553
43FC6D6161543CAFEEA1D7030514FC408D051A91C3D125561CD444145CAD3FEA
DBAD670B35A2E785CB726769F257C92AEB6E5855C9A939E1F4778CB7027CC21F
74D7B897BAF51900F2DAFB0BE9B3061A342641CC362F5CC622EE75352F3004DB
04F55A0B72EF616D69E194D5A6774B0F1CFAC63673832153C63BB027ABDD0B90
CDA591507BCD92F8F72557E0100B1704D3B6C08812888B615EB1FF560709C2FA
8628B1D2949E25CCC98E11F73F274E5A406937ED0C1320A1A29F4B051DA84502
ED56266298CCEC763238BF2025D07FE58B96604F0361F4CF212D93CC8B2F2A98
2EFAE2D06FAFCD445766E9A6CA00BD8C7856838DBD268FFDF49E480D686DC3F3
CDB88D7A879DF1B8D6DDB076D7E55AF2F3F99A085CEAF18514CA8D3AD427DDEB
DACF79BDFAF937AC45A2D22164F99C58224E48911BA6C22FA47D153222AC0E84
38B6C431A806CC319D3E9C5737D601863CF1E311741512F43BD902BBA6A52113
28D5495867C3367894CF0744D86D1EA3D677CCB6C2BD03344847B681C3A60EF9
524A506CF5D635CC8E6D00C9151833FFFF3066F28D502415D6120D1F98E2853C
F7F2A5CB086718768431CC440C16D831564F54A005C280AA6B8582F0E21A955A
9BDE07431D4205AF55B1609201B627C2E8F31A566D0E6EF72C8C712CA674EA9A
7C558125B7C5649CAB7C172230E47D848252134CAA2212593D085925F5F68451
AEF0DB41D6991D6726D08B554B259686DA4DF1130B42E28DCFC352AAF39A2B37
CB97130AF99BF8EEC359BDE8EE702024AC767CE7ECEE2C7286A7854C6D8A1D40
0AEF581848BFF4DC772D1B82C37B4D71A39644E12D5C1D0878F6917663BD8F23
3DF5796A990B4F35D60E42EBBCEE82828D38F50A876CC8D970DFC6936F473FC7
DA3A3E0D774C9F6DB41EAA3CA225313BBC1189473F953C957B5C71955EFFF8C9
79F8F24B5AD42DC950F5FB1858DF4C7884BB43822113C88912A5464668A91F4E
F575BC2B482348CA95D557104FC37E5936323DA3062205561C87193CFDDAFCC1
C64BC225FC5531EACE0D1EB596317821622479BF343BBF4BC98E35A9CF258515
DBD32C05816B431CD24B3BBEF65ED330A221EBB0950A65321AD67B126E47B744
B0766364DF93BA742B286E125F7B43358BEE7122BEA87A8B4F2845A1CB3D8695
17EC4CE8EB6D5D352138FB9AAC7A63B02A29DB9C6FF634DD291936FB394FAEAD
23C60722E2D94F290B2BFF7A00BC13FA99ED6F202317DD23E4E1B53A6A1D03B6
3E5171F78CCD81C4674FA8A37E4F18B135FB1C6E62D6DF02FF75E3074DD0FED9
2B58288276523D436A3502E01A06A7CF5A9F4D21671C5C096924975DBBE10CA1
B47FA4D6A441B931B2738104BA49BBBBC34A85A2CBDA0595F80BEAA7D5EEF49A
E23B0AAA285FB33BB845E485799430F044700BFF7791B2D9587B430A9C20F209
84D67A31D341708442364ADA426FEBB03A4255E5ED2B8117665E9657FAAD8DBF
5C44D194336B220A490625E88141C2A06FBED44BBCF3C3726B1523075F75FA45
3D4F2BC47353AE131C0F47D5947F80726AF6B83FA479FC27B9D815EC03765EB3
23F68D98F23D695C9ED83FFC8F9B85E6F0DC608E0AD63C92EAFF5B15F7C975FF
81B54C7C038409EEBE1FB5AE197CCE03A623FA30B25ECE2E964931C23D251DED
C053B219F77BD62E2D0E65B8C0EDC3233962A61E2664C71189849ECADC7D4EE8
E50D8AC9ABF8F6972B508A6ACCBB2A56F8EA5E37B3C49418092D11664ABD5CE0
578E381414C1F0DBBAAB7291DFCC2A6D53F7FAF328353A54A8BB0C5BF4D66914
56DF5AA050A57EDD5DC3F4EF369D246B989498F86D890170F62FF1088C4C1AEF
0655063EE3BB26FF1311279A2C70A5CD8F1F5D5EE239CA3958AEE7702C0749EE
1BCBBA9D0B0EEB806BB49F7877C4621A7CEDD3D7C289024FFBED370E7C9479CB
F75DE2A10207F8F07A92B2E28F52807DCAFFE94D98E52DB61BCF5DFF850FB48E
4A1C0EF57AFE78B79E1C540C76534247ED52C63F71D9CF91D97E7769832BAE05
2AE04AEA24914DA90C9A3830512D1DDDB9CB3989B50AFB76D000898024A18A82
F24945775BB2A89AE22081F3036A43E407D68666544FD581C7140CC108972472
F7862E8BFB66C44FC74188A2F1A22AA09304683BAE073CCB390E8E205C9AEED4
5B2169DF28E19AB5F6660052C6F3DAA72F880A350EEE1335AEBD12C83FE462FB
183AE30C63AC7DE2CE143B0704597531DE77BB92B20C8A111A5A60476DEFB581
4C260ED47E50CF76492AD05795FDF9CEF666462E6D82BE798145F5456766E5A2
17176B8BCFCA24D630CB6A41EB716F3CAC3FB0C98FCC5C7A62C22B34197D25DC
4C613FBEA993F502006CCDC25812734C506ADE8CBD4B92B2501E33737ACB2786
1CF1AA3163958948DAE2A59D2EF33BFCA989EAA73F934092A5B95E180063E2AE
5A092F4F87F0868C2752B1ADBA2E8E44A892F62D5986BBCBDA1B08BEF048DDA2
C51B1A2B1D658243CB1A65BB1341BEB5C6DF4F4D2A94816D91B55FF133E1BA6B
4E43D0EF41C6621D7393AE621D0A3FFC04486183F0EE3FB02958174468405AE9
874E4E91E9C6335447EF3F3415D116C7B0CE102271ACDF34971A4DB9E05F41F3
35E34F74E77A544A4600F401FFB6CA9ADB0E84B0D406B6995A0861D5154476EC
2DEF5E60DAD26979430877A7B0C60D8577CAF6AE9325AE7CBD0AF51A06DDD587
6A791E0C6B1B66BE93C0909B2A506B8563341A1D4089F0F90502289196BFBE45
06FE4879C63932D23FA8ED85D007B1CB8C7D57DA249490A3208D7D1BBDBF5EB6
7B7C53695C73CA8B390ECBDB3C5DECEBAD6F5C49A2766C8A8EF04D8052D0C962
7897D6DD84B42BB73BBE4CC0783FDC1E286DE181F073BF986D847E428CDF9AAA
8B0D8CC5F998568F4618EB0B89C721D34A96A323F14CD114E21B1DAF4B749B93
A8CAC926DB42BFD98EA7F8AC380E05E37858CB6F65DEA447505C066BA8462259
A3CC492DCB6275BC9200D575D59E66C02C80B49808684D90603F29F267821B19
40536781843A81DD99D008C38E37948D559C4C27D84A50174A9546F142024606
0660A54F1D50F0C85824663C4C18EEA442F498C6AA94437FC4A9BEBE95CF3837
2554EE205468D3BF9FF2BC1F8FBFADC92C485BE003F50BEFA89207D7CAEBC2B2
9564A3E3904C6B4A6AEEC79BFA3C463464C849BE3D65C66BEFC1850422C2FD11
FBA9AEAA97FF2CDA0C315D8B53F4C0457C805904A04C0386AA307E153975B22F
065FF1B53E54AF23FA12441F5829DA8D02F3DEC9C2B881A02849BE7C25793420
1A9C0D7572B376F181CDCB576BA83D106D4654062FD839E8F4B0B9F5782F3C42
8B8869A1B1F03E9DFEF4677FDF5011F5F5168B8148049CBDAF2D8943248245ED
BFBA964E04CCD1F9F82BEB093BD1F6D091E925823853AEDD548E32E3852E4D03
088C751652501D77CA48236838644892F139384F2F02D623FAB23ACDA562AB2F
4D10A61372E99955C5A30DA2E557389F75AE03CA1DF1735BFDFE365D3E66DD0D
9577037BB97892F1D89F06F5F42A0B239A2122150099B5AEE4A5F5C51BBAA4A2
D42F2F40F2F0D5A5CE58C614A3F8B2899190D1D46CFFACB4E68C2F0DD37FFCE6
454FDE66F73C81B9C4415B6AECA29424DC6B825B8D0916C4191EC43CB4543776
A41B8BE65AA22BAE9DCB65F5FB19E772B5AAE9B273AA51151B1FB4BEB9957847
05D923257119CB04116DE7DD42BD4C8239A706ECCD5A8558C9EAD5C1C2CF7F32
208884597008BF31D62E9713F20AF65484990E4AEFF114EC8110D4E71D8B180E
5B83B4681BBE647A51AD88E030E07BD9FE5FE4EB9D62C6E560469C0D8696012C
B04085FF25F2162851E03416C6C9936959C204CBF9A21A997B828ECA70546357
685C9ABA5737C1B689F297D2DF1A3665509B8EA089B6357C1E5AEA42CC0A9A4C
97CF6D7AAE8E9E0DB3F31DB92E6E9426A4EC1304F555B0C2086C9CE2EFD15246
DD699E9E7FF0C86E410DB82F31B58F7E5D9A5AB72BBCB12EFBCEDFE79C950BA8
98729979FF63E5DFCE09829B64064E0FBDC86A653223842567B5B2994072DDBF
6857AD1EF4587A327CAD4FD168CE6BB496A44BECE5C692DF4495D13166E93269
A2E43096988E0B6978DC1CD57BCE2F7A0F5526C34B2A434886C9FD789C0C4265
15D51CC32FEFDDFBDD249AE3EDAFD638096E9CABB4346BBF7C82D2BA2285CEE5
550F6DB9E3EA03562E6D31B498FBD4CF278DADDF239593BF87ECFF29E0E61536
E8A79077C341FA2096B33CC8C528B8F7B1106E9F1D14DFB5F12C5ED45EAA32CB
E05D7CC07C148675600C178F5C83B856B4831F65D8936A298BD50A580C7881C7
7820F3F371FDBB4538C3B5483EA8B7630FCF4174EA6F6F29262C9BDDF5B674B4
E42EACBA9AB13F34BF18DBDFC0C23A9D247928B9708B775713E34754BCCD3B5D
A6304D4A4EB0B0F8911CA5A1C2A3E8460DE7D4CEE1E967F92CCE601D198B2130
AD06AED54DC353734E430A21D08D8BFD3281EDF03460FB61560B80C388153E7A
944731B65B21C36E1CD031C4804E51644091C083A4CAA368F1FF209D3F4BDDA2
049ABB8C6011958F4813F914F3855CC89246F710665C8AA672855B448B6B94FE
DCF8590D370A79719A994F180DE2A41EEC3500C90763101ABBF766F01BEE436E
0031A9BF92C517199024EEA42AA04AFB8D3E9D5FE21791B904C3519FB41AFB84
863FEFF00A9D9D68606EAFF5EBD18EE23FE0E44F4B34F4644039D5C4A3518A2B
16354B756AC3A061922684C4DD706270B5EF428762823FC2C7B4192C8EEE3E2C
79ADA0D8D3B1C43D9568A2C06CB7579F74959539E9C3D5303495006800B85237
5E683B18D7E327E8AC564A332ECD4249B9CC38CF67AB97B9CF2E1DEE8E6155CB
1F23202807834B63C84EC84F507AE6570F1013800F59367961FE9D4F115BA3C6
64F311F4AB16F0B76814E4CBDBC37E595BBFCE619612AA9BE7926CFDF3B1C0E8
4C40D6B0F3CB1F06196F7F1581BA188E2596F4C0C68F6C2D284D2CBA8B17618B
A406969BFAB3223F6486130BDBBAE5EF9EA99BDFB49AEEE28EF93F98124982CB
3E6F8A7FF4F09AC7F361AA9F023ADED215931B60660DAAEBD7DA167E0941D127
C7B220E96E0E7E1CBE2DD0548DBFDF82921BBD506E87C27D587FC95D1B97E5E2
20A007D6CC43831373677589B0489007C534F9C342EA625CB6BA2AD065D36765
264AD9098E1A8480661D663BAEADCEF95421DA3426C4A8B944F2F98F465E8987
97F703E2226BDBC46D031AE24615A4D9702AC4465C5D75479C5E6E7B4DB7AA10
1806C539B454A8008951F4433EDBD51FF5BCB063B8DA9CA1CF6038FA8AF56E38
2D2DE9A863CAE36ACB5B3CDDD199652106EFB14856E0678406FF49CD82DE448D
95BDF3C0A3672E679FCF21119314A1D57ED02174ED5CFC02A9D65F92C1873864
ACD655C573CDDB71AB6644676A11D4728823FA5DD6B634891AE5FEE23150941A
058431A401154947CB34163B09599E170DD5F16262C20DDAE4FC13D602322A1D
825AAB8EAEA8894365E98F31E7FBD00073E6ECA0C2C1F3866AF2E3B2858E62D3
7D7137159B8CA6262626FEBFF17A4A21F4FB0DCD1B63CE34BC70894E9CCEF1F1
2FF59061BC15A5609EF2DDB796B42D81F9B27DB22491A917750AC8B434CFF7E3
5301F398BCB6A1441D917EB9505CB49FB5F9C2C7732B9B4F70D08BF8F2979A3E
3A16DFB7EACD86313DCC4A2528A794201CEA6BC7D5F407F1E6ADAF01D9624A39
F7CD4E87F1F924348E9E156DAF4EC1628D87ACD83D422F8296AB12BC0B389D61
D1A1A0C4A923BD1C2D61B0720510B11BE69CFAF3940AE3DACF2A92EFEA86903B
5497EF4B05355438210C10C5D1F95E36951EEE825E4FEF4162F27D81166E039F
CD43E9823304CCF3D5726883DF661EFD61BD619A2387624107882CAA9A87A76F
F9A9FAFA72D453D7BB971BCF9718B663063129EAFC0B7B9BE09E1F41BBB84050
19330B178DECF06618FE82740808EC868FA70A084F5C6EFE32881421A61EA963
8277F24418717E6D603C2129AFB564AEC0CD26E2E0DE2F73B2929BB795ACF3B3
4E30E12AC516624D66F94C43F3CC3DF5D3E709DCBC6696C66C86C36A31A91743
83269DF763479E36AF68D381DA6AE47CEA95E0C1EAB6EB2ED39A0E2A1C44BC43
353E1DF2744F405285BF7F972FF3093EA7E9182EF7FED89708BA6111CD4A3145
05B2120DE3B4F73747034B3C53124A5E7ACB9AD49E9289533423C990C09B0BC5
25445C1F7B59D854A5C50E646D953B5053721E9CBC91D97F3821202A23701347
EC4C967D3C4596241A97D631C3FC99FA4DD41E6E20E3903D4235E716D681FA82
9F093D07513B10A9B6226AAF929905A302E527DCDFAF0A229A4841A1EBA5B8D1
F0EAB32C14F81F6A4DA4A8B2424A69EE7F113E1D613FC67621C6F9D2A4599D62
A68FCF5354A293C129D17AC8FBA40D090F1B268DD58DF1A2B3DE1ED05F5B5EB0
FCBFBFECC6918C8674109AE16D81CDCF71A792CCFDBC85B6F8B2C7ECF784911E
7AA9BC6FE53A8877B9D39375C21DAC9C59CD048FC6BB364C565BE204F6F4D598
EB288356FC5CE4E0367C401E263244DA2D69314C3B7AB3762C164EC6ECDF6713
AE1CDC4A820B772B8D24909D3C49652AF47A40CD85235A9A8554D93495477D31
74D3F4043C965DA745D11EA8B397CD4F4F4C8F1182987B9B5357E3D51D430561
1C847E788AADDEB124D5E841CCC60FD2E30B073671B8F089461676D69ACECB9F
F0120FAB60E921641D66EC722FF52B40AAB99A8E678EE82BF512E1857E1FC04B
42B6E612D1EFA62BA6F65922EB335BDE6B75A12345582A54DA82C8CE75F51555
BEDD7A8F17372A106385D624C664896C8B912712044CE431D9164F9A708E1E76
CA31B1A9E5277EF9AA0F3B8A853982F58033EA0FCF49780F34C60B662F75F93B
10706798959C76B079FE1F0DB9E997329125CB33C7CF31ABEF50C991A7F8CD78
457EC1418CADB6307853D18FAEBAC75B7AFEA9FA5FCD66A260F76AC40F03B86C
CDD9BF134E4908A0E59D1478BF161331B8D43B68FAA79B3EE032FA4CB5DFA7D9
FA3A33B83627C810490860D00803FB963A40FD246AECBD3C477B3EFCC9E10AD1
4E4FB9000055542AAA5F7119FB4A2CF1C1501904F177069EAEA1B1156ECC4978
2FC3004F5933BF46AE93509E37E40A695315177979C3E0DE3C6C77A1BEC7E434
03941C16C86E7365D85FD904A3BFC0688819EE4B47545FC3C2172596877BE31F
AD27F41E257BC524A75EEC1886A4F301CBEFE8A5087287698B5D257AA421D60F
A331AC9A26F47F92946D8A555E7700F9235E3B0A590BD0A5F2968F9DE5EF3527
8B04943B52A5F2C341ECDE1A20E3A2224842D7F7F17F23A1AD27138A4DDE1BDB
559DE74ACA4022C219F57732EAB24E14E65C1747AC3C24049163BDA7C8391BEF
EAE202B0A78F7644C923B0A95A432A65F901A24A7063A2FDD8A010DFE58EA4D0
39DEA217F6F3656F5800177AE50E0AB5A206403CD95F93527F3BB829460642AA
CB14DE460FBD0AA916593D9B8B7FE22B640DC8001F7D93B9E140B0EA5648060A
1FFD7CE09072D98FA80F4D45EF9B0AD627904EF5A96D5B2AE184763A082A6C3E
F56BCF5BE4782DD9F96FA60C5B496A604409E78F3D10A0867690A2837DBBCC79
0BDE602BD3AFBD0171C0A6587AC76F8A7EBA620D1E3FA405F38D4953B3C730C4
F9ADFD6CF8DDFEA22482B89A5409AB0CFCFAE045445C33FBB305E6503EEDEBA3
E9DEFA9CBCACF5E3A37D5FD89F2B3B71A5614DD5413AF52136F31DB99E1FD0BB
707AB96C36845735984856B2ABA4176A2708E924AC3CEDDA7E0C2CCCAB54196D
602847D4F1CED9DA96B1975FDB8EB8DB04C662DD084BF637C75EA6927B0F37A2
BC15E060501F8A2C2A3FD2D9CA4833679FF12E23C293207EBCC240D11587B672
0BD41292873A75473B2FDB6975E83E2D2BD6651C4F9C584991548FC1505678DA
C714DE906E8079C4CE84539497B00B4EE7407E8E7EA3BB081477A77E5AC51076
34B783E128E9086516A574DF4A32BA4C85B904383CF0D2AB269248DD499E13E4
0DBF7D0EDB4AFE63C1EE7ECC101DE3B6BFDDC79D1C9297D517A2A9D8B434A493
11B54B42C1C24C57D4D4189E6A04D3AE2EEDA5668BE16FD0D90B411E06DADB30
C1CD29C8CF4A1F5C97608B38FD8A84B1183DD2828E76D9F1C1C72E504D9FB028
B708A459EFDA7720F66E2376D8E67A5F1C7E14155C169B35A1894F782FB7D907
0B89A3E6794F5CB9BFA93ABBDD4AD29EB9F56F85295968DF557DD5184FA29BF0
6B1FC89BF4758A16AAB74AD7D8F22861700AAFDEB19536D568B7A7F29403C77F
A6439B081C27CC7B0807835B4F045CDF2FC23086
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 15 /bullet put
dup 25 /approxequal put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57030ACE57A0A31C99BEDB251A0ECAD78
253AB32E9AD71F7E106560BA511DA17DA9B50B0585742DD7C5FC3BA0B94348CC
1C27F194D9FD5DD303309D4E1262DC924ECA34D9AD0A1C03CA53FFC8036F7E2E
2CD4BCCAB4E0DA5181D6F2CFE5086AE9C19BB6B635ABA6B4A34DF4431D935227
1BF75321A9237332AE45D8CB1F0C5B52ABBF37116E2A41FDD215C30FB11FB137
B125BEE01DA2E9A5EDF196053523AA39BF0A55337FD8055DD55F04C3D7499F60
CAA3D37D5B846EA8B675922C9CA55CC3347E7B601DB2717DF18F1ACD9AF61995
6F17C8370098E9FBE41154109F5D1E8D877E10BDF281109311854EDCE07DCCA1
25BE2EAFC12BD01D1B0CFDE42DE324B3A34B106107B41F3CC767E650E2846B6F
4E60C386956A02846D8D3E7757EA86716C91CD403D50F3BF66F6D0D43A161D18
D48370C36FB746B5E414C2E5D488D09E59748AC30C7C4826013DE55E1C16BAD4
EF4F99CDE5E3578F818DA34AA54769E0088D396C35F798F8B0CB8263F4DE9C7D
E2C4E427E76EB36A0621DBACE11CE9590413CD6E25158028B282CC1895C74E2F
A104506A5964B7C1A901008D18F3600E7E983A229E4F86F47D4FBE3B9056FAFE
D8AE16A59F71CD009F6AB20E4217F7424AB6DCFE7CC6B6E68678FC64A3FCE168
DCF018FC994A507DB37BF302B63A25F41006E0E9281D1B4A520EF8482509B69D
A564F877225FCBF8EF64742720BBF2D1EF41E7A8F16FBA26F89C22F180EF8CEC
C5208A760618A894FF4BAC859E77D31DB9C5FF850115F9068DE414F48B84F3B7
740548EDDD7C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /numbersign put
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 53 /five put
dup 55 /seven put
dup 69 /E put
dup 97 /a put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CEBE01C1B982
4B1CF704E817814FF9C921A7DF98FEC4EE23D26FFBCF1004A858030D472889EF
75AB4A5233FF85E1E62CC4406A2BE7F5A100E122C37BF9FD097DF67C32F65184
1EFEBFF683657F6481776983309CE93111D8D775D23D56D74735801F0EBB1421
7B9D22171EDA7CF3EDBDCD7B69062F8AEDDA9DDB33F3A68214643E87C86CD7D4
4E5B0770ED8D06B592E307492B17BCC61540E842FFA408254273D752148A74B0
563CFFC2136FF23183986A3437BAECCBC072A763C31BF7E0C55598E34AB81211
6AAEFF8C982ACA51DDC2E7D2807ECCC2115B439CB89768748890E273D2838B1D
80BC1731A5D6F8CCA00851BB031F5AF58AAEF17FCB7D2228F4B8B27AA31943FC
9E68489F9741E7CB9C8EFF1452DADC3D0E8DD454A1DEB1C791011C238EE148B4
5B6708B8644A8F358ABD44491E69AB6DF8B392B27863D79E7F0EAA806391BDAF
08FDDB4A6EEDC08723ECFEFE8CC56EDEC6ED8D3F10E76959F6764A9DF2811617
E077BC9C0B69BE26762D7E9FAA12B6C05B76E91D4D4DC402B7E7CB38332D5955
B58A3CEC15BC63907DE477001B03006D8F29CD004A8E986E5C289104B8AA13F7
187AF37FBB2BC8C9A90925D06DADBFAF1CEB6B20B445576C10023191A405AFD8
425B21AD795B47EBEE4FC3BD3534F5DDCA56D2BD942084A3429041FECEC7090E
004D1EEBA4275B476AAF6745BC361EE11CA6818B980580678B6F888FE36A2887
6FFE4C5EDD8725C0B6A0FB39799CC8D29ED8CCC3CF6ECB7414614BA7AB91B707
96D6D6823ECF66770B207A3053684576A9DE6208BDD91CDEF8625A0A52761527
29B8802ED2E7E3530000E9BBAE5B76BE6DC26E6261897533748A6E11DB33AE9B
CBC7744CE1A278C1BD00FABC2EB88888ED7DB0E0B51B34510B2E3DD9A06AB335
00BD79CCEBC907A3510FABD96F3A835B98C95275EC1CB3DF61BCBEB3B9FEF6BE
8F0330320150BE26869B063AE9C81069A5AFA1E3C35BA0980F06BB4842723170
0F29F64775A87A0F026B6273669EC0CACDD0F31EE1AD545C1A326A67D80F9053
4DCBDC674A065186E5C64BE128C7BBB9A99CCC7CED8A2FB38B438EFC3442C248
85D8799F09B351C6DC308DECD19B206E4A6746C241151E8E1C9AC83C18743586
28C1ED095C72F1A3EAEBF924DEF38AE26611645414ADA80B6CC17A0020F56087
32388CE08C7FCB9447A88F27317CB54B5DB53FC64E9B5835231B226305612981
44E13CF8E6D2CD52ABAF0587D480850B739C05852EC237239E093E8EF6B02A11
62B3999BE963A880D246B1313E7476FA08098F84B53F540338BA227A3EB7F806
2B6E9DA6697759DEC29F3041AD5DBD4ABAFFE4B928AAB0BD011C26E876BB4298
A77BCD5B1CD86A665D1D50F2046298F19434DA252D3365AA6922C4072C2997A1
96D3EAFC795EE825CF260415A7EB22E22E6BC82B5095136C908802FDD25B0779
DBE097CD3B5800EE34A90F0ACD4A8134049010333C6540DE7138256DF4C993C0
45C8481E9D8FDD556D71DD58A6B7DB2EB1462618CE1961C9A8478CAE66731D1B
7C1F96480EB55E64BCD9D96EBD2A764B8FD76D142832C8801FFC84D92E791A5C
65E81661E8EC933F6B82692C37BE7EAAAF8AA6C1A4DB0B5012AE94EFE346A5E3
FE4DA617FDE0F112169FCE27809257BD2E749128BB2ACAD9B2E67B1655B4C357
C34176ED1DCF600894FF668846D95D1BEC3E09F14346DEBA87F757C86D7BB10B
69576912EDF01D389DB83A31677B6555FD0756F5C09405B7F111DFDE03461008
03CE7B3C2BB60281B2D5E52A1DB740418155AA620F6F1238F4D7ECFE77A1A3AF
982AAE7A70149E97B04A52BF5807F54E12D58A0B055F02D1585F9D33BF9BAEB5
4A071F7B332327A40C16BC2F196C45BF6CE58441282BFFCA194F95A5A348DD49
0BC632595976FAF71FF35C22317409D42894214F78F6701740D4439C00762A94
B184F6A7F084DEFB750E83EDA77F2746FF395B68BFE53736A307DED4546DDC43
6858C962EEB1C9EB7CA8C7FB110904A0F6A9E10B7ADBC057F9036AD02DC07F79
01DE9DB66A4FD13A78CAA19C677EC1CB626E4293217C6B82CE0D1A33A9204F90
947004B381BD1EBDCBD460ACE8AA1EE69CFACDCC40B632947091BA841F87339D
7C19478BDA30EBA585D21A4A6585960403F18289AE30CB436E0B9AD64343AA87
24158CF229F92EDA64B864B979A1174B91B1C29038E509AC20A530D27B1DFF21
AD86E10876C60B52FA9A3DD36ED8497258BFB311AE3C8F890971F8B320455389
DF17FA6336F38CFE8F19AD05402E5C96E9F56C601DB6BF47379DD8931FEA3D0C
002BA56D226CD0F98BE118DDF9253BF6A0F0BBAEB01A9306DB57C5BC9FD464D4
81F38DF6D43530E46D2A84187BE843ECA01AE79C58C103106BBAD7287583047B
831D420A54303AFB767059D08EDBFC1E7BDAC1B107D4390A72197F17B565B7F4
7B2495A561B23951860464B76B13C0DF6083685A407F353BBE25C6D5211F23D9
B1FAEF77B952E043BE373FF7C79B0348001C7C289145957A8E2AEF7A566A6B95
1D09B0AB398D9727F16DC0BD7E0003CFAB677D872472D99165DC2BF04F94C4C9
EC366C096A880D99FD373407D65F719FA7E04FFD1C11A22B2B21E91C45A6F860
B25FF4E91A112914B317EA1B6FC7D4D86901C4930651D891FBA0B0A3B1543DC6
3A71DCB99721ECD6F3DD67009E5937E0D924006C5F89C8600CDE0CE974271564
32319B79C38CD2604E9AE55D9F06530DC930F0A9467D14DBF5AF6E3919C1D0BD
B703824F947569C55766C7F7CF49F3E77BE2A03559C86A89FC052C2C1495005D
03F9D0CA505C51ECB29E4A4B580889515DD811737AF90AE78F1327F3CF3FE74E
F7392968E03236E1AC4734571E1D0C9FCD0EA710BC9E62B0D770477923959183
4B2AFB20A1099A4709DCD063070B61983A6D9A6D0191F787AB9A865E599A94F8
BD011D0A56FE68EA757A2AF83CB062E146B5DC74F139C563E30525CF45E492A4
48F43C554DA88E92BFF2105196D473AB37BEE08AF30CF4E26656DDDA3054A0D4
6FC8B095DB32A360BDAB372D1E9A8ED8F1E3C3399234C1611DA73BDDBBE45AE9
92C9F2EF1581EA335D708524955B4F93C3A6E6EEE23D11B48E5CA7312AAF0656
FFD74AC930C62A94F4D361474BBED6B92A2411D139833D5CCA13738FE3B38B7F
FF01C12947357ECC9D813A8EABEFDF86D747F8E33AF478EE75EF29C2C2684E28
D2DFC45AD13BD3B01FBDC340BA09F9F2C0A66D30BBD2286E2C41D09F49CC1FFA
09B342B2B7421E4E20CB3320FBEA8239EAC77F0D1E9DEB381BA225E21E58A22C
872ECFDE0E3AC5CE35520A1CC5E799D66E4B2B4F7BA1636DDD311D8D38108DC7
F3C6E0FCF158E923B6024CC4931E94CFA1A8FD56D08B2C36FCCAC351CA6D0B1E
A2E8A1F4D81522647332FDF468E8B7B9159C0414CADB1F53E175D83A89854EC7
0F85A9C5D1AF29EFFF2FF16CA9C0241EFD650D3905E8EF8D735BCBC28CC768AE
218AD4E6EEB9D7F9B58144327C8D50C4E57F236B5B4FA7435C2DCF71280B982F
282C471C2ACF9F934F12DD333744515CD712B170D14DBF1FE074160143174A6E
217443B9A57DB04C0C94C4AFBC7D68A92FA878C3078DE4E47F5F643ED696C7B7
CD8DD8A34AF47864EE91C37A6AAD8547CCE1342ACDE673FE44AC9378C6B816D1
3F3855A93FA9843F51D9299A252F0FE5D81A1754C235A59CD3AE4BB14CC89346
C29E557A93E6C3FE05075C2E0A875AF4BC2B9CB57572A3D4950182BE5215FD0C
206010EF9D14D12603056126AA17F6A1C09F2D573A73F92B30986431276DBCD4
EB95F3C57D18FC1E684873C628B621B471160ACE7A846285AF18433CF2EB9D24
CF265EB81D91F2C1D1271E6174EB32BD5E1C18BF8626925CBBC00503ED4AB3A6
8BDA0234F2D698A6F69DD6C1E338E66342A9EEB2A50A163221C7B68F7F90318C
810C8467540834A906F0D786576423AFC045FC7F66919898E5D56159435AFEF5
012916A0499DF8AE38E9776B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (exam1.dvi)
@start /Fa 219[42 36[{}1 83.022 /CMSL10 rf /Fb 145[41
110[{}1 58.1154 /CMMI7 rf /Fc 167[120 32[55 55 55 55
55 55 50[{}7 83.022 /CMEX10 rf /Fd 134[50 50 1[50 53
37 38 39 1[53 48 53 80 27 2[27 2[29 44 53 42 53 46 4[50
2[72 10[75 4[36 3[63 10[27 23[50 20[53 13[{}27 83.022
/CMBX10 rf /Fe 135[47 4[39 37 3[50 4[29 33[65 12[23 58[{}7
83.022 /CMMI10 rf /Ff 134[40 1[55 38 45 28 34 35 38 42
42 47 68 21 38 1[25 42 38 25 38 42 38 38 42 9[83 3[47
8[44 32 3[56 16[42 5[25 1[25 4[25 39[{}32 83.022 /CMTI10
rf /Fg 133[37 44 44 60 44 46 32 33 33 44 46 42 46 69
23 44 25 23 46 42 25 37 46 37 46 42 4[42 2[62 1[85 62
62 60 46 61 1[57 65 62 3[43 30 62 65 54 57 63 60 59 62
1[39 1[65 1[23 23 42 42 42 42 42 42 42 42 42 42 1[23
28 23 65 1[32 32 23 65 69 42 1[42 19[69 46 46 48 11[{}76
83.022 /CMR10 rf /Fh 230[65 9[42 13[23 65{}4 83.022 /CMSY10
rf /Fi 135[62 3[46 46 2[65 59 65 98 3[33 7[59 27[80 13[59
1[59 3[59 7[46 46 4[98 35[{}16 119.552 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1177 519 a Fi(Exam)37 b(#1)i(\(75)e(p)s
(oin)m(ts\))p 0 TeXcolorgray 415 885 a Fh(\017)p 0 TeXcolorgray
41 w Fg(Other)20 b(than)h(this)g(c)n(heat)f(sheet)h(\(whic)n(h)g(y)n
(ou)e(should)i(tear)f(o\013)6 b(\),)23 b(all)d(y)n(ou)g(are)f(allo)n(w)
n(ed)498 984 y(to)28 b(use)f(for)g(help)h(are)f(the)h(basic)f
(functions)h(on)f(a)g(calculator.)p 0 TeXcolorgray 415
1150 a Fh(\017)p 0 TeXcolorgray 41 w Fg(The)i(space)f(pro)n(vided)g(b)r
(elo)n(w)g(eac)n(h)g(question)h(should)f(b)r(e)i(su\016cien)n(t)f(for)f
(y)n(our)g(an-)498 1250 y(sw)n(er,)f(but)h(y)n(ou)f(can)g(use)g
(additional)g(pap)r(er)h(if)g(needed.)p 0 TeXcolorgray
415 1416 a Fh(\017)p 0 TeXcolorgray 41 w Ff(Show)h(your)g(work)g(for)h
(p)l(artial)g(cr)l(e)l(dit.)37 b Fg(It)27 b(is)f(v)n(ery)f(di\016cult)i
(to)f(giv)n(e)g(partial)f(credit)498 1516 y(if)j(the)g(only)f(thing)h
(on)f(y)n(our)g(page)g(is)g(\\)p Fe(x)c Fg(=)g(3".)p
0 TeXcolorgray 415 1682 a Fh(\017)p 0 TeXcolorgray 41
w Fd(Exp)s(ected)28 b(v)-5 b(alue)24 b Fg(is)h(giv)n(en)e(b)n(y)h
(summing)h(lik)n(eliho)r(o)r(d)f(times)h(v)-5 b(alue)24
b(o)n(v)n(er)e(all)i(p)r(os-)498 1781 y(sible)k(outcomes:)741
1964 y(Exp)r(ected)f(V)-7 b(alue)106 b(=)1737 1885 y
Fc(X)1586 2080 y Fg(Outcomes)27 b Ff(i)2022 1964 y Fg(Probabilit)n(y\()
p Ff(i)8 b Fg(\))18 b Fh(\001)h Fg(V)-7 b(alue\()p Ff(i)8
b Fg(\))q Fe(:)p 0 TeXcolorgray 415 2271 a Fh(\017)p
0 TeXcolorgray 41 w Fg(A)28 b Fd(fair)k(b)s(et)c Fg(is)f(a)g(b)r(et)i
(with)f(an)f(exp)r(ected)h(v)-5 b(alue)27 b(of)h(zero.)p
0 TeXcolorgray 415 2437 a Fh(\017)p 0 TeXcolorgray 41
w Fg(The)h Fd(future)k(v)-5 b(alue)32 b(of)h(a)g(lump)f(sum)g(pa)m
(ymen)m(t)e Fg(of)e($)p Fe(x)h Fg(in)n(v)n(ested)e(for)h
Fe(n)h Fg(y)n(ears)498 2536 y(at)c(in)n(terest)f(rate)g
Fe(s)h Fg(is)g(FV)e(=)g Fe(x)p Fg(\(1)13 b(+)g Fe(s)p
Fg(\))1715 2502 y Fb(n)1760 2536 y Fg(.)36 b(The)24 b
Fd(presen)m(t)29 b(v)-5 b(alue)28 b(of)h(a)g(lump)f(sum)498
2657 y(pa)m(ymen)m(t)k Fg(of)g($)p Fe(x)f Fg(after)g
Fe(n)g Fg(y)n(ears)e(at)i(in)n(terest)g(rate)g Fe(s)g
Fg(is)g(PV)e(=)2716 2601 y Fe(x)p 2594 2638 292 4 v 2594
2714 a Fg(\(1)18 b(+)g Fe(s)p Fg(\))2840 2690 y Fb(n)2895
2657 y Fe(:)32 b Fg(\(Note)498 2805 y(that)c(this)g(form)n(ula)f(also)f
(w)n(orks)g(for)h(v)-5 b(alues)27 b(of)h Fe(n)f Fg(that)h(are)f
(negativ)n(e)f(or)h(zero.\))p 0 TeXcolorgray 415 2972
a Fh(\017)p 0 TeXcolorgray 41 w Fg(The)h(presen)n(t)g(v)-5
b(alue)27 b(of)h(an)g Fd(ann)m(uit)m(y)j Fg(pa)n(ying)c($)p
Fe(x)h Fg(at)f(the)i(end)f(of)g(eac)n(h)f(y)n(ear)g(for)g
Fe(n)498 3071 y Fg(y)n(ear)f(at)i(in)n(terest)f(rate)g
Fe(s)g Fg(is)1370 3399 y(PV)c(=)g Fe(x)1661 3182 y Fc(2)1661
3328 y(6)1661 3378 y(6)1661 3431 y(4)1726 3289 y Fg(1)18
b Fh(\000)2004 3232 y Fg(1)p 1879 3269 V 1879 3346 a(\(1)g(+)g
Fe(s)p Fg(\))2125 3322 y Fb(n)p 1726 3380 455 4 v 1934
3456 a Fe(s)2191 3182 y Fc(3)2191 3328 y(7)2191 3378
y(7)2191 3431 y(5)2260 3399 y Fe(:)498 3731 y Fg(The)29
b(presen)n(t)f(v)-5 b(alue)28 b(of)g(the)h(related)f
Fd(p)s(erp)s(etuit)m(y)i Fg(\(with)f(ann)n(ual)f(pa)n(ymen)n(ts)g(for-)
498 3830 y(ev)n(er\))f(is)1667 3951 y(PV)22 b(=)1906
3895 y Fe(x)p 1906 3932 48 4 v 1910 4008 a(s)1963 3951
y(:)p 0 TeXcolorgray 415 4157 a Fh(\017)p 0 TeXcolorgray
41 w Fg(The)38 b Fd(in\015ation)44 b(rate)p Fg(,)d Fe(i)p
Fg(,)f(is)e(the)h(rate)e(at)h(whic)n(h)g(prices)f(rise.)68
b(The)38 b Fd(nominal)498 4257 y(in)m(terest)22 b(rate)p
Fg(,)g Fe(n)p Fg(,)f(is)e(the)h(in)n(terest)e(rate)h(in)h(terms)f(of)g
(dollars.)33 b(The)19 b Fd(real)j(in)m(terest)498 4357
y(rate)p Fg(,)g Fe(r)r Fg(,)h(is)d(the)g(in)n(terest)g(rate)f(in)h
(terms)g(of)g(purc)n(hasing)f(p)r(o)n(w)n(er.)33 b(These)20
b(are)f(related)498 4456 y(b)n(y)1562 4590 y(1)f(+)g
Fe(r)26 b Fg(=)1865 4534 y(1)18 b(+)g Fe(n)p 1865 4571
193 4 v 1876 4647 a Fg(1)g(+)g Fe(i)2068 4590 y(:)498
4770 y Fg(When)28 b(the)g(in\015ation)g(rate)f(is)g(small,)g(w)n(e)h
(can)f(appro)n(ximate)f(this)i(as)1650 4953 y Fe(r)e
Fh(\031)c Fe(n)d Fh(\000)f Fe(i:)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1902 233 a
Fg(\(5)27 b(p)r(oin)n(ts\))h(Name:)p 0 TeXcolorgray 392
648 a(1.)p 0 TeXcolorgray 41 w(A)e(pharmaceutical)e(compan)n(y)g(comes)
h(out)g(with)h(a)f(new)h(pill)f(that)h(prev)n(en)n(ts)e(bald-)498
748 y(ness.)44 b(When)31 b(ask)n(ed)e(wh)n(y)g(the)i(drug)e(costs)h(so)
f(m)n(uc)n(h,)i(the)f(compan)n(y)f(sp)r(ok)n(esman)498
848 y(replies)20 b(that)h(the)g(compan)n(y)e(needs)h(to)h(recoup)e(the)
i($1)f(billion)g(it)h(sp)r(en)n(t)g(on)f(researc)n(h)498
947 y(and)28 b(dev)n(elopmen)n(t)f(\(R&D\).)p 0 TeXcolorgray
533 1130 a(\(a\))p 0 TeXcolorgray 42 w(\(5)f(p)r(oin)n(ts\))g(Will)g(a)
g(pro\014t-maximizing)f(\014rm)h(pa)n(y)f(atten)n(tion)h(to)f(R&D)i
(costs)681 1230 y(when)41 b(determining)f(its)h(pricing?)75
b(Y)-7 b(es)122 b(No)40 b(\(Circle)h(one)f(and)g(explain)681
1329 y(brie\015y)-7 b(.\))p 0 TeXcolorgray 529 2062 a(\(b\))p
0 TeXcolorgray 42 w(\(5)27 b(p)r(oin)n(ts\))p 0 TeXcolorgray
681 2195 a Fd(If)32 b(y)m(ou)g(said)g(\\Y)-8 b(es")31
b(ab)s(o)m(v)m(e:)p 0 TeXcolorgray 42 w Fg(Do)e(y)n(ou)f(think)i(the)f
(compan)n(y)f(w)n(ould)h(ha)n(v)n(e)836 2294 y(c)n(harged)k(less)h(for)
f(the)i(drug)f(if)h(it)f(had)h(disco)n(v)n(ered)d(it)j(after)f(sp)r
(ending)836 2394 y(only)i($5)f(million)i(instead)f(of)g($1)f(billion?)
64 b(Y)-7 b(es)36 b(No)g(\(Circle)g(one)g(and)836 2494
y(explain)27 b(brie\015y)-7 b(.\))p 0 TeXcolorgray 681
2610 a Fd(If)32 b(y)m(ou)g(said)g(\\No")f(ab)s(o)m(v)m(e:)p
0 TeXcolorgray 42 w Fg(Do)d(R&D)f(costs)g(a\013ect)h(the)g(compan)n
(y's)f(b)r(e-)836 2710 y(ha)n(vior)h Ff(b)l(efor)l(e)37
b Fg(they)30 b(decide)f(whether)h(or)f(not)g(to)h(in)n(v)n(est)f(in)h
(the)g(R&D,)836 2809 y Ff(after)36 b Fg(they)27 b(in)n(v)n(est)f(in)h
(the)f(R&D,)h(b)r(oth)g(b)r(efore)f(and)h(after,)f(or)g(neither?)p
0 TeXcolorgray 392 3608 a(2.)p 0 TeXcolorgray 41 w(Imagine)i(that)h(y)n
(ou)f(park)g(in)h(fron)n(t)f(of)h(a)g(parking)e(meter)i(and)f(face)h
(the)g(follo)n(wing)498 3708 y(c)n(hoice:)51 b(y)n(ou)34
b(can)h(either)f(put)i($1)e(in)h(the)h(meter,)g(or)e(not)h(put)h(an)n
(ything)e(in)i(the)498 3808 y(meter)25 b(and)g(risk)g(getting)g(a)f
(tic)n(k)n(et.)36 b(If)26 b(y)n(ou)e(don't)h(feed)h(the)g(meter,)f
(there's)g(a)g(90\045)498 3907 y(c)n(hance)32 b(that)g(y)n(ou'll)g(get)
g(a)n(w)n(a)n(y)f(with)i(it)f(\(and)h(hence)f(pa)n(y)g(nothing\))g(and)
h(a)f(10\045)498 4007 y(c)n(hance)27 b(that)h(a)f(meter)g(maid)h(will)g
(catc)n(h)f(y)n(ou)g(and)g(giv)n(e)g(y)n(ou)g(a)g($20)f(tic)n(k)n(et.)p
0 TeXcolorgray 533 4190 a(\(a\))p 0 TeXcolorgray 42 w(\(5)i(p)r(oin)n
(ts\))g(The)h(exp)r(ected)f(amoun)n(t)g(of)g(money)g(y)n(ou'll)g(pa)n
(y)g(if)g(y)n(ou)g(feed)h(the)681 4289 y(meter)21 b(is,)i(ob)n(viously)
-7 b(,)21 b($1.)34 b(What)22 b(is)g(the)g(exp)r(ected)g(amoun)n(t)f(of)
g(money)h(y)n(ou'll)681 4389 y(pa)n(y)27 b(if)h(y)n(ou)f(try)g(to)g
(risk)g(it?)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 977 523 a Fg(\(b\))p 0 TeXcolorgray
42 w(\(5)35 b(p)r(oin)n(ts\))h(Imagine)f(that)g(the)h(cit)n(y)f
(managers)f(w)n(an)n(t)g(to)i(sa)n(v)n(e)e(money)h(b)n(y)1129
623 y(\014ring)e(90\045)g(of)h(the)g(meter)f(maids,)i(meaning)e(that)h
(the)g(c)n(hance)f(of)g(getting)1129 722 y(caugh)n(t)e(will)g(b)r(e)h
(only)f(1\045.)48 b(Use)31 b(y)n(our)f(exp)r(ected)i(v)-5
b(alue)31 b(calculation)g(ab)r(o)n(v)n(e)1129 822 y(to)22
b(suggest)g(a)g(w)n(a)n(y)f(to)h(do)g(this)h(without)g(c)n(hanging)e
(the)i(exp)r(ected)g(v)-5 b(alue)22 b(\(and)1129 922
y(hence)28 b(the)g(attractiv)n(eness\))e(of)h(c)n(heating.)37
b(Sho)n(w)27 b(y)n(our)f(w)n(ork.)p 0 TeXcolorgray 840
1704 a(3.)p 0 TeXcolorgray 41 w(Imagine)41 b(that)h(y)n(ou)e(o)n(wn)h
(a)g(lak)n(e)g(and)g(that)h(y)n(ou're)e(trying)g(to)i(maximize)f(the)
946 1804 y(presen)n(t)26 b(v)-5 b(alue)26 b(of)g(catc)n(hing)g(\014sh)g
(from)g(the)g(lak)n(e,)g(whic)n(h)g(curren)n(tly)f(has)h(1000)e(\014sh)
946 1903 y(in)j(it.)37 b(The)27 b(p)r(opulation)f(gro)n(wth)g(function)
h(of)f(the)h(\014sh)g(is)f(describ)r(ed)h(in)g(Figure)f(1.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 931 3536
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /x 0 def /x1 20 def /dx x1 x sub 49 div def /xy { x
14.22636 mul .2 x 10 mul mul .001 x 10 mul 2 exp mul sub 14.22636 mul
} def xy moveto  49 1 sub { /x x dx add def xy L  } repeat /x x1 def
xy L  gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 0.0 142.26364 142.26364 142.26364 142.26364 0.0 
/Lineto /lineto load def false Line  gsave 0.8 SLW 0  setgray 0  setlinecap
5.0 3.0 0.0 0.0 0 0 add DashLine  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 0.0 119.50136 85.35818 119.50136 85.35818 0.0  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0  setgray 0  setlinecap
5.0 3.0 0.0 0.0 0 0 add DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def 298.75365  0  0.0  0  ArrowA CP 4 2 roll
ArrowB L pop pop gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def 170.71637  0 exch 0.0  0 exch ArrowA
CP 4 2 roll ArrowB L pop pop gsave 0.8 SLW 0  setgray 0 setlinecap
stroke  grestore end
 
@endspecial 2029 3613 a(1000)1013 b(2000)-1801
b(600)783 2382 y(100)824 2571 y(84)954 2181 y(Gro)n(wth)27
b Fe(G)p Fg(\()p Fe(s)p Fg(\))2602 3513 y(Sto)r(c)n(k)g(Size)h
Fe(s)p 0 TeXcolorgray 1296 3802 a Fg(Figure)f(1:)36 b(A)28
b(p)r(opulation)g(gro)n(wth)e(function)i(for)f(\014sh.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 982 4151
a(\(a\))p 0 TeXcolorgray 41 w(\(5)e(p)r(oin)n(ts\))h(The)g(maxim)n(um)f
(sustainable)g(yield)g(p)r(olicy)g(is)h(to)f(catc)n(h)g(100)f(\014sh)
1129 4250 y(at)e(the)g(end)g(of)g(this)g(y)n(ear,)g(100)e(\014sh)i(at)g
(the)g(end)h(of)e(the)i(next)f(y)n(ear,)f(and)h(so)f(on,)1129
4350 y(forev)n(er.)34 b(If)25 b(the)g(price)g(of)f(\014sh)h(is)f(alw)n
(a)n(ys)f($1)h(p)r(er)g(\014sh,)i(what)e(is)h(the)g(resulting)1129
4449 y(presen)n(t)i(v)-5 b(alue)28 b(at)f(a)g(5\045)h(in)n(terest)f
(rate?)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 529 523 a Fg(\(b\))p 0 TeXcolorgray
42 w(\(5)33 b(p)r(oin)n(ts\))h(An)h(alternativ)n(e)d(p)r(olicy)i(is)f
(to)h(catc)n(h)f(400)f(\014sh)i Ff(to)l(day)42 b Fg(\(so)34
b(that)681 623 y(600)g(remain)h(in)h(the)g(lak)n(e\),)i(and)d(then)h
(catc)n(h)g(84)e(\014sh)i(at)g(the)g(end)g(of)g(this)681
722 y(y)n(ear,)25 b(84)g(\014sh)h(at)h(the)f(end)h(of)f(the)g(next)h(y)
n(ear,)e(and)h(so)f(on,)i(forev)n(er.)34 b(What)27 b(is)681
822 y(the)i(resulting)e(presen)n(t)h(v)-5 b(alue?)40
b(\(Assume)29 b(as)e(ab)r(o)n(v)n(e)g(a)h(price)h(of)f($1)f(p)r(er)i
(\014sh)681 922 y(and)k(an)g(in)n(terest)g(rate)g(of)g(5\045.\))54
b(Is)34 b(it)f(higher)g(or)f(lo)n(w)n(er)g(than)i(the)g(presen)n(t)681
1021 y(v)-5 b(alue)27 b(of)h(the)g(maxim)n(um)f(sustainable)g(yield)h
(p)r(olicy?)p 0 TeXcolorgray 538 2954 a(\(c\))p 0 TeXcolorgray
42 w(\(5)37 b(p)r(oin)n(ts\))h(Explain)f(\(as)g(if)h(to)f(a)g
(non-economist\))g(the)g(phrase)g(\\\014sh)g(are)681
3054 y(capital",)29 b(or)f(otherwise)h(explain)g(the)g(imp)r(ortance)g
(of)h(the)f(in)n(terest)g(rate)g(at)681 3153 y(the)f(Bank)f(of)h
(America)f(in)h(managemen)n(t)e(decisions)h(regarding)f(natural)h(re-)
681 3253 y(sources)20 b(suc)n(h)h(as)g(\014sh.)35 b(F)-7
b(or)21 b(full)i(credit,)f(connect)g(this)g(explanation)e(with)j(the)
681 3353 y(somewhat)32 b(surprising)g(result)h(that)g(y)n(ou)f(\(hop)r
(efully\))j(got)d(ab)r(o)n(v)n(e,)h(namely)681 3452 y(that)27
b(the)g(alternativ)n(e)f(p)r(olicy)h(has)g(a)f Ff(higher)38
b Fg(presen)n(t)26 b(v)-5 b(alue)27 b(than)g(the)h(max-)681
3552 y(im)n(um)g(sustainable)f(yield)g(p)r(olicy)-7 b(.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 840 523 a Fg(4.)p 0 TeXcolorgray
41 w(Just)20 b(ab)r(out)f(ev)n(eryb)r(o)r(dy)f(agrees)g(that)h(the)h
(So)r(cial)f(Securit)n(y)g(system)g(faces)g(\014nancial)946
623 y(troubles)j(do)n(wn)g(the)g(road:)33 b(after)22
b(the)h(Bab)n(y)e(Bo)r(omers)g(retire,)h(the)h(money)f(coming)946
722 y(in)n(to)37 b(the)h(system)e(through)h(pa)n(yroll)e(taxes)h(is)h
(not)g(exp)r(ected)h(to)f(b)r(e)g(enough)f(to)946 822
y(\014nance)28 b(the)g(b)r(ene\014ts)g(that)g(the)g(system)f(promises)g
(to)g(retirees.)p 0 TeXcolorgray 982 1005 a(\(a\))p 0
TeXcolorgray 41 w(\(5)32 b(p)r(oin)n(ts\))h(The)f(So)r(cial)g(Securit)n
(y)g(Board)e(of)j(T)-7 b(rustees)31 b(has)h(examined)g(the)1129
1104 y(system's)27 b(de\014cit)h(o)n(v)n(er)d(the)j(next)f(75)g(y)n
(ears.)35 b(If)27 b(y)n(ou)g(use)g(an)g(in)n(terest)g(rate)f(of)1129
1204 y(6\045,)h(it)h(turns)g(out)f(that)h(y)n(ou)f(can)g(divide)g(that)
h(75-y)n(ear)d(de\014cit)j(in)n(to)f(ann)n(ual)1129 1303
y(pa)n(ymen)n(ts)h(of)h($225)d(billion)j(eac)n(h)f(y)n(ear)f(for)i(the)
g(next)g(75)e(y)n(ears.)39 b(In)29 b(presen)n(t)1129
1403 y(v)-5 b(alue)33 b(terms,)g(what)g(is)g(the)g(system's)f(75-y)n
(ear)e(de\014cit?)53 b(\(Note:)47 b(If)33 b(all)g(the)1129
1503 y(zero)r(es)19 b(confuse)h(y)n(ou)f(or)g(y)n(our)g(calculator,)h
(use)g($225)e(instead)i(of)g($225)e(billion.)1129 1602
y(Or)i(k)n(eep)h(in)g(mind)h(that)f(a)g(billion)g(is)g(a)g(one)g(with)g
(9)g(zero)r(es)f(after)h(it.)35 b(Go)21 b(do)n(wn)1129
1702 y(to)30 b(6)g(zero)r(es)f(and)h(y)n(ou)f(get)h(a)g(million;)h(go)f
(up)g(to)g(12)f(zero)r(es)g(and)h(y)n(ou)g(get)g(a)1129
1802 y(trillion.\))p 0 TeXcolorgray 977 3134 a(\(b\))p
0 TeXcolorgray 42 w(\(5)c(p)r(oin)n(ts\))g Ff(If)i(you)h(didn)-8
b('t)29 b(get)f(an)g(answer)g(ab)l(ove)i(or)e(don)-8
b('t)28 b(fe)l(el)h(c)l(omfortable)1129 3234 y(with)f(it,)h(use)e
Fa($)p Ff(4)h(tril)t(lion)h(for)f(the)g(fol)t(lowing)i(question.)37
b Fg(Y)-7 b(our)25 b(answ)n(er)f(ab)r(o)n(v)n(e)1129
3334 y(is)19 b(the)g(presen)n(t)f(v)-5 b(alue)18 b(of)h(the)g(75-y)n
(ear)d(de\014cit)j(of)g(the)g(So)r(cial)f(Securit)n(y)g(system.)1129
3433 y(Explain)27 b(what)h(this)f(means)h Ff(in)h(English)p
Fg(,)g(i.e.,)f(as)f(if)h(to)g(a)f(non-economist.)p 0
TeXcolorgray 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 538 523 a Fg(\(c\))p 0 TeXcolorgray
42 w(\(5)30 b(p)r(oin)n(ts\))g(In)g(a)f(recen)n(t)h(op-ed)f(piece)h(in)
g(the)g Ff(Wal)t(l)j(Str)l(e)l(et)e(Journal)38 b Fg(\(\\One)681
623 y(Thing)21 b(W)-7 b(e)23 b(Can)e(All)h(Agree)f(On",)i(Jan)n(uary)d
(25,)i(2005\),)f(T)-7 b(reasury)20 b(Secretary)681 722
y(John)e(W.)h(Sno)n(w)f(claimed)h(that)g(eac)n(h)f(y)n(ear)f(w)n(e)h
(stic)n(k)h(with)g(the)g(existing)f(So)r(cial)681 822
y(Securit)n(y)j(system)g(adds)g($600)f(billion)h(to)h(the)g(system's)f
(long-term)f(de\014cit.)35 b(If)681 922 y(w)n(e)29 b(stic)n(k)g(with)h
(the)f(existing)g(system)g Ff(for)l(ever)p Fg(,)j(he)d(said,)h(the)f
(presen)n(t)g(v)-5 b(alue)681 1021 y(of)36 b(the)g(resulting)g
(de\014cit)g(is)g($10)f(trillion.)62 b(Sho)n(w)36 b(that)g(these)g(t)n
(w)n(o)f(claims)681 1121 y(agree)28 b(with)j(eac)n(h)e(other)h(if)h
(he's)f(using)g(an)f(in)n(terest)h(rate)g(of)g(6\045.)44
b(\(Note:)e(if)681 1220 y(these)29 b(n)n(um)n(b)r(ers)g(confuse)g(y)n
(ou)f(or)h(y)n(our)f(calculator)g(then)i(use)f($600)e(instead)681
1320 y(of)g($600)f(billion)i(and)f($10,000)e(instead)i(of)h($10)e
(trillion.\))p 0 TeXcolorgray 392 2103 a(5.)p 0 TeXcolorgray
41 w(So)r(cial)f(Securit)n(y)f(b)r(ene\014ts)i(are)e(adjusted)h(for)g
(in\015ation,)g(meaning)f(that)i(pa)n(ymen)n(ts)498 2202
y(to)i(retirees)e(increase)g(at)i(the)g(rate)f(of)g(in\015ation.)p
0 TeXcolorgray 533 2385 a(\(a\))p 0 TeXcolorgray 42 w(\(5)e(p)r(oin)n
(ts\))g(Ho)n(w)f(m)n(uc)n(h)h(will)g(Gramm)n(y)f(b)r(e)h(paid)g(in)g
(one)f(y)n(ear,)g(in)h(t)n(w)n(o)g(y)n(ears,)681 2485
y(and)g(in)g(three)g(y)n(ears)e(if)j(her)e(curren)n(t)h(b)r(ene\014t)h
(is)e($1000)f(and)i(in\015ation)g(is)g(3\045?)p 0 TeXcolorgray
529 3617 a(\(b\))p 0 TeXcolorgray 42 w(\(5)g(p)r(oin)n(ts\))h(One)g(w)n
(a)n(y)e(to)i(calculate)f(the)h(presen)n(t)f(v)-5 b(alue)25
b(of)h(these)g(three)f(pa)n(y-)681 3717 y(men)n(ts)41
b(is)g(to)f(use)h(brute)g(force:)63 b(determine)41 b(the)h(presen)n(t)e
(v)-5 b(alue)41 b(of)g(eac)n(h)681 3816 y(pa)n(ymen)n(t)30
b(separately)e(and)i(then)h(add)f(them)h(together.)44
b(Go)30 b(ahead)g(and)g(do)681 3916 y(this;)40 b(in)d(doing)e(so)g(y)n
(ou)h(need)g(to)g(c)n(ho)r(ose)e(b)r(et)n(w)n(een)i(the)h(nominal)e(in)
n(terest)681 4016 y(rate)29 b(\(whic)n(h)i(y)n(ou)f(should)g(assume)g
(to)g(b)r(e)h(5\045\))f(and)g(the)h(real)f(in)n(terest)g(rate)681
4115 y(\(whic)n(h)e(y)n(ou)e(should)i(assume)f(to)g(b)r(e)h(2\045\).)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 986 523 a Fg(\(c\))p 0 TeXcolorgray
42 w(\(5)34 b(p)r(oin)n(ts\))h(If)g(the)f(nominal)g(in)n(terest)g(rate)
g(is)g(5\045)g(and)g(the)h(in\015ation)f(rate)1129 623
y(is)28 b(3\045,)g(the)h(rule)f(of)g(th)n(um)n(b)g(tells)g(us)h(that)f
(the)h(real)e(in)n(terest)g(rate)h(is)g(indeed)1129 722
y(ab)r(out)21 b(2\045.)35 b(What)21 b(is)g(a)g(more)g(accurate)f
(estimate)h(of)g(the)h(real)e(in)n(terest)h(rate?)p 0
TeXcolorgray 977 2155 a(\(d\))p 0 TeXcolorgray 42 w(\(5)30
b(p)r(oin)n(ts\))g(Calculate)f(the)h(presen)n(t)f(v)-5
b(alue)30 b(of)f(receiving)g($1000)e(at)j(the)g(end)1129
2254 y(of)e(eac)n(h)e(y)n(ear)h(for)g(3)g(y)n(ears)f(if)i(the)g(relev)
-5 b(an)n(t)27 b(in)n(terest)g(rate)g(is)g(2\045.)p 0
TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
