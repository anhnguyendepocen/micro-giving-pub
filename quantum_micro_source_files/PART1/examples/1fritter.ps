%!PS-Adobe-2.0
%%Creator: dvips(k) 5.94b Copyright 2004 Radical Eye Software
%%Title: 1fritter.dvi
%%CreationDate: Fri Aug 11 06:47:22 2006
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMR12 CMR10 CMBX10 CMMI10 CMSY10 CMTI10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe 1fritter.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2006.08.11:0646
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.00, 2005/09/18
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust {
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
	/targetLength ED /angle0 ED
	/x0 rx angle0 cos mul def
	/y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
	targetLength 57.2958 mul
	angle0 sin rx mul dup mul
	angle0 cos ry mul dup mul
	add sqrt div
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
	dup 90 ge { pop 90 } if
	angle0 exch d
% maximum number of times to iterate the iterative procedure:
	30
% iterative procedure: takes an angle t on top of stack, computes a better angle (an put it on top of stack)
	{ dup
% compute distance D between (x0,y0) and M(t)
	dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
	dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
	exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
	2 index Div targetLength mul y0 add ry Div exch
	2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
	atan exch pop
	} repeat
% we don't look at what happened... in particular, if targetLength is greater than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
%after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.00, 2005/12/15
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc
{
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow
{ /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar
{ /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def

end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
/UniqueID 5000828 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2D80B2772B05DA60F3DC15A815A6BAFEDC399C7956E75
3851CB3588E22936FBFB63A58300298B11C45D82385C083D07AF133BB1BC941A
FDD9F34D5E0B8087EF2A58C54D8AB7580EE3ED58AEB83B72CB9028F472ADBF11
05A77651F118824F6CD00209EFB60C1D32D46A78E8C8DCB8B0E742828E3B7D17
DF5200D68189C91FB8489CDEE8BC223C4281DDCA5F7DA80BD5C2D66A13AB49D2
3BBBA5D38653AAC7B813F29F450710ABE135CA3AE2ED2112731C8152ECE13039
132650336D906EC4B1E471C17C132E7A1B8DAA02A55E2DC4124A2929C3989106
57C35047F319DF546D864BA17C5A1F360D570FE860C5C364D00B68778B5BCC31
A6853DE483B1F456B72FAD584CA518CF445C5FAA7A8C67A1170A20528761B662
509A633D41B7E72C38A329732F96A949B275A6F5733C7DE74557F5A621E3722E
B4DC6CB14CA1F73D29D718FAC485D86623ED9B11CF383ABAC22C783DB0A66C96
C3B91A8633B5EC6F48DF1A50AD9C81EC0680662626AF069E77575797007AE732
0487E8EB1F46FFE7BC875FAEBBE67025F878B8E0E806DA12AF22BA55D9A283CE
20278FABD7A77FD38AC80BA07D48950D7492CF5666A21978137AEE1D64B1A4A7
5DD56DA8BCB02875983E9FDB149CC16CFA9430C5C487433DC5FDBF1DF0523FAA
A01E9016EF632156D324D0ABE482B23324502FEACB0244582E7952CFA822A5AC
E49BE633D8FB9E88195C0766E0923EEED04027C81EC7765AFCE574D613367759
856047F9D4AD2978C9F8364826ABF4E5D4D87CB2DF420B7076D011635414A015
75288E0F9D78C3A2442A696DD06B11E6F1B79DC2C4D29EF565042F598BB9A06D
C811B773EB6D3E220797EC39A9B9A8A8D8174F3AFF00ADA212F0B9D3729ADB4C
263681F1B7B2B654B8EC06BEC65E07E1B6328721C05419655C38FCB9C3831EA2
390C59F957521798DBFCC2884F997BDE0DBAB366025D0EDD9C68F62ECE0D2BAF
2FE01AEA1FF7076C9A87C2A94F602A8CB530E29A3F83F3AEFE16B9A0D7EB7BE6
735E4E36C4F2D073EB41C1A70DB2AC4FDEEEA0E040B8925AE24597638430B28F
A03779E3907D11B64FF99786CD0931B85F39D043A63C65871F369C3026776D2C
AFF70E5D4F213E7A16863B67E0FF8498C60F2AF28F318F5E880461B2839E030F
ADD12C337EEFDD1DE8DA9A091043DD62171201B12E96713EF03B7DCD8A0E9B86
9938CB0C10684A78B6578F1B93A39D50B6B399ED6A9944838C2D6A334EBC8322
A4F3457D813BF9801D7970A623091E587415723461E9907213C1B2E86EED9DC6
7BAFD99682B26711D6C41346B509F1C0D41D8076A7B6465412B254F29C04972A
D702676FE8BC7CF234A1D91E919F6B838B3E6DCE7A6E7338013014E381C2CEA1
07CE60C86753597B09F1B5D9C20021D21CE51301932D52616F17742ED30EE30C
78B95029E0D5139CC32F6D155F47ED4CA059319F88ED5B8A2044F8FAB4429A35
7A813BB167275537122424BE1C22309A033BC2779D32C6DB5264CF6AF2CCC307
331E0DE812AC5AB03139C05A360A257A5E37948F8E2580777B124A1F021FF059
D8615CC4ECE07478893A1A6FCCEFA275EF4A7728BFAE0FDF8DD8A64FCDBA7E03
922CC903E9E8148B74BF89B7FE57D7A0D622BD7C675E5C9C7479763ACB251985
DF60319DA3F4F565C5D7AF43062EF54FBC0D72D0A80D0E833070C725FDB13BFB
DA0CFA667BCDA4A3FD7FC133D934732779EA653B9F342DC58056574DFD63BBD7
352DEE062255701F19EC80612E51DDA00F99AA8BFBF98FBA0BB66A0CB383FBC8
EB9D515987FA95D4B9A166122C555C2F5DE306FD65E94D69FBF37342D3EAB425
ECCC44BE6DF5EB9F8B0582E5A327C711B7114B1DF57E89CC3844D9A5BADDBFD1
55636CA68AE851504E8FB2980C7315B42B57EF4F5376E5CE8461FC4F97BA10DE
9C3E1AA66709839FE0B402B0A5D2E737F492A7BA02E97A553C451852547417BE
76FC6A84E9930F221EFC4688C3772FE033EC9AB980E78C854F7907D9F65C7E28
FFBB50DF12FB90566BAA90EFB33A6C69178DE1D0AE529E25DBD2F26730BA31AF
53011AB1F4E360F85EF4639DD0A2BF8C2A47BE32FC2D9E806748827C69156D58
AA23C5455FAAE7594F93BF203F9E815F8B836D4F053F7907A402E934F288F95C
994B05747796800DB39FF3B9508CB2EFB5D7F28A1EECB38B5DFA2BD7A09DB21B
3B9A1CE1AD0797840231E21C9B7B7046DD40883B0924B6B45FE2C1CA7307050D
189E5A8442EEA082212FC986D3222415D7BE9396F1AE2637C0256DE93366E4B0
765FAB3E877B16DEEF48C14CD2860AFEF97BBA96051CC841964A907F011F76A7
13383960175457EAA4DC220A0BDB91A0B55821CC55DA55615E3095F12F53CF00
DB7D31ED111ABAE3EBF9DE10EDD928E1B59C888938984020DD73CCB9FE08D90C
5655EADFB8E46B1F844EFBE686D0811D1812B59F7566059533E50E713CEB87DA
12468F075DF85A67204B84208A096F7A9DBDD9367901C5DC597FE00FD6F5DCB2
F3057EB78E38B6DED00B5F2227A3817D1B9F01FC5ABA33AAACB70186B68DB862
5BD3827B69ED3B5204CD5F119035A103246318A0E809B9C23A4C9B995733353A
D3896256D2327E2F3C0779C2DCB848EC864CCEC1465EF52E18FA12E9CA54BE7B
3E753629CBDA1248EF74F35B71A823F4A2B2A58EDB38C438F3DDFB94BB49B327
BE6069A95FBA5931A2F1E997867D887D5B17B57F1DB6B259D7E214D6B3225751
3B0252DAF614AAEE68D93331DE5062B3C19E909DACC89A5881AC35E59D19C46E
02F5FA9F6884AAAA35977B8585B6C1EFBDC704D7F97AB9C1B99AD55A6663F95E
E3F438B2A4C3BB965D0F338F28B124D7F00239E825C4645909C28B372675D565
A8E39DEE04C9F9FD66FD5DEBA901BA1AC65712535A96907FDC82DC34D6893C4C
A23FBC9E35CB11CBC2AE39B936B0A72BCCF7025027C3B0EFD57A5E29CA847F56
2553324563AB889F5AC5C168004D301DF602426196D9E1A9FD44A6602C997435
4BE3F84B0C7949A67A8F7BE67C54455AE2355FBDE68819DE9F8A3D998FA55933
919FEBB9969F30B0E6AEF4F851BA92337EEFC12A6F819970B9257B63B1FC0388
8A9F7AF7B9E77CE1247E1E084AE0CBA92AB81804E59ED22A4D7822E50B5E0CDB
038B34BC04166B55DFEC06B8BCE67016829200E9AF8E09465ECDF2A2999FF316
20BBDF2D7C0ACA0E34964CB12F3DC1E00A008CAC5389B807D9958BC94E9BF01D
512EE0BCCA7A5560AFF8E71BF3558F91DC3DAEDD97E0CBC9B1CAD5F12F583B47
7E590A36D922D78EA636CB826E00A6EEA06BAC37350B5C4170367E16163A78CC
9D386E5BA9161415764CAACFF62F84D6EE36B3D77885D03D18EBFD3D0CFB4033
77DA3F2864FDFDFB155D7CC5B6B16D22232B0BF50C10DC6F67F8B6462D6DA18A
8517BD9FFFAA78B95EDA099BC5427FF3F1D39F2CB57E3F9DAC1C2F1AC74CAF3F
69E8A4A2DBFDB253F9910D8FC1CADBF051E89CDE0A8A3835E659507ABB02B813
51028FB146A35440C402083C1D9245394D2D5324A07F575C15E8B160BA5A0166
F94A7752BE6F243E19FF300D6EF23576215AE42D4AE98175C7F69D96A81AE514
D7702FCC7F87DB728012BF1BB7F2864E402A17EDD1254471A0BDD258E300807D
40D305985050530BD2D7794C352013A3DBD01DED9D86C14AAE998945979012E7
930E38DB431610349EC4BAD8B3E1D28B4A6FE5FF61604C1B2C02EF0CD4011397
9ADF2058DBEE3D53F1327FD3E850D5E1972A09C0CFDED0D4596769A62509B3F6
6C11816371015792D187E3C7BBF257A8A34D4AD1E11C6CA02BBC016BC5E8AD1B
3A9B413C32A5DA8F57F0756A04953570BCAB1508FB0C52DF2F9793A4A2569EC2
D4968B3A8F9E439900E8596135A4E425FFED2CB04D9AE74F1866C8F0E40A08F6
2491BCA0C6F2506FE9ACC86570AC39F18CDDBDF4526AE85AFB3CE66B702AF0C2
50E09F6DF4868BADF7B3A2EFE9754956B00E243B40837C13402E7329193D46F7
DBAD5F4204F96CD8614D3418F2DE2D2C8D6FDE5E1EC7AFB475BF664A1FD4CA85
62CCE9D0EE3F1C1D4765D0345EB359AB157F80A839575D94230586D5D0D7DA7E
F78B315C2B743E8D763FA4F36BA3AE999B2B30363E0728153EDC98BCD01B48D8
54D1CB489E32734BA0657345E7D2BB172C1294CDDC55FC5B247B86682B9F45D7
BB907526267C21085FF7188AF35EBDE37E0F5E572C9E49E505CE8DBFCC259923
DC0948C49F8343B800E40BCF3A7CAB19DCE213064A796D48C66FB97C8ADBE877
172760079CF52E88F59DAF584159E52459C6D00B4FC30ED7A554511A33780D37
23E7F37D20F70D7FA6692D21B9C8489A6BA899593C2ED6966FF31C48216A8740
27BDFDF4FE2AC62C4D53B96F25D45576CA4E625B505ED434DF30383ABE48EBDB
A89A97BC4B84005175523703078E3D6640508E6801B346E940CBE7AB686B1193
4A3DA9322FE72F89022EB6418EC071DF08F4086AC411565D02BB42969229988F
5BE720BACBC664A43ACB245A0252BDBD41BC8F9CD46FD12AFB74AE8B284AAE75
6C4AA066BA2419DA484DF0A6E0E3BD821C52486BDC03F72B3E2634DCD2701521
7D309781934E8D88C5DBC6AFFB3B1169B6AC9A6999171FAEA895B178BBA8AF88
3E2C5A666D48C3FAA09D3590043361A3A7A908BB0C898DB697B512DD4FCC8A8C
BA1C0A4122887AEBD5E848BC2855375543FBE7B034816062ECDAE2BBB949DFEE
8B84ECC17548B11EC3DFFB9149092AC602878E2FF1724D77D3E96EF6F704924B
9F6AF211F0CB2C625CE01D0CB8D9C192FD041ADDF948CA857882BFDD50242D16
F0090C889550F4FAE2F4B666DE01E9287EAF5C198E039967B778ECAC20AECCA3
D013B8F4C6D06FFC60DCD1460191C15E8999695415B4D86359950574BEF5C807
618F9FB5B111422A7E43EC2CD9F7377F8FB39B540360D59B58849AFD33DCF971
D46A62B0B19A05326D53F1C2FCC678F719D54F8285E4B4675A41FAB9D1E63AB7
36F7BDB3E98455C918089EC658D9A018C93A200EB1A473AB40F7E45179FC5F5E
0A7AB42664DF8A28E1D4E0AF267373B53316074B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 25 /approxequal put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC570317AAEA74A842CFD26F9591866F5A0
9B4EAD7395F5196B36997F1D59E88165C94739E74C2B40820F8C972B175ED79D
87C9E323C3CDD5C2BEE6409017767534E19F45AFCE2C6687733451AD2E75D112
42040BADFF90F5FCE19923CC1D0C66453991CA813BBC16B5DFFE423A00EEEE9E
22A0EA62FF516AAEC38300AB23C68B9D93EEE7BC29CCC9239E337780666AD40C
145318FED577D49BFF4E830A04E80486B5D9346C708C301CAE29CE35362923EE
80B20CE2212F313B4198F7D65AD10360AB4AD0056C79A048A2D568358C3C9F73
0DB0C9F22D9634B1279152B9DF1CF3D861524613CFAD2E243276D8CAA0A278F2
5D03888A2856CC5D694E625F73D686174FD6E01662098FED33DFDEBA1360375B
4EE5505515A9A2125DFFC6CFFA504D1DFA6FAECF43D02D69B174F6F3AEEAEFF7
15D6CE64499DF5F7C23E21AD555993BAEB841752EA53DFAEC282CDB0C0E2DCFC
5544212283D7363E6E171EBFC6D23D467F5BDCE77DB94F1A46AC2321F215C96D
78370056E8A20FCA34474C6B066405B913A8FC36A7C2A4F471F758089C561478
E915BAFB4403D6B8BD778769190E84C77633AC9BE9C68D8342D7238523678600
28BE77563A528E11A58F14EF3FEDD4485DA35FFCAF9D727DFBD3A7C5AE26773D
D847E153FD122E3E581B5BF45F90F109FF4456341F5010B419FD44E233D9D348
7091D7A7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 105 /i put
dup 110 /n put
dup 114 /r put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667C419C4021DA92976C7550A196C257FC2124E6F6653FAEA9ECD781C6
793D55009809849DCD349D18C46B7072E96A292E937463E1671EFEF393030EF2
3127AEE8F957106A8BAE6B4C2B8779DF8696E89827F4C3B0FB06004786003C64
3D22D95E2A767229AE5EE3662EB574C523E6A6BE4A94FDFBA2E38E1E01E09267
DA2069149C0084A35F89D0650BAB907B87DCD3D7E3C9EF6A2C523072C4D516B5
0F9D266097139C2B8D665B589DDA7B15A5B9ED8C6048557A3601660B6E8B7EAE
F3BBE60A0BD8016F49758156DFF98A576800A080C4BC5FF838AD136F7D4B76BD
266B748E79A38E361F5C2E3144CD15EECC2A27AC05BEE5234DF7E6C20F4C623C
B4A1478FBE95363060ACF7665139060345C16245842F0F66CD9944962E65A705
55F72A5FED70FDA7654E90FCA58DD0B02A21ADF056410A0717C6EA69EF10B078
17A0DD83C022A7F8588764862A683AFD421599AD2A347C26ED780F4EE74368E5
2BE9C4AC1936AB8BF187AB7E43A593E2D26BE555ABAB0613A525B356B3916605
21E3F8F22CF8DE95C8C37769BA49E62E45877F0AFAE2DA50E27421F7F786E464
057D0489030CC9CDF91B9BF08B284C373B571194B38B8C09CB2213C6F7218B8E
E0881715B60F4602F9DD5AC8CB3B8EA153376B901DAACA372A44AC16C7B58620
F0312AB51314A43F167F5A387D3A8BDA5DDE68CD0D100C0C55620B822DD23C42
D1C6E1B9E61D8D407BA3B5D9FA851AFC1E459EB41133C70519BD409EE34A4B87
CDF0F32F6401AB55FAFCC5D1C6926191B81357D04563740D2DE26BE379B9DA9E
EC089F331150E482CFA58D6209D4B59A5AA3D616ACFD5C861C7722981B732B5D
9D2BCCC8DD4977B47638A6C8A461FB4324C004823723ECEC6FA49514A2AA0B96
05D67471291F5BB0D64BCB60F2F921E91A7ABA6E598E6EB4694784C4662AFE10
EAD063F9D48FCCE4203FED7BCC2A2E98C5B60C8D9C50E77CDF8BDB658F5D1AAE
A534627303FCA92C812EEF70B688C836C4447A47D3B30846623D3B28F8617C52
ECFF4E5CCEFF0A58A35B27F4D36EB8CF7A0917FC08AEEE41A266648CB25AAE6D
215764F2E57E040904987524802908110ED1091E310E57C2096D0BE796C91A1D
9B85BFBD3BE388A102F4DE76976FE05394DADFAF112B99DA5C18D35939CBFC8B
A33F42CD98593B8AD6A3A6C91959787777360605CF7CEC8CABFBB17FD604CA5B
B0D1B71278BAD8E3528B3AB3C60A8B7A14339019E4BD836A3B5EC79831A19BC4
C3B287520729A1F66084D68F3A05CF247F1B075B1796B2D4B84FFEB2D5B8F02A
FE1E3748510A255007357C0FD80E1B1B04C2F3673CD40167161628D136E6FC8A
0ECAD79E0959C833DB00ACFE1C22458719D20731A414EEAC79B8F4B25C140A62
C1208F0921BD898174757A2C8C0F68542FD4288DA3A395E5AA668F2BF8D81A79
EC7C866D19D5DD0D26CD15A217E144EC487ACB6940AE25EBC456A920EFF29A86
CEA492258F7AF2650E72EB78500CE020579740892E79C2245C5B883B1995CB90
7636834DD40B5E38683EA3F3887864BDBE9370CB77AD99D42E91A1B6B8017D2D
C2A92085EA752EB3D355FAB52D1C3FCD4E9C5C6607AD2FDDF230822E247CF5A4
9480D3129C6920C3097B449E2290D8975FEC5642999E4D5CF4CA36B3ADD8DB59
0550374E1170A4A43629FF9B1E4CAB95C6FBCE49049658A595F07B18180E513C
10A01924C8DACAD90E93296F33686B050793FF71A56AF8513903EA286BF190C9
AB7E2976AFAFB8FDAE0E75CE3895C5CFEC1A7A06E9928D82457005F6D218547A
9E7F1824D3A129728F83075E030BD83622A38DD672FE56F987DDFB86E9E9DD47
93DBC900265028C15D89002B3858F6E5E3996667B454C7D4E6AFC71DEFD7D963
BDE9DA7F1F9F08828ABD3CBCB3824CC07966538954CA9D1529625A34FE010F34
7B358AAD231BB57B81BEC91AF74704CEA936C3020A54468A91EDD3B7D701FCED
A45A052B97999557FC6F8AD1AC60F7E8B2B0B7F21F9DF2847598F60243CBD613
F44ABBFD24FC71A8C821B81048966D2687D0E3B043CC42BEA7ED6DB7E40ADB92
91FCA415DFDF9ABEF0B7AA5DC56C288B2E6F631A71A2F5C32873F2CDCAD52D50
1E9C64794C16FE213D1538C97EA4A73BE3BCB4F49299C5CA87F85EC3CD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /fl put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209608D3976637A
DB9C73EB3A28623DF758C25574D740385B2C3D10086AEB904A33DD76DA2CC4BF
7E37F9117E9D81D3EFDA12D5BDF0067450C5A8A53959C055C5D6087F1FE6FB5D
8306F16FAD71AB986320F1229440C63ACB5FA24E41CFEB12C2BEA2C25E59A3F9
6CA5B7A04B57F2471D36F5B41E6363DCEFF2DFFE9131F044125884739392333E
15418156EEE8DE92EF4C176742032FE8889839755D8D821CD7F8FAAF8A22C283
19F79216C6D454A864898EE9F830DB5F3372B8F47C464DF19C69ACB3BC0566E2
F25E7FF148B2CDA2B90CB5884440F464CD57295728A4415963CC1BC0635BBEF4
E812CA5E0E788035873D05616F7B0F6A30D36BB285E7955CFD860345F16D952A
BF2F7D2702DB352D0874442B2074859EB49313BC27E1067D627362649D82A5C3
A57DC5041B1A13FD2FA89D875019E23C31650A25CBEEC6B93C575C363FAE2164
76ACBDCDFEFC8B7BD24AF41D55196DF6FB2F28DF88349947B448513C7E832EB9
F35B28EF86C231336351C1F89AA9AB1F8C02D0DC35746E97C2B29B7A44CF7418
89DAE02563F58C453F45C231219FC9727D5D477B256530D4492AE7E4E3CBA90F
50E8BAF9435EBFDF819DA9EE1F6F67A0D65D35E3D0EF63274B611B25756461D2
BFEEF8BFD513B0380993B8D52A6546D69773D67A15C059E6A89CAA2772162509
3B054860006DEA20685F5E2937C95B50D07C6316ABC08495EF319B36F8E48FD0
DA482F82D2D981C70ADA2E467608364EC664D151BCE2FDF571BA63FC926CCD72
052D4F83933A9582AA6642773A62555FD57DCF1448BEC02304B798B7E35FD7E5
081A85A41D0968025443782BD29EFB5D93C7129FC3118662032D05CC768DB05E
7B70CD63A0F70F7F30D3717A2301CA0EF153FA9D4AC7A752DA435B63C90BB116
2AF602DA2D5D4F3A3328392B5F3CA430BDFB8694298F8ACD1DC0A59B4A18A87E
BDB7FEB2F45984C2B36889F70D43A8ACC48FFFB086933CFCDDCC723A92C5D81B
3B8D5E7BD3C814E17A3BAC05B84458A1D041678A1BC1282DC784E4B54417D731
208BD50F4B6E8558F478FC6667B497CCAAFBF5996DC597DC039765E576C1EB61
065D26EFEA3434E576792989C80DEB9A5A5EDF6915B730E031EB77BCE240FD0D
A81A98BF4EF004DDB1EA743DEAB65E37EE7475CE269618C727B596C3C119E92E
262316BB17B1B56997FCDE6343BCF09C5B5F5940EF2F716DAD5FF5BCD95A9F64
E7B928BB7610E9F7CC1E1AD5E8BB0051D94360434FDD3FAB8FD8D5711B8FC077
B1F3F7AF3CDABDDCACBB8AC7519E0923E634E8D5573E526A7C1E5697A8B0960F
FA98843466EACE00B2F799AC3BCFABD4DFB00F820A66E9990644AD55EBE93577
2CC1F5D968907F37E117FEA18702CFB53BF755251A827898F02430AEE7366202
07EC0D64013C585FE09FA49F9A553E2E5A704EB1526F7A43E8816E1330895E23
4E5E97B59776D8A44DE4CCA4934480F95C54911D18EAD4630BFCBA0511612BD5
09D3E964668A31E9E19BC07D72464A5CAC4A053E759084DD7C5950FFA1C0B348
B39F817B414D72F46B5D3A9AB645E75F90E847126CAEC7A1D3B66F848F3880A0
41942C13300DDABA3DECBD1BA8CC11D2505A368D9C82B845B36FD372867FD91B
9907A424581839AB8CF20D2387C1A8946EF4528912292806DB84C6C93249AAF8
CACA3678A95AEFCCC86E04D278B87BCAC3419B23479CFD67F836968CE86F6ED1
7E067218EEC3E2C013A42C1F836E2B75DEE3181F2BAA6D2A0E31F09ED9853BC9
176AAEF7D8A1003BB29D24D85DAEACA080A929D9EAE3B959ED4500E6339ED18B
5B04DEF9E4173230477AB8932682142994A2AC2DC2C29582C610D0501CD2CAF5
5EF1985BCD7A998F1BBD67B2E342F6350B98EF37F63EC9AC5AD0E28D8BD4626D
AB68DAC5B54C916DD32D6CFB2F3EE5BAAC57DE8BA36D15EB3016E818C7C1F7EE
A61E105DD222794237F92C214A446AD7580B23F6121C372F28D275A1AA9F37C9
3590412485DB7C5B2E50596C524DB1F55B621F1022068965A3F2769AA86C39AA
6857B04AEBC2CBE2F1F4C2531BFD5E7A2E8E7758335B5C6829D7863A047CBACB
5D6C713D10CEE29BB2785AB64B00DBE8ECA79470922184EDE9FABCF28C33DA13
35ACEB1555150768BB74273A7A14530374E55C39B89886F35EC54457C2E4987D
8ADC6899DD3C48C0FB31E4E86BFC65828BCB0D9A4492B8DA7E5434BBAF8E9254
4B5FAD16F3D36DCC80A4011F2622A9FE3CC4813B140D9C15EB42012F3054D5D0
C5A9584B2EFA11B142744E1F9FF7C59E081D792B99CA283D94588C0AD2D0BFC3
C00470E9A89D0F56A13E8B4A02D10C415DFCE174DA2788B8FA90B95A38633DF7
43EAA05465C61615B555A58D8382114EDC9D0786B6573BBB163DBF4187778B5E
DDC0DBD5819003541D0B34CDE78A78A76D6C4AB7D278BCFFF4BAC824620D889B
A6C6C84185338C246B765C8957C43E9923440620CABF3F5955A82B9E2C946E47
C7866C48056D356139556DCFB19C0026BA09A62AA982367912D9B2F7038CB546
C68B0F5515E7BDC1A2F418AF13B0B1A2309373A9597AA1423368D82C05B942A9
A4792E95647BC28AB7B043FE1BE256550758051443E2620002A0B066E52305B2
7F44FBB89A6A0801FEA20B94537100DBF5AFE1F8BB64F100ACEB583D963BE653
A86E742DE294F3D638638E4BDC713D7281192947A13624BB6779D5C7B4971C92
F2E61930E0E2032ECCF8A5A3DBF3D7F8CF265EEDB5D1A1CC71707C7D5FBD0911
F209F0BA1F3A339CE1C21EA919408115D1348D081F540D3BA32895BB3CC94955
A11B9B41314FEE29D84A956643B7AC37804A1C9660B8D8B6F2FF2F82908D3C92
ED05B15752D139C328E6F49219562708458A7B634ACAB7020604FF708E3D4FE2
59B93364AA1F727A9B92C01306C20A432E5E773BCD5CFAEC90FAF2413D480B49
54510948630B561635AF5B045477E74F82E203AA5BCE170575B5634B238A5A0B
28099AB085D2EE42ED51E30CBFE8F46A7EAEA9BC8738112026472B555990394E
A14725F8B3826AACDD8564CCFCBB14D67520CF821D654F8CE12D9920211C4F5F
23F2F54D66209B6C2AA831656630D09D985581C5E18BFC71227D88D0DB0D808E
D15138F24E9B947661D5DAD786B3E1040D65E89796B8C4C0C158D3B8B483145D
B7D7A44A8F58733CB605D8BAEA1F9130D5F8A78FA7A8E3EEAE190844F10924F0
AF7BDF14CD5C5C9562474D349BBDC453B36B016B658B65C52A55A4A38AD89AF8
2FD211DCD45762D96EA461606C56CD6676146237C7EB9F9AC03E418F99D1401A
0998663D6E0111E86332D4ED46BA349BBAF308C52836E04C3664E787B8960932
7D3B44CB16265B1551E5489D770C05CAA2CCCBA2ADA477D3D82882B77AE3D0AE
C003E6A907BE58BC90AB1AE532706A804D90D0C456B75138AD7B65F95BE6295F
BAEDCB1C77FA3B28804D55B9615E36B4C3CAF37E2E74E6CF1DEFA043F6AA3D01
CA4C1490AFC7C482D8F7E7B4797E46613FB731B4A9D8773A8CEF7B4B1B9EFB96
4A14651EB6BD03CF62958F777A0D0E5301B579BC5DC6D66E522EA58CFC062746
7FE8E1AE3851398ED5A466AEB101578FAF68A5E92197409878C26F5867AC9129
2A52C1AED6B0A55AB7267C0CF310B76BDAC0BCA6515BB23ECFF275B7B7E5B691
5A523D6923766B7ED0DF957D756402057F05ECDB614910AC9F987FEDC0829A35
1C9434D523B652F0D495E29BDFB60F03AA7E265CA0DD313D1B34A5310C8DB072
64DC0639E131504FE44B9CC2622B87FB64DEDE6D150D6A7562B880508EC2C7B1
F517DCBB7615E1C4E4F08EAC153E9DA545BA918130EB2D25857F25FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 13 /fl put
dup 34 /quotedblright put
dup 36 /dollar put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 56 /eight put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 82 /R put
dup 84 /T put
dup 87 /W put
dup 89 /Y put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71ED2
A539CBA75BA35E2EFC1A437E6426EF97D4F1587EA47B04B052207D997852AC83
613139D5F040734E8D349B51CD703B8FE781EE6FF3F1CEF2642F49E44AB01300
52FAA7A38FEC8B1B5789040B330FDEC06475E129F13919FBDF16D54E6EDC7D17
4EC90945404C5B91C7D8727BF11E0C3A1FB3EDF7E514AB5693C90D57B991038F
452EF8162EDE141998292E9998CC90A2B9F7983C12F76D62E6B98D83F0C590D7
9E612FB8C4FA08F8655A0D556930C172D16CBADC25DF20EB1EDF35AE420287CC
545B1F87689FBDD87586B11E6ED7907A5A947FF2B8E42477E42040FEC447C423
6117488934E12A5DE6490C274A29EE2FC01C25913BC44D69B3AF2FE2CDB58EF9
18C45B7F2DA5760E8A01A46B8226402367EBFD4DA1196781E1FA3C784203B38F
173382030F577C091CE0F82D95D2AB8451DB683159A3936702CB9F5858F7D48E
2C2AA8284ED768B1555C02AFCB4685EE933E0037171DE3743294730CBDBAFC6B
69EB494A4D4CDBA2A4AF374EF5BDE2155B685B4F3A07AD6EA59178A084524A55
418C41DF71AAE2A077A164832BC0BFE6DD27B6BE0A8578B6D7D2B835F8FBDC8B
0B6E85C71A5AC60512C03A7322C577BD84DEB4536386594E72B40BC7AB2EF9FE
7C8C906A2AD918FBB39039E488E3885F8C2B62469842A094B67A49EACA3B6AE9
F49AF2051EB95BFDFFD684122CA9E5CB8B73643F465F279331AFEC21B9199DFF
EE5B7FB3D8C00F7AF8D168825BB29856571DC10BCBE9899C89AF4AF91B44A706
DC678A6EA34CABAFA33A79AE2C117F3CA934F00F6381AABAA8FFE33792BAF29C
9C845FAAF42C7AF0B7BA851FF8280D2C1BDD3DD89871CCB012882AD0B1DDE9B7
2445644447E67C02F0531C7DE2D1061A137D469CFC0E9E9A6D7958D9DADB5D3C
E185C2AE96EF45C08BDCA42966F1C6FD963707BEB4326CB0A084CA745FCF2491
2F77E5C213D71218EB0D8BF24F66C329DD71C2C0F513032D4F40FA2ED5C8735C
3CC9CE977F7FBF95D2C47F9E6A2216BD56C167206626FF532DD43A3E0B767F67
B120D40DCE88205483A4A83C93E312E574DDB9D301C095C72F971550C3CA2F7C
AFD93CA182B25B110444D34ED7D0454BA5FBA11CFDBC16469465815266B7A7B4
4573A1AF23F62F9D96182648110AD7F0FAA258FB990F254315B320D5F0568588
240E8AE29C217F057159316E428E93741A4C1B7BE703368C247A99A488B2C668
9FD4C701B2D7315AF10A647A8CF7642E4F948D08C1A696775658C2164531AFFB
A5BF5B4D1C6ECFD84190B71E767FC3BD1D0804E22DE633A32FD0C3EBBC3CE7C2
35EDED7F11916EF4BD5CA3BEC6A7DBE45E19DD746B52404737185669C3216F7A
CA6103AE3F5668EAD10C6F63EB06DF61D8D2BB998B17AE1B3775858A9B1069F9
AE4A3A02F605ED727FD3FFBDA3AE4F3B95D45DE9C170EB97F0DA42B0A1F45228
C585C60C1CEF031B8F372E5AE1A25AE9816403BC8062E61AF141AB8951895B2E
587465B5D335482E21F4CFE8B0A25114EE96A2BF260CF514200B630400E676F1
CCA8C5DAD796DD6D75EE9885CC61D49A186890F70BAAAD503A66BF3AE29979CD
001C1AA79AA3D73D2769943A29E462F9BA737B4552CAA7F4C32D3CEF074691DD
3041860C6D9A33F3A8366DF7EA71F517B285B014160599AF3401060BDCB0DA12
852C6C7B66A0958A61E0B785232796E064A176ED7ED16912DFA0E7974297FA0F
BBAA052ADFD02A7F737584D44939461C0DAE1F7E05A4A394466858D66BBA78AD
C9E33E6768E57D982E52F55317581AAB8D3D9C6F43634C9CF80B43BD071E6EDA
7E6796659F10715115C0918686F153FB967554257989C951785FD9B45CA9D423
AB2934B23FD39C318829BBE0D03543781AE457B781C81048E86E1118FDA2A1D4
DD0CACB60FB680D98B2EC5A7E8BECCB8594A4C252569132B9825C08536DFBA51
B1E6E787CF1BC2B842E189ECCFB84B1D5E5CEDAC72C0295B230EFFC2B4DDEF42
40D1B8943D38B5C2651F2ADD0A0FB2C00D4BE57BD46439B8B86EB3057E56447B
A9CF940140975DD9C81F4C8E2B186EE3D41F7F579C888D98EFCE0D3445275AA8
6D7223244035F46FB7C8A479AA9F6C5AEC529CFF7A0578B9275DCABC089E7B17
CE853D05698E463C2DD11F40832728740ED5ED89B752A32AF05921AB92FDE764
D42C506810AE23B5A4285B63DB2E2FB49774ECAA634E2A8CA7572BE4DD565FA7
ACFC34F5A2E2EEBD53346D7466AAEBC70C0CC8F3BD38AEEBADBFF13FBE3972C9
1C868A38C27FB0545B189F0CC056E5A2BE0613E085256763E8A0BAC94AE58880
397EEC9D04958C12A9708426EC24EDDA431FC2F1D9DF902D05B1D017003467F6
94756E82A3B518F2AAD2A885FE9C7F7AD913D1C9319974F4F51B5CDA6FBE771A
E170D845A4B9C7436982DF22A1B88649233C0A83B77A8AFAE1BBE3CE1D41DE2A
D151F9213CC9B33DEC1FECE5FF081262757086052EB82C49D67D4F56F6968780
48D59E29329D9C0A19AD8DF4C2045E4EE785FA18379AB408644B117A5008825B
D369A9277EB23D99E3106E0E95F6BC7BF19DB902CB290E3B457172331A1EDEE8
49081C117474A8A9F999119D07CA533DC08F7A57C16379D6A5C3AC841E84BB33
E8A27056179DD544A8730EA0FBC9259BF57D4646750E88A9853E59E8F3CB2652
1ED648BAE7EFF4676C32957C11FC98E31E0879BC0CCAF9705C5E1F5DCC75C128
09E265E395A01D1C73103735D565E57DC879B7F2E7D74D125B10E2E0155EE1A3
1B0EEB3F1C2CBA5FEBCE67FC245FBE6196F821D8E0E8020E628A6CA678FDBA4E
EA04640854FBA6A3C1F888C6EA501DCD630E8CB7D159B4A6786749AB5A3A5725
FC6CDC0F07890021588D09C895075A7C575203DDDEDA798B5ADE96B4795E63C6
1882CEB3D3EC647EF99BD2190A63A98711BFBFE6E7EFB348EB5244EC73CE11BD
D138B108ECE36CC6E467FFB790F2A4B952309A35687B65FC6015BDA3677D1358
D42178456A950C8A43321EC8F39FA24E97274C1631922EE8B3267A3BFDFBE812
1016435D8C2CB380F96F575EE04380F12FCB250F26407D79B7160185480FA89C
23D81072FCBE29FAB2E6A0E0820AE5F16480C22DD11C0D01A05F545A00E446E6
57D995618A839A90B8F941EE3B3D9374CAFCFF1C76122D10D87BC9260B600180
DDFC918780BC032B12615AF0228B55340E0A29331AA16135E984F61E4197385E
E4D1C58B195E53CA24EE400871618D46D10E3B5DAE3AC22FFACDF2C1D2A5A465
E186ACD14CBDAF95D461FDFF275F47C3ADF0DE4A2FB836F52877D2C9A6880961
B700D17141DD089192FC854474C6DF20416B98BEC577E2D348E3E32F8D60B009
80A010F44016962C7F23A818784F7E617AE9B31623949B010D495F2C77729BE8
EEA4DA83061658F919A81BFC4D93F4F9019B2684422AA00550B60E50B7ECF196
33EBEA387603DBCAAE63FB5250A43C9523F3A866B2FDF3489D4586853A54F233
D0F1569CACE46878709A46AE98640BE6E5BE78B7F39507A5D7137520703E3925
E11C3A6F0FA40824ED19531C8DED71CAB62ECC8C45D4BE7E2FB379B345EA4379
1E609BAB5FE8624DF1EEBEE4DB5B8C0DEB6A62C0DC88D82F68AC1B70E3EF6EEB
D4F84F1FE3EA2B6DEBBF90EAAF8EF8B7637C98ED75345A17262C0861C4907609
BACE68D6E48AE73E9DCA85C509711DDDF9F96597B3B6E7ED337ABE11C21AA1E1
5DEFA4A892EE579D2F44EFEACB93382FAA852BA839DA00805F667D24EC85D150
2752CB989E1A50D07D81B1C7313A45E4E3FF1088A8EFDFD1E784433E7A5725C7
ABE7C27017E3DB632E4D4EB11BB5165941EAC40073C56E67A8E72E4CC4AE7CFD
50E16F7EF5F893DE8A6A3C97753BE8182C0D9462E4E4300BB6C755E22CEF347B
E92B6C23C18712F7BF3A5D20B8E6BB958D81EE822216739222EF27782F5ADD13
FE719EC390985BE9ED8D4EC5B97F7B6FE9931868B3B9FE082D61E340675A685B
E438D9B58509012B6D3710BC8E6ED06A5BD3F146AB400D9672A1795D92A9C169
856F8DC48C69150CFC010744A9F89394D8FB0B30705903DF6866479420566995
504B951045D36800F5CA66AB4040E4D7773BF9558F6272DC3D1F952438257B91
FBCE31751EB3D43A191C3DC1DA9AAD0904651261AEBB70620ED0A3F6925D4370
14545C07C1EC50DF000096DEA6CA9AAEDCB28077ACB98E595524117B4577E2AA
2D88A7CA3813DEBA5AF64C45D37AB6F90314F7ED6613B36C2952519C06CBAF40
D9B8199D4C608374B34797483F1FD34BDD44778A1BB85DD1F370AD33D2AC074D
6F8D49F2B0A0B2C4793A66BB356C63E7B124F8F693DECAC059B68A7A9D0CB924
98DF14EBAF397727830311E7B7C5B557D3B3A41F1BB2652EBA726FA40B68F121
5060EC412C9E3FB5A76C76122C52548F585097DC5468BFA11971828A14F5CAC4
C2FCAA0829B1DD090C7BF1BD013C372DCE20309DA407A9AE3EBDB223EA0D05D2
8F27C4C61E4998ACD072F84E62E7BCBE470153509FB13FFFCC7BF4390EDE6906
8FFFA8C797440C34003BD5218B44C663EBC7AD5C2D99ABDB0ECE68A6730E26FB
7BA8C4268B1AAA189691FAED9EE86D24D8A400961D1D8D35E1736156910FAE0D
E7D64F5C905BAE1DB0048192BA5032B8B8D52E16953C97A60C5C625D5A64F7BA
D27A5E4F00306772BC1570CCB4EDA6697812C4B1C300B97FA09591E9DBAF3BF9
AB18E2A50603C088D1C97308A0FD7D271793A945545160C54F2F058F217C17DF
90F117FA2D74DC31F9856D6B0E1C31A122D8DFD97585CEB5524DBC6627F2C81C
7FABAF0618A81AF02D03A1BA4A43159869AED099B3FD47BF93905C64B5E644E7
1B8C305FAEC258E2CA5EBA9610CF434EFE0B7687AF349D481C44651AFAE7AF90
8951865A5353D04A49B5DE838DEFF9E156915FB027AA14265360ACBB78865B71
500E7FB4B03EF51D9B0C0A891EA24858F5DC247988F970726FF3B74FC2E9F9E9
1634DB14AD7CB1D6E644E73E6FF2AEB17DE43B58B1C64FA5ED374C4744CDCED7
B01761D312CE3B5967805BBECB9A4D4DEF518F22ED598707DD2C8474ADAA701D
6BBBBC23E4511BF99717CF76D3945D8C4B7668AAFC0B8B626B38EEDA94D53377
5F414DF0412A0B6A35F4FF5985DE9B1AE29CDB2C81D9844011A48925C7318EE9
998682A72704055FC4FABBD0FFD047340D009A283270A960049684AD3CC6C17A
AAAAF0DFCCD400289CC5BB6F1EB915C1EE20BFB593611BBCFF977B87D8F831F0
DFE4CB60B6F9D957F61F91C832D2FE52F38ED5CCF79116707E87F617E8AF9320
AE49D3876C9951B53E35B31E111066C13F4E67E488484A8AFC6130C16DD54B08
8D4527B6740D7332C9B3C2B424DD164065C05F3A073EC58524989EE299F721A9
D3B953410C4B53B9E8DF5FD739CBD354716553B105D4525E0686A6C62D54B906
1AFA4A0DE72CABF4BF6C616946C69161DCF3DC418B7D746D91C955A02F540216
EFD652D3EBAA657880A2F0A1DE134EF6F239B9CD35FB4607AAA9B2CB08246E62
7ED0C4AD8D833F047AEB7E22A78D8BC323DA8EB41237001DF8D0B913587D933F
5F0232ED21407DB52E7414747685A092899DFCC45B702F4BA5A40882DA5C9302
B51469F1163A0E7AD25AB385E4EC97E9BCD726D393EE3F278DD055445B41AFA3
DB66430909899FB790D255D84EC41D5C6E36A03E9C4FC99B5CD370969EE71974
87DD2B1B1999A4E9D1F7EEEBDB2A34BE91EDBBCE66C9A81B16131A36F84E56FC
21CC4DEF1CB3211A81B7111BA0305DF5411C35E1AF389CAAF286D029E5E0F410
BEA54C67BED159D59F1F9A409DC7B8B601E6A5150D90344C1B9501920FEF6DFF
CE3EB377BCC72282C7F896B87936737CB79AB69B89815C306B532252B7530E5B
44BC7C5A99057F2477E2B611A5B9B8E6D3927D1BC74F08D490139B5886C3DC9E
B7CD114201E0546E4E2023554FC8129F7841FBA8D82F287EFFF19FBD91627FB1
175C2E99EAFB82E159A5C83802D2357DB55F11C19D3753B23B76C3929404A5B6
14113D805227AA5E62D690DF1FD39F880C91740C2C2F55BF951C30D33266854A
007E9D6E57DEF81E02CBEE1563B27B59D4CEEC56DA30A9F8CE0130CB0BF7DD63
2838FB5AFFAD8CAC0068B99137DCA69086D5AFB4650EF8873816EAC2C7F5608F
30B722AB11B8DBC69491DFB36E45548294EA08682867D86717D8054BD6B1472B
B6C2C76FC2C007FA9F73289936F8ECE8497CA4BA4D75282480CE399793CB8BC8
12EAFA32D6D09102982609CE8B6DB9887D8DDAC1EA3F8C43A39893E23C5666C7
BA597F47E82A4549F2E6FD1B4DA9F0AC5AB027FB4493A47683EE9517DDBC1980
F1FE1BCC0CA7790964D284654C5E867A469EAC12140EF89F77DB6A85FD03D322
BCACAC0300AAAD0E56D28C684D033E259AB3D48E3D9CF6E2B58F5CFBA1AE5F01
F8BF6FB945D93706FDE8262336A0DAE32C5E4D356CA0684F9BB14A3BAD970FC8
3A8A6B95B6EF80358BC78E62D8F6EF0CBAAEE68FC18BA9134AB54D38642422D9
9E6ABE48050328EF429F9A96C2966395CE2F547C96AA9E9380B734C8A3F2BB6F
4958791A7CA54213B88C36EE071E2C07200F5AC72A4828BB6EA8ED11290EB8F1
7F4DAE775EA14786F6914DD8E0B9AD28945A833EA40B1DE6D77BA2C4421F7DF3
354B5BF295D3805D33C10EE0A32046EE1E4AA00677C17900D43FFC86BC30D76D
AB5FE9308DAB18DFD51DEA2AA54A90A6905C13ABCAE05024167A09612EE1A93C
C5C8EB9715A32E8319AD591066744F6C4E15AE3925183B30B70D8F929319503C
6D2CF354D2025C5AB0286BAFBE8A419A1CCE15FE9FA41CAC6D7854F8640ABEEC
F01310FDCF4B67BCE4C6A032F30D58C944000965B3D4D92E973B1C1463BBA22B
4254CBBE09D9D3395BB6BF4BF3F17F21DAE9B4C5748F416927564BE4B5BEEF44
0FDEC4E214D210A808E8118156E75437941EE983083C4B0B71CBF48689D55C34
56B8D8710B2715363EB86A65575D585A247FE74395548D6FD5053B45D7935D7D
3F00481793A57A38CEAD4115DEBC7058EA2CFCD85EA59F473817E5A60141DAC7
69BA887BC42198246A980AD4D2FFA5CB0AA624367930DFA1C26513BE884C9790
CAACB6B3F71EC5B0ECBB8CCA9F16E085E9C55B1F81ABB0B6544F08F5493F356E
C80FDB5BF9C8DBE50CEE11050EBF60795395633D75067548DB063A3CACEEFBDE
85C4CE1BA35093D1452721025D0316FE5717961B9B3990F0D9F0E3703E0C4A52
A386E731B8A05C1271B0950FE90E59E164BBB3C12C8E5F97DFCD89D6540C8375
91F4285B03CE7E1310B40F2626FFC1580EF8C3A6BD4A8D6BA894885C9282717B
203E860F4479FDBC387954762F5BA1B6F82BE5D9B5FE99C1C53C955AD3E0588D
7749902C0F288B172A89AD1FC4A1F3B970964CDB07E35B2ADA9891A96E65A897
6124720C519DEBD665C3F821AFEE6E27531CFF89EBEAF87F8E5B5A70C6D20BA3
98AC80A77DE5E5C1C53635843024A014B828CDF620FAD669FCC583B0693EE60A
1C979301084F9BF6948BFAA581EF5574FBAB6AD108E1CA3781A2BF448EF02458
EC6662D2CE9C64CB73056BE1C1B0B096E90D2A01C7E4B55F33E4DD4D1F037B17
3BB41F6BDDF133A57EB8E413D6EEE5B353BC4DE14A9A9F3AE0610B41B6E38EAF
FB588A36E23D78658125DB849E1A8762D9506FAB570BA7C39E3D38C677C8F0A4
6C31903EB53AF829FE7F692FA1B2879B0A104D2727B0F18035A283884A8525A3
BB1D12C44C4319B163F1410F6CDD646A91F94D432431159A97F34E066725BD09
D03D8406CB1529EE3BA135EBCF58DD73F037EDCF383E629347A5AE751A6B0C4E
A1DE148D1694DD3AE381502B06BEA723AB98AB75882AAF22D149B84A968AA7E3
0C2D9C7C0580F63E7C12EBD9A5E6468CAC8E5FF17EDDBD447DBE941988F25268
390B166F1D95745F872DF195A6FB16B83E7A2DEC102E94AAA06B369A63B3C120
6644CE8088FAE6BEE4D314D7D4AFA576379E92BAE9BC2B8EB13811BD9878D794
80BD48B7CB4B40843660341C602F4DC2C5E7F277673ECA06457D607C7152A513
C28EA344F9FDDF3FF62DA0433581234A84C3E2A65F8E9A6265037D090E76B71A
E711AA2E0527D081614292A02DBB9658579EE50936C82C06302C2288F4FCDE15
E6551091B1D9DC4AB2C1B62CAAC400698B5F075501F976571BB4FDE323F980A1
6D274814D9CBAABA1E5AE5A46D18D291FCC217F11F410792D50E28FFA04740A9
DCE653DA40E6B6C79EBABF5AF0C0C2E2D3B120686276F02A2DA41B6343D743B0
6E77FEE65518833C502A7303049585B8B7CCF600DE270F097E1047B1FE0DEAF4
FEC052BF7FB963462F0F8AB1939C30B7DE27CD8FD58FF6FEE9DB13E3EC0F5FC3
2C308563BAB4CA492FBF511408F57CA98654377C93C67FA1EB5492F5FFBE71A4
F066AC40D707CBDDA45A2A6EE01B7A6B09FCEAD4CC3B780E235F94048CA54F5C
5B38498E5EDB435F38EB0E9FD39CE4C2B64F6E6CFD044A07E45DFC4E536BB546
65B0B58359CE39BD1355D270560C3BE5F6C036AC98342A7F9F6D58BF1918432C
D17A5E3972B5F764EBC852C516FB614C31C7F27ECD687E74444296CF6F6143A3
7C2E1303174F25AEA312303729CA57C60BD469718AF27CDE037962EE6F075166
6D61B1A78DB723D3FF36161919BB6A09EF48E4B091D632FD4A0AAE87316C98A9
ED86D17E439302F0ED98F3E267B5CDCAD81E99C21DF1E77F469B624779BA5A3C
54326958985FEE519C3BB909C2AF7047EDB674588F7B17BD2C01D43FFC7FB18A
1A6AFE1143E9AE4DC39C1954A807C9B803CB84376E40460D20F1DC510800B3BF
A77EA989D67D5951ACD2C639D7BF993968F980D7B314078081144547E170F37B
86207A3BE8504D8593F8C624B9283F438EA545C165F0D8F407C61E9118D4B291
091A0DD425FCA92B41E0D5E3617E5CF77F1812496D436A19AACB17801AB8E7EC
78D3CBAF1701BE734E75C7023B0FFE5759A0F25B2F29DE74144D7D3DDA412576
807EC40D7D3B91A2D595BCD53853220264F519082059D4DE14B6A2DC604B677E
3A3DCC4921E4DF6ED59FA465671B4148778EB0358566D9FDE5CB9CED244B6065
B49094C65B51E8D1CA70A90D0A2E1A74145DF57F1B1952BA4D8E1743BB71AD96
5CEE77E674904F3EF5C2A652CA0896D9BF6ABC1E251D4FD98BBE580E16C354D8
CEF343F62DD6CE815CBFF5F84D525D66D5635E34EFE0A2BC3EAAA6659E234201
4A9BE7DC6A853E60CA0AFB85086DC4A040558BFF5C2C40F6597E671ED9248A6C
B53FA099450B263654A1D38E528AB0048A2D0E1410296C903D15239B4F62049A
BE61A7F49C59AB11E43695B8A1AA0407DEB6ACD9F8919C074EEF8E6CBEBDB640
7E555D6195F064C3EF2E42B329285A068A8742FD9C10B2D429ED379DC7A2FA78
49919ED65C3DAFA24768948DA5A47A8406FC5E159A3EBD7547BD9F23E62B650F
523C45DA98E9316F564CD7598A58B3CD4EA1E0BF8A554CBA005B1462C35FB738
AB161059C155CA9B34530C2A56A139C69BB725B4588BAE7B909E8BCB265E24FD
5AE0B13AB03D97F61F3D2216CB7131AFB311D879A6FBAD1E5274CE1DB6EDC654
6663F68621626497AADE9BFB79C405D6FCEA4B378C2CF4539BDDA5D54DA30634
E4B9F7D4BEC4B41D5A0DBFE342D92F83139155BAFD8584CB36DD9A0CFC9EEFDD
46B51DBBA02A078167E94812B74D83EF30D707C1261B0883158C975436D1B943
96A348A5C3CF3159DC19326ABCB99C124036A94EBD8687C848DA1714BDD42007
CDC592169B59C59161593FE6A8DA2818A66B2C355009D2E144EE33FA32F219F2
0D71DF73BE3B07A93F26D1CAFF8FA6F1F4BD60A4CC9A491B2FA51DA20FBF76CF
B27367EE7A7A90A71E7104E8342145F19B6772D1A2BD2A0617635C2FBFE6E11F
FD7FAFEC4A651AE02BAAA5181DAEA8B6748AAFA76A78FB7B9331D12BEF2D8788
C631FA45C5617DCFD8A229EF8C964D99CE611277741216228A0BB627280829C7
8C6B60FCDA2721AF40B3D5FF50BF88BE679DEAC40E3AC7FD4F2E854C4FD706C4
C1B746E758F77E953DD933DB026FCCCAED6D346E8FAF138E54EECA4F00F0AF25
58C30B92B56802D980467598DA684858FAA3663A22345E6C159B79131DAF0980
B721CECA2484B192D02BAE017528AB523B83F984955046374B9C2CD599848B58
E6899C6D35090B018560979B529AFD9BC1F08C9BC1E74152558A50E28E5117B8
C90010C697F6C320CF3F6C3F54F24C1D2FF0976569414DCFAD90AE2C4422F11B
D7E2CBC6E230C3AB2DEEB3B5D6B2F2192702874588DFF8A79336A428AF928244
2581408443AB02C828D519033C0C6F5EB99AE8E433B7E03EC8985FBB57E51AFB
29C5C68B5CC2BF6453FABBB3FB38E4AFDF0321CBE80EF96A50879E01A1915CBF
32B559F6A11945DDB1764EB2D37340AF7AF5B4ED89E2753CEC4F525EFA8850E4
6DB1875A732BF5DC6E74CB7FCB2DDEE770E70A0FED5E90493B8231E23005F5DA
42F8BCC4C27E681586108F3DBB42423FFCC13670E8DF1FCE8D6F84220FCDA4BD
D722E56DF7DF80A3BFB7A118BA7AC8509BF70D57C889EF323A732955A687F3AF
76863C0CCA78CAB078B40344D5342390506667AB1D9688B3F7E239CECE2204BC
83041BE17178072C4E56CF2F8299B2DD9221D6FAA49B9B6AB17F385362D00790
E6A19BA43683C1AABFBD364BAC1F9ABBAA23C54DFE9657F339D2F5C5DDB4D1BC
687194B27A3F984A97EFB782552108C7A838AB92667E2C61681DFBA3735ADE52
D377D9746C5B2A7986CD5F7F74A396E0247DB03904351F2132751AD9E4A810C3
4A11EFD006D90A9FE992EF2243C0CED1CBC7840D52F07EBA84F6AF5386A57EB7
3ADC93020DDDD244E2B3F791CAA30813A88A207B816CA296CAFB774A02415874
8ED12C9B8F7AA27B3624856ECFEB76611268FA0C23ECD44D3CD3E7C9C18AF876
61802FEDBCA80FDCE127F2F99C31A2A19BB2A6A931511C48D0A126A182F0C087
9E5EAB46B299C4414F92938BA0A5D0B8C3F00F230614B87280C9722C908AA37D
4C11F963A70A4A2B54E8247DAB905DC1F944A2A4328C48B8D85F4FA3CA06FC2E
9BD9AFFEC7A3129B63EBF6EC4980475E8CA8DB90E51B72B4E68FE284919BB13A
B30CB092AFD46EBAF04BE90918734826F162048C9AA6932F81B3CD97D4EDCB47
0D21EBDCD4DD470BA17FCD01A2FB013B02877C044932097182B8C13DDBB4F534
53AADE76E243E1125E2B325B20B6CE456DD79432F9D408EE5E277ABED8C791B4
9BDB933E4EF8D0C280199330555E675D2B9F4321A7E159C78456D79239670F08
0C2F81378D92376E9A8FFD07C7838513D9E1545040E9F68FAF955BA0CCAF2173
D935A830CE6A0848A3A2696975020C95258A0C4FD4D0FD36BC9371E1F035AB69
4EE2D554EEF4018969EA34612C083AB5DD0A3DD34A539FB1B03B200B7C0B35E8
B1526EC91D400BE6368D6B57687EF9DC664CE674A0608BABF9336B31D8BB208E
1C3AD90A5814577B0A8435B695DA99C5A82C84F5E706D27749F4AC47CB304D36
82B1DEA006694A61ABF3DE9527C116F470F741D3668B4FBFBCA0839358F1D400
A60A316C37FD93319F4DF560EE45E2C146D6D3A78B1C7561E7FF0B30683DF21F
3E3E5653CF0EE730AD91F1C392039EDA7AAF507F004823F4C3BE18DD63CAF696
043DD8CF64317CAC9EC1C65D5BFE779E440CAF572236267D2A92CF3A53FCC531
221641B71DD7D1E0F1F0D8FE67025DB782651AC32B07E2EA2415ED3F2593B42B
AD1CEA7D7CC1F8788AD3E043F9D1F326793BF2621C782207BF5B3EEC89DAE665
71F6E1F51D0528F1E74B9243AE1487FCC43473335385B71ED06D72EEB3C67BFC
C77193E64EF9BC10EF9BE88AA5A9267E2DED17E9928C7E92A4EAE3690A889FF7
0926286C3C7006305D5762E3DF8E0172A51A28A86DD419B48265E83C75F74765
654415E9F0071CB3108C538C621A59AB0DAF1D22676A5F2C9EF29C54A3068045
155F4AEA0315CAF297C253188A4AAB226620228EA3982A4FFC173B08D3B07107
F2D456C2F95D36B25F539B4C62EC9A99BD551F46240CE179CEF3438E74F5E31D
7C29FCE01C011A82F57D8CFC668FDFF8F848DB39DA3F0675425B3880C287E770
A3E230C4FA880F61A07833FCA8F2A437311F327603BF05EF3F9D95DDBB5931D7
1A1F13D04D61B4C901960824AC3D215418A054821465AEA0D6013E755369B2FB
92F1378CF07F7DC86A6D97FE2400FD2100B5F4600208B6A6A0E263463D4536BD
8542392F91A49E8616DF7843F61B1F18B86C83849F9D8E7A842592629CC26C6C
92809EA8B540D136445EA691FF0A08F53238BE28E53C1CB00538010E568C7F4A
9F7946612116AD8362F1CB3DC93574B50A59ED4081D46112F27FF598E189EA18
23C2ED07521FFD835E8E8B7BDBB97332566CEF3CA5B2011FFB1F7151D3DC376E
BC39F98F4D2DA859CFD4C0A8B2EC47716EA4125A68C637C78F76599C31B6E7F7
2AB886AE9AB9143E1106E48CD04EFAEABD031D95AB171EB9679C0F3524BC4623
D9060EDF8B29CD4E25CC1598C76164670BE9A7FCE2B912CAC8FDA7D20FA11396
2941D7BF0E23C714440C1CCB6B47A42406DF12C87AE65E8736A707105166D4E8
38F3B9944D4DD34D20663F00F5AC7FA6821C08934121121EB2475E611F1A7412
FEA61E9F3420F8D5F1A681733DDEAA357C522CEE20B8B06EC62B960121B50F03
55463C727BB9B91F38B744B2D7C06BE5F568A0E2CDE0D3E33FF440529308C830
826119F04F8A3AE6F7F49C1CA067434BA663114D638E424610AD4178B39A69C6
01411FB157607240C6FE7FFA1D6ECB647E53E353DFEC79C2B0B311BC47D093D6
5CA7435C12AC8BFB7EF129424A5A67F4E79548C1B9456E6FFF14358AFE9CD526
C601DDD5D6C07BECA9B27081A638A38D2AE8B4D928D966D64E2D254E47AEFB7D
CCF9F568D05F94B0597A6239CEBC1967E02A30332270FADA9E9EAAD0F33E1C2D
806DA22F3C3BDD9452CDF87C21BBFF3E83141BA943DBD046886FEFA3D52D4F6E
EBC8017B8A2F5A3308ED8F6E43038532846BD295427FF65E84E8699A435606CB
9A442B0D6678E9502595718DA94AE281F0A6A6670EDFEB54422702FF48DD192D
2205A5FF1A50B2A5498A328A847FE4B9494B619938365E6CBCEB7F02AC2F7FA4
7965EE5A0BE23122552F09A146BE76796F2A7869D377CC5CDE8C1653EC4B5CD0
E08FD5B5C1C1F0BBCA5F91DA02AA7D80BE074FC47014456DA86557C7CF3BCAAE
209DC321EE1561EB59B8E44D1F635914454B77D4489603DFCDC955AE7A09DD0F
6B3A68321ACF3C3F91FCCCA1F0A2F0464450D5313C7530972A83832669840116
178DEC29E62BDE3FB38F5871317A83EE20C814DD4FC9065455F2BCEAA53950F8
871291EE2C547AB630BE8C72AD836DA7D6AEE983F55F4B08DA59A6455ADB43F2
9E507FCB6D1B44CE15ED75453A290A09D1F264C81262D54EBDE21546EDB48130
5A73D0F9A31ACE0DAE4FFDE9922D59A62ADC47B9761D6689689D76746CE51184
DF477F20E412317C3873E409B5E9441999AE58C8FB91C5E94E82BDDAFDC9710C
A1F772CE6360E0BDDDEB5EDF6568D38273D54B3C8A0CF5E6AD4BD779C19490B6
54695E4E6F8C379FA8C979574A81E82F038832DF12AA8BBD0EAD2B2B379F28B3
C1CCB152DF31476D0CABA62FFC8804B7C81BA7B821CFC60C25500858127D0A3D
68CD218E1BC809F87F91587DF2C6968F578A2E49973E518044F90350D9FB309F
7ADFB4CAF3357A98FFDC0AA7D367CF48B2980947BA5FBCBB90D61A2C86BBF034
6116C32BCBA8B959C109F908EE588CDAAE3518442BB0393D5A1F94D0D6EDDD50
BDA54C3CDFD85580EA0B18C57BBB3549E43CFEEC8674AEC2B607F44DED90B289
D5EE3701753244E4829FF22CBDB2A2223A75726E29A76F8EB20515DC60F0BC16
F853A010741A522F373A830B2BADC781574E53C79E2DC411CB5CCEABC6DC9795
32F8882B0DDB1C353ABCD2DED01926BAD1830CE6D07D1F6F1C4FAA1D3BAB7128
F759C5AABBE890E2E110865E36C124B6C0027141046CC0B6807798061E7D0A90
259502819F342AA5A77FDA99739966BFB8663CFE0555BDF189155F00786E2958
803567EFFF04E006FACAC258088062E2C5EBBAD801171FC3CA0EB07AAC25ED56
4FF8F56E10E48AB6F75BCAAF74C04BAC4F7C604E2925678F651924973022E9E6
005CB2754B439802589DFAE9B653B90FCE81631A80DCF6BE53C3F87CE490630C
E24126B65FF8AA92B8C076DB3F8EC6C55FE154B651BFCECC8B2C882DC350FC63
7D79AFB218494B0E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E03ED7D4F3EDBCA1926
2AF6A41F67AFCFBF3630C943FA111E4CCD988A7363F7C2B75EAF5830B049460E
0D2B337988F150B9182E989E7750C51BA83DF37685483F86D1F47478883F3F6A
4B7F768DA5AA89E8F163029ADD4A9209DE8A4F285766C06EA859639B92CCCDCA
F59B1C2BB8D588CA754D1257BFF76B53984DF4937093AAEF79009D32A29A4C16
FB610C7D6713482C48D7F9E8410C0F00AD6E67021056B6035534E79F05D14EF2
4E84426C84D15972288342D5DA4E16FFABA2D3F4EE0187F535D27B9EB267349A
55FBB79F953586BD82F1698D5B6F660EC28D8C13A2078D9015AF58DFEC1074A1
2038B85567C30704A9BA43A3B03F0039A76CE92FE293273F5D0D4B789584CE63
29B087F4E63508ADD92EB34A369E13808451521FB0EFAEE73F7FF9EB628800D0
2DB641B68DB4891855B6F2D434A8DDFFFD4613E21B229DDE6F117604BCB82425
386C3E4F845DA116DB2CB1F355D05A330EFEEBB886FD03958B17788C1EF1279A
897FC5BD39AFD361CB4E2AE4B4CACF408DAACCBAEA3FD29E8D7D7F7E78906968
4E7A8C7087BDAD59CDED54F72AF82EE9723198C145A10C23919D51034C62FD25
C22D831FCDB7710E6FEF3C8C3C06500238AF4CD5D6807694CE244FD49E161F3B
6466F3A7ACB501B910261A3B2CDDD47B9788DAF83556F0A623918C961B1FE045
E290E0AA00ECC6144412F17C66B61A80C82AAF3E8A7785C37E3C88C6120F68BE
1057ADF0DB4606E90D4A9714D0483AD5B33186D7CED432F3228043AA8FC1D68A
8DA5C1B2178626BE5934D211BE8C9366E89DD89E66A55DFB205F57649BF37F33
B19168789135C84C1AE0923EE4CC0F4700F80FA6CA44548B5EC7586380460271
2AAF06D827ADEC73B8F303BC41ABD1D7A5217ADB094B725E40FD55B098908765
DC0EF6C0962DF60FF238D56701491DCB4A31C7857C7998FB7E00F80764BF2B78
6D74EB3B84F70AC58BC86A71509BA7B359398D23FBFCC60BFF81FABF730BDD71
9560A4723EE9E174B02DA96D1DD34E491C63CEFF6E543870BAF57C0C5517516A
8758292EEB4AED07A73B2DB1CC48B3390682C4402EB5FD1752B9900270B52E97
49574D6AA1715F682BEE7EF530C5ADA2641A03DC46E6CF27B2302F2EBA0791AB
92475400725A015FF527D88457AF61A49761ECDF1337A40DDA7C31E9FDE6E266
0DB43DB8EECDA41DA6463021EC2D3F69B53EB01615C7F6AD37F858048FD1D427
160A281678EF018DF2B62F5FC57F061AACD78ACD2C360EE9D5B89162CDC503C5
178469B71E7E6716731A375FC549F4B813F38CCAF10ACB22E1EEF480CD74A42B
FD80394503867F2F8866599FA8D7232C18D62C64574CD306DB1373C19C44F9C8
4DB1255B8B2D8ABBBFCE60DBEA3EF62AADB0CCF3AEE73E8B6618C805A562A158
81DAF8903859155B685DD67155B2CA55787FBB7BA58E40AD548D779883111CDC
99FDE3048D50A368FDF3D4555892C237DDD0E94FBE9451A21E012AFD676781F1
99EC4FDB19783A93FBEA63EFFF45310FFA7EDBFAAA089C5A39ECF4DEC470DD7E
41A0B41271D1A59E95CB1727CE200A0B08A08CA0D458607F50A77B39C8D0CEBF
9721E2F04208741243AA72BE56FB624A1416C9DB9482FE902DDA4CE55F0410BE
1FB3502F68269CF72D9906EB37EEA5604DDC8F11B7552B6DAE0A6CCBCF3C8227
9253941A81365416C2C918915E5489BDF57F72A3D84C1EFAE887EB047E6BA7D8
52EE84E9CEF335785CA4E0C2D73B3079F6F170D6C726EB0EC0354FE46F2CC3DA
D6B8B4D3BDFC02F7115920985383507875F864E04194E843C94B5D56BB8C263F
7283DF29341E5232B82F2C14D980BE887D2A43325099ED715C8BD9E90F4171E8
1EDBB7E54EA433664538465431E675D44A8985EFA1040FAF035C2760080084ED
E9C99251B5D192CCAB1684198A6227C98C93ECDC00D2208F732A96BBCB496EB1
7ABB0FBB05F06B6BAD67585BE2F23E32D7F104B2D4E4AAE6ECF557700FEAB7B7
CE5AA9D2103D21C4748C7D494C4D9DE4BC5AA1A2F0A71DADA81981D4A602C6F4
AB0543F203E91FF792BC9EA44B4E0094C581EB0C9758E6276FD3F57025C4F17C
E7FEFA9C7FFD4596FD3AA02198233F6F7EBA278A7464FA20D07A810A91797115
270C0737C2D850EED593F0DF0BB326E07C11C3AB064698627A92E7D38C021DEA
4CDC877E618E7CA30D54E655948ECB51E0193EDA4EA8B1A7CD4A9503A99D9397
C0D79FF3053F6335BADEF4C8C67E3314330938A7F19D4169CE5F4D4B37A344E5
9D09BAAD3218BB89EB975EB643FD9B62F83E1CD071FBFF2098679C11B71B3106
220C12E8431AC9DC3C158F713AAEF78AB76B1E64FF8B8A562E4C61026C300DFF
933EC5B30CF2A7943DA99630D8545A6E5D68D9096DA4A135B4DCD783471B7E97
3DDA89C1C37B2CE2E6F3DAE0A0299F8E2882D2F10E7ECA15AFEF56B6D378C2BC
8505C9C1F0F06A808EA6F00AA416279BA9F5C8ECA2541A82873EF863F2973BB2
47D040044B4B184F9886F8A254E259EBCF0A0B314F32CC0F525879F11A15AE42
138AE093C6CFF4B66794A854E26B3EA9BAC264AE1BACADB7E2D33AA320858DDF
05B41214A4E1FAD106F04FB024FE823A6AA6D4AC8CC16E011251CCDB8E838AC0
C29E00B912FFD84F1C65771ECE27ED85A7FD21BEA85AA8A3A02F8055EABD7A5C
30CF69A6B20A056733D3F353049DFAAFC57647C7B99D342E86F74082CF70DDFD
2E602B44674A453C0E05DFED3B30BDF9D786F824D8261868EC7F56E08142BAE3
36E91FCEA2558AEC311AF3DA978E9C63453A38D9A14DDD05CA21C640A56EB112
7CE9E15E7EC9BC29066202F5B88416286B8C3157FD517662B14D7F4866168711
233AB02747FE95C5A9435DDE2DB583A51F5DBE3D3BA4967AD79E03BF95E184C8
A406C933BB7981E711F3BA0ED710A156BDC9B09E11F182E93DCB11FF95F2EB5B
469C547DE8C65C3C277049015D3651074EBF904E032DD689F03B37A092C51B39
334E221F402EE05B58E8FEA7681AAC21BB47CF896E8094229CF5BBC1865C7BBB
9E6A5A3033CB2E1DBBFE8EF567E89785D96E91B72D8E0219140127AF047FCC5B
E41D6C3E18EE0C2E74CAC1270589AE1BF561BE3470A40D03572356B29756BDFD
CF35C4F9EFEBEA5B1F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (1fritter.dvi)
@start /Fa 134[40 2[38 45 28 34 35 38 42 42 47 1[21 2[25
42 2[38 42 38 1[42 97[{}17 83.022 /CMTI10 rf /Fb 230[65
23[23 65{}3 83.022 /CMSY10 rf /Fc 133[39 41 47 5[37 3[50
4[29 46[23 58[{}7 83.022 /CMMI10 rf /Fd 139[37 38 39
2[48 53 80 27 2[27 3[44 3[46 83[53 13[{}11 83.022 /CMBX10
rf /Fe 134[44 44 60 44 46 32 33 33 44 46 42 46 69 23
44 1[23 46 42 25 37 46 37 46 42 4[42 2[62 1[85 2[60 1[61
8[30 62 65 3[60 1[62 1[39 1[65 4[42 2[42 42 42 42 42
42 1[23 1[23 65 1[32 32 23 1[69 42 1[42 20[46 46 12[{}54
83.022 /CMR10 rf /Ff 139[46 46 46 2[59 65 98 33 2[33
3[52 65 2[59 14[86 82[{}12 119.552 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 916 519 a Ff(Real)39 b(and)f(nominal)f
(in)m(terest)g(rates)291 901 y Fe(Recall)24 b(that)g(the)h
Fd(in\015ation)j(rate)p Fe(,)d Fc(i)p Fe(,)g(is)g(the)f(rate)g(at)g
(whic)n(h)h(prices)e(rise.)36 b(The)24 b Fd(nominal)291
1001 y(in)m(terest)39 b(rate)p Fe(,)e Fc(n)p Fe(,)e(is)g(the)f(in)n
(terest)g(rate)g(in)g(terms)g(of)h(dollars.)55 b(The)35
b Fd(real)k(in)m(terest)291 1100 y(rate)p Fe(,)28 b Fc(r)r
Fe(,)g(is)g(the)g(in)n(terest)f(rate)g(in)h(terms)f(of)h(purc)n(hasing)
e(p)r(o)n(w)n(er.)35 b(These)28 b(are)e(related)h(b)n(y)1458
1318 y(1)18 b(+)g Fc(r)26 b Fe(=)1761 1261 y(1)18 b(+)g
Fc(n)p 1761 1298 193 4 v 1772 1375 a Fe(1)g(+)g Fc(i)1964
1318 y(:)291 1530 y Fe(When)28 b(the)g(in\015ation)f(rate)g(is)h
(small,)f(w)n(e)g(can)g(appro)n(ximate)f(this)i(as)1546
1713 y Fc(r)e Fb(\031)c Fc(n)d Fb(\000)f Fc(i:)291 2095
y Fe(Assume)37 b(that)g(the)h(nominal)f(in)n(terest)g(rate)f(is)i
(10\045)e(p)r(er)h(y)n(ear)f(and)h(that)h(the)f(rate)g(of)291
2195 y(in\015ation)27 b(is)h(5\045)f(p)r(er)g(y)n(ear.)36
b(Round)27 b(all)h(y)n(our)e(answ)n(ers)g(as)h(appropriate.)p
0 TeXcolorgray 392 2361 a(1.)p 0 TeXcolorgray 41 w(Y)-7
b(ou)27 b(put)h($100)e(in)h(the)h(bank)f(to)r(da)n(y)-7
b(.)36 b(Ho)n(w)26 b(m)n(uc)n(h)h(will)h(b)r(e)f(in)h(y)n(our)e(accoun)
n(t)g(after)498 2460 y(10)h(y)n(ears?)p 0 TeXcolorgray
392 2626 a(2.)p 0 TeXcolorgray 41 w(Y)-7 b(ou)34 b(can)f(buy)h(an)f
(apple)g(fritter)h(\(a)f(t)n(yp)r(e)h(of)g(don)n(ut\))g(for)f($1)f(to)r
(da)n(y)-7 b(.)55 b(The)33 b(price)498 2726 y(of)28 b(don)n(uts)f(go)r
(es)g(up)h(at)f(the)h(rate)f(of)h(in\015ation.)37 b(Ho)n(w)27
b(m)n(uc)n(h)g(will)h(an)f(apple)h(fritter)498 2826 y(cost)f(after)h
(10)e(y)n(ears?)p 0 TeXcolorgray 392 2992 a(3.)p 0 TeXcolorgray
41 w(Calculate)33 b Fc(x)p Fe(,)i(the)f(n)n(um)n(b)r(er)e(of)i(apple)f
(fritters)g(y)n(ou)f(could)h(buy)g(for)g($100)e(to)r(da)n(y)-7
b(.)498 3091 y(Then)37 b(calculate)f Fc(y)s Fe(,)i(the)f(n)n(um)n(b)r
(er)f(of)h(apple)f(fritters)h(y)n(ou)e(could)i(buy)f(after)h(ten)498
3191 y(y)n(ears)26 b(if)i(y)n(ou)f(put)h(that)g($100)d(in)j(the)g
(bank.)36 b(Then)28 b(calculate)f(the)h(p)r(ercen)n(tage)e(b)n(y)498
3290 y(whic)n(h)h(has)g(y)n(our)f(abilit)n(y)h(to)g(buy)g(apple)g
(fritters)g(increased.)35 b(\(Y)-7 b(ou)28 b(can)f(calculate)498
3424 y(this)h(as)f Fc(z)f Fe(=)d(100)17 b Fb(\001)1110
3368 y Fc(y)k Fb(\000)d Fc(x)p 1110 3405 V 1182 3481
a(x)1312 3424 y Fe(.)37 b(The)28 b(deal)f(with)h Fc(z)j
Fe(is)d(that)g(y)n(ou)f(can)g(sa)n(y)-7 b(,)27 b(\\If)g(I)h(put)g(m)n
(y)498 3552 y(money)34 b(in)g(the)g(bank,)h(then)f(after)g(ten)g(y)n
(ears)e(I)i(will)g(b)r(e)g(able)g(to)f(buy)h Fc(z)t Fe(\045)g(more)498
3651 y(apple)28 b(fritters."\))p 0 TeXcolorgray 392 3817
a(4.)p 0 TeXcolorgray 41 w(Giv)n(en)22 b(the)h(nominal)g(in)n(terest)f
(rate)f(and)i(in\015ation)f(rate)g(ab)r(o)n(v)n(e,)g(calculate)g(the)h
(real)498 3917 y(in)n(terest)29 b(rate)g(to)g(t)n(w)n(o)g(signi\014can)
n(t)g(digits)g(\(e.g.,)h(\\3.81\045"\).)40 b(Chec)n(k)29
b(y)n(our)f(answ)n(er)498 4017 y(with)g(the)g(\\rule)f(of)h(th)n(um)n
(b")f(appro)n(ximation.)p 0 TeXcolorgray 392 4183 a(5.)p
0 TeXcolorgray 41 w(Calculate)20 b(ho)n(w)g(m)n(uc)n(h)g(money)g(y)n
(ou'd)g(ha)n(v)n(e)f(after)h(10)g(y)n(ears)f(if)i(y)n(ou)e(put)i($100)e
(in)i(the)498 4282 y(bank)j(to)r(da)n(y)f Fa(at)j(the)h(r)l(e)l(al)g
(inter)l(est)e(r)l(ate)i(you)f(c)l(alculate)l(d)h(in)g(the)f(pr)l
(evious)i(question)498 4382 y Fe(\(4\).)37 b(Compare)27
b(y)n(our)f(answ)n(er)g(here)h(with)h(the)g(result)g(from)f(question)g
(3.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
