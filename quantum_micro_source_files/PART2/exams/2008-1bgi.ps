%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95b Copyright 2005 Radical Eye Software
%%Title: 2008-1bgi.dvi
%%CreationDate: Tue Feb 26 13:34:24 2008
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR12 CMBX10 CMR10 CMTI10 CMSY10 CMMI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe 2008-1bgi.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.02.26:1333
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def% return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def% return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 60 /less put
dup 62 /greater put
dup 98 /b put
dup 120 /x put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667271C1FD06DBA26AC7504FCD81979D968F25FBF2C61B4822DFD416D2
8FAA9120511EF04ADA431D911C4BBFC9F75B97286EF528C117FEC1C8FF9C4275
F7C4B6595CE4072590A210C7740E110C16073A9B3B2886FCF0AA1D57A5117DB4
CB7EAAB4063AD29EB90F423D0F633A2FFCDE865A642A17C3C883256B9875FFEF
0062C5B8583BBEAC76C4262B753BBBD4231E48AE5FEA54974091ECECD1101192
55780F806CF0421B5FB4C54BD6356483D7BBBD2F27BA06FD90854F00B55FF754
B90A5B40BDB391E3B9C1E0900D66E1D62FA6D50B17253DDEE3CCDB393F02D5CC
8B06B4474A876670547198EE620F9DEC39ABAA101BEC03F7211C51F671D269C4
83C948262545E7D60358A2B903852F511B9D535447E0E243BB095E6588E9B36D
3C99B1C449E4FB444EC09F535AB6C394AA89586FDB9941A9FC26CAE9E284D2D6
2D285134DF0E136F00494DDA458FFA128D0B252733A483A0BADE473CB9FC3EBD
4529B78032D9D39B602E78D22BC8EEDE44CF8F6F15779B07C3C49CB8F47D39DE
42123D6C12576603E4FC1AE70CD4AB37CE2E396F1EE6F201107FF44B81F36C33
3B38CE01C849D160D9FD3185152188C0906F14C787C8870189F6243846AAC07B
1224D93ACA99F9A914B430DE79DF83BE3D588CDA8CA8B84A9B1AB90385DAABAB
02B78B6D9FDA3EED7ED0488727A1D908385A36C70FF6EF56E3F6FA5D7ABFF760
F20192BEEDB86043FDC7A761487EB98C5DF65FA3A569C178EFAED7DE1C3F5BAA
1EFDB60119719F962BAC96837373184DDAB3D0C6201206ACFC6C02D5556B70B0
AFE638305463D5384325360B813650A170AC7B786E3A58DC024A5A37A3B5A3D9
CB24DEA3E440545C2E015A6FE0536BCEC48F9684DA0A4F69D49EF098AAE29B61
6AD5097DD443816D16CE5AA323524D6AA7CD510055B9CAE2AAE5C36B5A3B297E
4DD2D23B6C977C71E0B88D73194F72BA2F296D96912669A0F5B8BEFDFF569C79
A21B68EAD889BF2EDE00377FD8915337E566CEB258F9BA2DE202A4AC7020EC1E
08D9B70EB477E08441DE784BE0DE22532AF7ECE71F60563B9B11B26D51298E05
49760B40D2CBB06597A4887E3CC1D0ABBD5B5A1283C9BF39617E1C74D4195F50
AA8BFD1899AB39A87049A7D4BAAF4C354FAF5101BB0411E13BC3AA4DE7A130C1
34E2394F002E34A51574DDF8E51C92D1D1E2C4946D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57036431151EC603C8BCFE359BBD953AD
5F3D9983B036D9202C8FCC4FA88AF960E1E49914EC809263862931DB14B61EEE
6D37A389B488D0B64CFB7DA527AAED80494F79A073D895AA287BB47BD5246090
A76CE91680C1F37E77037F276BB789562C9F6EF55B70A908BB796404E1A607AE
F7FD408B9BFE94D46EA4A9ADE519AF64951144EE2EC1C682F522F500AE2DCD93
DD2CAC5EDB11C360972DF7B145E951ACAC91F823C26C9132D7FDB1B98E1484B3
BAC1EDCAA45D214F0511337C33B847A6D0EB96C7D709BCACC9A8E69DAB6B43BB
4787EFB2E4DDA476DE3171417D4499DDB862759D6FA8F39096AD160235678C33
2CAC8B5D00DA5B40496DBC2D77D27E01020DD2613B9B01A35154F5F8981E07A5
2E2AB588958580EC177D5969
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 46 /period put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B3DA102B
6DF94E62408E24154BAAC66B2B249C695BC0FA37A28699D9C0F3EE94AA32E3C5
8F8D7F803B5D25014D43A353D719B14B247A87898A960DF68C0C0BAF70C83917
6E9F7B3ACC64DBAEF3FDCD3A80C0AB907EE342E543D607556CBE5A9089B86D1D
E768F27D74A613F3ABF883222A8596B542EBF54E9DCE327B5682AEE5F6BCC38A
2A052EC4018AE3189DC1963BA39ACDED8F0C60C83F8873FBBF0302010956C520
A7F3F8ECD0F177EDF5F4D5522C5984A3678FF32EEEB570B69C142AB89467641F
917155D646DAF3352E27BF2AA0746E062E48532256AF364EFC0F0AAE3766F68E
89DF9AEAE43DE6B2E2EBCB666FB344286445FFA4714A341419C7FE51D43CF1B8
01FC0B0071F73EA4FEB08FEAB64FC98F56EDA5E27B7A71F1F8E350BD94C093D5
9A86175C46B78C65BD85BA347656778AEEBC81467970F644D32D6F2BF2A3F14A
6B05DAE8858A02D212177F15DABAFB2961F2746D4C3176FDDB5AB9821C57C417
0C8E0DC8B069090D8C95DCC3340643C68E5CFA60C3F41326579B869EA5D832D9
85119A957DE314546187E8C4AD9841F42DCAE231C5FDDB483481FF29FDE695C8
45FEC01A911F1390E3E3B80D59A30805601366FC0535E62E0CD9EAEBDE4DDEE0
260B40C3F20D80944ADEBD496A4C82985FA55362CEF5AA91377F3E5E2C3300AA
C24A28B5DE446EA56CE7173EA3A3983F8A39C1C04DC1117A9AD9EE90A6B0A6B8
340651456ECDE53615252416539F5CDCC809BBEB1FD5312D83E683356670AACC
97E95202657848F59D564FC6F4DD08792FCA977F09DBB0ECF3A57BAAC110DF24
29AA33642650834A240116F984213A043B38FDC4922254789F951FE907B95881
392D5C07DFD22F4FEFD663C5F27E0ED314F0217D72A81F97CD619F8E41D2C103
A4AE8AF82E1824DB1554F4AFE09D0D1FD4E4E72CEF4B55E1428091F0073FE94D
C38792F9B5061C0C9223059FF912AAECB1A028971B25C13AD37C030CB68CFD7C
0DBD1568C651003865ABC7B08480D26ACB12B677058054233C32E746FF1D56CB
057E84CF0E8CE3FF86D19CADAED0E3AF01F23D92D68BE1640B7723F8406AC042
DB2E9B5A6AF04BB8583C856510E5B136618CAC6414DDA98A70B55B258B6CF8F6
EB5FF4E148B23CDDEDE82460C2FAB0ADF448979D671B07C1BE1C8D9DB544B282
5A483067226A3B909B26682C7E8B93D65A92BBC2041772735065EE1356E3A78B
6A911EC2822070A0E3B08500F0AFD5F83E3EB6D0B16CBBC9F6C7646CB072DBAD
2CB032BBD28DCD137AE65F9BCEDA2D4D22AD5AB21C8C1D35CF0704CE12371BAB
524C24BF27D8997C0474F4FF7C42196930D0E98DA619631D98F89EED980A5E63
17E55A8ABAA5299604731B97337100F70B068D791982F01E39E84439B8287101
15EDBEAE6420E28BAAC897263408A20D511FCF11F00B7DEBE54EB911D6968736
C99C9B980BE2D64883A0D90792A7D433060CAC1F085608E487D575087CA8F6E4
D802469A5A218ED067BAB54229310D0A884D37DA5162D402369AC488949D2940
DB0D1248C6BE737D6B19C354E46C8CC112BABA42DA7E9058BF16C16598133B9A
4E665CD0EE9B20D6C2CAE00452D0D7AAA029410A424CC9602FFE58E226F33266
1094B6FABA4E767C7055C4DEE35E66B0DEE7BC06E71ECB5344B1B89CDE4F9CC5
8967C89060AF34808E1FA1172F6AEB75FB58A2A8E8379F7E904C99692EA65C76
E3C462A6942A5244C59A34D2C11D4C1EDBB5DF018E13ABE0F8317A389791CDE0
52F98212B37B782314B713040BDFA62DF2B7203C24197B69832CC04171145DCE
5B23E9AB049D302E5A4E97EA1DD04ED5837B427308CC737514D8D70FAD8CE17B
FEBCB0DD3BC66F1B7D4E2BFF0F8D93463C7A7E81651B10917B3B77C1984017E6
03BC0B739FDE5134258E5076C9678D76364A3CFFFD00B33191A862C67CD1944C
D291F8DE370E255A5817555512CC62C14F23140B19B86FEED25F54F9E1330A47
739B54BC449675256CB3A1861005DBCDABF12704ADE09126C63959E571440B47
3E4DEFAE36241A6515C58643438FA7D92FEC4D1B9975BDA1F0320A6BD715FEB6
9B9E3E997497120FCF594D72B43CD7BD8889040F14FBBC5B981C71A1FB184E48
E7D556ED8F306C880EEA81EC0BE73EAF66F65D9530F5E59BB21A245693CD9257
58A6B99CACF59891A5D31CD112134AECBF5643D8076F9CE77CA9109816298C57
57270EC7185D61F3BB9B0FA2F775B5524B19A1837E80A5D66E383077FA74C3A9
6F16DFE92EBA9E8E111A8116689218CA963E9889EFE50E453CDBBD5B08396B42
7FA6725BAF041B2B2AC02477047EDB351EED4B9566DAB81175E3D6D738923D8B
E3C2AE1C56D035B932217CBF7DD64A2CE2EBFFFFB6B06332A54EAA34B760CC41
F55FCC97378815134A290FC610EE5B6A1285E888842522568330D8A3FC920454
D2D79DB82C303A5E9AB449C405E6F455DE4E990D05DAEFF27AC792D8F6ABF3A1
CEF1E578EC30202D5B79CDEBEE2C65F703657ACCB7FF7E925A96F5B7963974AD
69DB7B1D86B5CDA6FD90FC90D591BB876E4FFFB3E9CDF06E79B2FB473BB23578
502656223E7639AA98DCB4CDD8E669753D6909D6CE026E56A955CC79D61608A0
7268C1997DE79AF4CCDAFBBEDFF09DEF474134CA5AB2D4468C0F725C2AB6F51F
1D575F3FFAA8608C55EF149EB57E704BE0A6EDB26B5A1E94FE36D1EA9B38984C
FF970AE080718FCA90861160784C525139F90CFE940AFB43472C61439DEB2601
C70A13F465F11856C837017E8F8467B166999B8311314D0FCAC2813CA6F3C5CE
15835B73E108A1AE19C1AD9CBA5404E5365D379782212EAFB430C88401CCE2CC
1D91E0034FF6F621D4B8C3E763B3282BC73952FB688ED3570D6CC6EF7DA7DB61
E99CF94C0AB157201A5936C960F1460B004A078CF49804E040FA079A7F58F44F
AC866283249AAAA61FB33DB30F9F14CD9F25D8F782B13E4C225F82FF46444B3F
CF2B458AA9252B6185C6689F45DF8EF6A30ECF8A9AC77A699581861292003E0D
BBB31C811907E6A543D2C648E33B37E3A4632003A87C6D8B2BF2479175032408
81D06DBF45EB3FE9E34B8A8EA30AA8D9827EEE107C0BFA4C6CF200479BE8A075
0B338CF1C93231C97BAE5FA86FA6E0A6A50835C92463D601460293B3733666F2
CC93A175E0D5A65E61CE70127BB7BDAA84494E878B48B0441E59709F2F2D0A03
67E17AD783C0C7A85158817D1506573A3476629D5605C7ADF813918210002D35
CDE86968E9AAF22EA604BCF1615B3A05197D9A3663CBB432E2D8225F8DFFE4D5
F47F55215CFF3E6C1B4B7C8AE75B631D4636928FA49364996BB82777C5DFCA20
E198FFB01C0BEAEC9A15D627DA3B83CE02F699802B88FECA597F8A5000852A78
C8EECADD9BBCBADE86EC8D8621761795DE2942DC3C8690ACCEF8EC43FC1C2C2B
B9019EB680805C3874D7449074B6D08654D0469DD69915F3951AB6920C72FBDA
A650834F824F04E0ED25606B2AA1CF59AAABD7BB072CBC051E410D2EA895993D
B152563CF418040A2AC12DD5CA859AD82C4C12C8B5C47AB7A0B87E2DB478DE62
5F2A4EC1288228AE5B5A6492702BFB2C85CC44819D940AB034446711A5058824
7FB007205CF649283C887E8C773F31D0A187B5ABDAB063A160565CAF83500F6E
167F699C944388CBC40D69A56B2C77218C6D62393A3A02C2C5EFA5F52CBE3919
FA7482D22BAF665397BF0AA4A9D84B1CFAAEBD1FE3E7C8954CA393FA64FFB32C
1A0EEBAD5F95F8C74291D68E4368EECDB153D1253343F0FEC6EF6FE71CAEC5D8
738AA7C2C3E230B2CEB8AAB183DAD551D082BB5B9C41304303330FB545643BFD
B9A95D0BF41E9C69F70FDE3B5F6935D8BFC8E445659D792D85420CD2FE7271CA
A8028010BD4FFB65D04FC7AA2FD757F2DCC1C83FB05091AAC5D840D1BD91552F
B4F6FBB7C9631FDC5A4D7E9E7F4DC3FF2DEE1E5D778F5D5BE3A0C12750967726
EFDE4A225BFF497A6C1BF3D26AF7E28552E627B3A5CEE4FB9C58199A8707414B
7E2CA7F5A27C67DCD82E69615F645B272ECAB8ADBF2AB8EC45E59D46AD10F444
AD5A3AE20377B601B78EB6D864D1CB771F7869D96800065239ACCB15E67A19EF
5B243E3ADD651EC212927C85873D6D7B2641E44044BA2DA735B887258F1E577B
7354D064BBE84E414BAD2350F1B772B18E0034A4873A3BD7BCB9E055AC612ED4
294F3303A00A0C67A7B2EFC3C0CC59C56FAF8B11B296D987B98A6D2A446778FF
15D890678A5CAC706A198E791575AD0DB35EC428DCE97C16A20D8DD7C65B691D
2E4B98E51B30C607F04427157BD5B53D449C30EBC3DEFA6D63A78643163FAB8D
477CD6861EA67BCD64E0A682631C6A28845377491B5B0A4B7B4EA31C4B95B310
A9E4E452568521A6F7C7076421EC12CAE71971B12F019D6D69EAD524B02269B1
CD7BAE0735B8DD74BF6F5116BF8735710D873C40C5E9553553E06A541BEE9625
E1F564146D0B58D5CD5A39C4415F13B3360CA80E47CB92B0B3E49E428E4BC01F
1B8D7862A52ACCAC763961E146A3E88C29B397F58623FA02FB59774EC255AC54
24B8D78A2D9F6D03ECC3C0AC5FF2DE0C28624AAFC201B73F9F727DF82D450548
42D69BB46C88734FB135FE4CFF13514A2DA742E35E0CD17E1B951F2C071E33E4
3BA79EC21546F7311329783A028B6FDAC7BA5CA81C987FD3FED7ABE2ABFCF540
8CAD8ABABDF3272D59D4E1A10C2298072A654E6E8327A40579E23BB3D8D395E9
C86E8AFF40E1FC59FA81C5C280E7ADF92CE42DD4746332C9FA9DF16369FA6988
C9FFC1837E68B7EC79AE50065A5FE19E1E1A7DD68E9C85DF1881A6D1BA235164
80F442AC637A4CEE0D85EFAFCB497442CB29438E4BFE365E6F579013A61E2E18
BC860F8D930C731E0185EF7B0AB3F32568B94642
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 34 /quotedblright put
dup 36 /dollar put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 124 /emdash put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BA8B194E613047BF469C7B4261CACC1DF1648E8A86E926F8702B5ACA
6CEB4E3E85EF23EF5C9C53097F3BF17243B8D4BF0E6B0C5982FD14E4E916D363
E265322DF0823E9990F966A842ED69BADFAC2CD1754FC84C0FF6750D2373F997
362DDA16A0D73B178FB7B67307204AF174AB871C254B8E7CD77058113B702B2C
13F341A972B0B8EFEB67FEB9BC3AD786EE2880AEBF96A02CAEAD8252EEA08799
37C4EEC3DB23E2EB1C523291C59C87146E80CFFE79F58F29A11E48CC6A8AE100
116920383B0A69281E3DD8A266D4864A64205A59976EB87E6A05028584679B33
04F5E545748872FACE5A1AD475D19CCD33559230048DCEC6FF1972F83B2966D4
3815155BA8B7525DCF548F37818D034843FB6925F499359933AFC43C67753AF2
865FF57A92F678EE3A056AABADE63266E27DC0D18D36839317A57C024EE41D2C
246C285CFC845AB8ACF0C00272C7BE8C87D21CE028B83D137786AA2637A941C8
C1A3D216D41F9CF93F9FCEEC1A93DD064944571026FF1D3965B4AF6560D7E334
7BAC6FD3CC280608B8C9F1E30284AC7DF913CB4B0725471FF82E6DED15B32E69
0589BF794EA774CAD2ECA4581BD58ADB6AB154DAE79624327559465FFB90BB57
BADF1019900BD7DF733F062DAD9541A72A0D9F4EFDADB14CE5089CDD41BD89B7
D05BF3C57C5A6B61053A79F8529CFC2177F0060F8F94009F5573163BAC037AA9
19EB41A2A7E0C1B97EF578F264A44A9D6175C9EA2184C2C5A9CCB9688E76ED5A
A7BAEBEB668CE13286559F1254CCA06667A86A00C3A63DF1E31276A5091340FA
5EF971F08399B1453DFBEF79570FCFC6600196DE9ED27F8DF650516F54C844F4
5F721483791B16AEB07B22CC9A1E2A74625AC9FEC3FDF4B289A60805793D904F
A4650A8FDDC5FC36043C847D1BD581D4CAB1D767079A60DC81049E2B911C5C75
46DA6547A46577668CC5A3E07D021C172810C3F47366BFBF8721AAC295059B37
7DC58FC79F4BF48FB7EF964D23460E54C2D49B2140FF19F5A2C3548A1463D69E
B1B1164EDDC161347B2FE81252FCC0A218008CCE87508EEA4A8F68A5745AE8EE
1F8ACD9031768D7E666E25494A29DA65B2D0E4E4F8E36434591905BBAA86657F
8C75429DE3A5DAEF4FB3B136FE6D1810A15792FF96E5EFC600F9B7AC1787DA64
5B23F0D4A6D03073D658C8E036E4E671E52588E38C2A60461817A5D4D5022E30
7E56251C8E6882BF9A712449BD79EBC648CCDF1690683929CF957CD9DDFC74A5
15D7309B34A897C24801EB2EAAB158CE6E937E3DA9B8EF1CC6F93885E646AC2F
30930C2AB7113EB9599FE99BAF52D0FD1F7DBD973ADB465A6283626C222DB4B9
2DDFC945F4B464F05F1EAB060382EA8BEDA6C25AE721FF0B0694D08B3B3A8C8D
B4A0C2F4BEEC0389C0E76278C8215B9F542D811284F86F8C098CD4C04368C335
EEB5D8A9E8ABCB1FB7859066C02B85B3A03A4AF4F0FA7E8DDAA7E09A5965E23A
ACD1C978787C8926D3E9A98484680217B80EFDAB4822820F3D59D88DA65F8B8D
44105E1B10094AA167CE994D016CBA45368C0B232995245623F243E51D0C7138
D32D57A6415EC64B66BF66F2E587EBF13ABA84EEEF1EB2E2693E0786C452670D
7C544BC55DC58F56805CA84BF7B34DF8044C9FC98F26904E89F312341609980F
6CE353F30F097028DEDDA7A088E1B24432AFAC910686591296193935FAE56AB3
296F9BD74190D8777C0627DEB2774738F766C525B22CCA28A5F78EF5EA4F8843
C470123D77A774FDE527764D995307C975BF6473AD3EED24A7762C26CF997945
D648CBF1DE2A88D6696398D49512F4274C52CB0D8D1B9308D4CEC58AE0E6F7B3
D612F6FCB4164A2A70E5C308C234647DD6B13EB2899E2CD2CA0A4C24CAC668D8
62EB259D4404059F8CF02CF0E7301F3197852E78F6F5636E237FF2EA6EB8480E
C2B73A6C4BDC8B839EF769625870863D1FA2D985B5BAE780FAB98718741057F7
B16C31DD69423FB6043891AED4CEFC5B0E59DD5DE820EFA008268C614A1F2889
148F17634187FE3DCD55F373EF24C7BF92531249B3924EC26A2315D71270CC74
4BA8035002BD1F9CEBA76E02319652A08769587E15DEDF7AFE92B8254290DAFF
C55A03194F1C09ECD9E1A684F3F2FD5E9A412ECD5A90CE1AB57A722FC69C10B8
6B17803C475EDA537E05F75C95256C22D47A73611C903F2A5E7DC4CC3C6B0289
1A4E8D694F8957C8007AE3B538AEDB443F21D38C85FFF356DEA43C3E570B47F0
4428CF041E98A0D2B997AFD02983949ACF8946C866D88952AAB19A52C0232B64
CCB14ED093D12B945034C155B3E9D4CD826492E5F0519EE9C1388C49C81270F3
544C22A2C4AABF89E7C08953B82573FF23E79291F0A27DD9AA88AC10A45E5504
780F2EE07407F02345842A5DFD2C957801A57229136941CE3433C37D14C163CA
8672CBF29165E1CFAFA60DD29507240D3124F73A3CE5F5044CEB4F9F1BC49355
5F805846065D718E4F9203F33672D7AB12AAECF6B51D184BBF8FE107867B17ED
8AE45EC7808D82D9C9E0F80D2DFF51B2C5FF796BCBC45CC1162AD222C74F1C1F
9A193B3F03A2F870E6603274231B4075FBDE89AF34D4995140521AF23F71E80D
C4A2A2EEA7722BA1D04EC890FE9C1BB139EA8D8BA84A1D42C6713B804C43EAE6
A64B645466F1F79F7D831FCD31EB0C9255F744E0AF90C8AC7DCA6363F5BAB4AF
4467A757AD39DD3DE960EF5C4CB49295D6A2EE554A623C8E5C5D20E5151B7A3B
4960290C31344846C6DAD0EE35145DD8B5690C37CD3391D356F4DE22BF689DB2
2AB32A573309CC7E09AE778AAECCA9896E42D8DDEDFDFBBAF8F3C8BEBA74B89B
3365F5A6C1863CB9D1CAB0891B91466CD8AD676768EE5D6BF1297D724E343F09
A11639EF8C581B6A4C979593FBDD734BE56FEEC583F904C6DAEC6D7DE8F34DE7
248A0370DC92E350CF40870441D4D2ECD034886FBD440081322246A3A8F685C0
A348224B71E294BC00199A5E543A75AFF5388D9FFE44AEFB951802CF8CC748FC
FE798C6EC38A8676B463619FC64871C7869D127C54FFC3FA7C7B6BED42C4810D
708712E1D29D2E79DD7E589747D2A739C1A3C33F7DF38792A499C55680380ADF
97F9BB9005E1BD9C7FCC8A0ED64DB50197659C31B06D1BAC4C93E5AA185F31A2
9E1651456DCCBC21F1E36417C7F9884A14C3D0C0383F6A5C548756E209E64B15
578BBF3A8EF4750E724CF888D61C308C8E78B01149A6C81FB051C857D2DBE266
A53369FE304481A806C1FEF702E79F26638313CE2CBB11AE8BD022EC9D137865
2B74EC3C7B48F3BA61B688EF28D3A93701775F8C4203E73495FB9E8728FD058C
DBE692EB21A2D34D2EB8208436C1B02E74C3B6E8AEE568CCAC811577818350ED
8FAA6FBC69D51ECF126FF5EE7B0380ED995EC82C405D18BDCBE95BD2371EC169
C6BFEDDFFC1CD755444B77A8898FBF2729F93E23D561DD4E39425A635CF389A5
F3D76DDB67F7334CC06EB00F82A1D97BC99CC1BA2E598A271DF8FF776AD098D5
8212307217F20FFB8F6270C7889590D70BEDB4725B59C9B0C0D289E24A5F9054
5963CFBA806C96D653CFDC23C6A654F225BAA22BCA85D64B37B0F03B48BE69E6
487E88DF4B74DF35ECD0E07CEAF2DF7E6EA940FA2459A29F6B09EF88ED38983C
887FE06CB59A06F1D9FFBAFB587C01E4C74D23FB0F8BDFBFA27DCFE5781C4D09
1DC6A7670E4B3A2D09CF872FBD2F833268A20E1E9E554C7C8EC08810219A3C73
E7169DDC3F4EF44A7BE542577775B62D33FA01304745ECBA31EEA683060752C9
63F6FEE04E3618BADF8ABDFEB714D2F9F9A1EE4BFA4FCCAFA920C95D06BCC3EF
EA1DC9D22E81B637DC3211E859E2F541A3C518B59953284E5FCA27E67432B76C
C7DBF0BAC79CC900878F577105A526483C42658C96F02691013F766DA4E9593A
852DC347E1ACD17E8BC934E5130CD9EE804117FE6FE5F63DA0AF23CF682D28F1
F026C3DECD7CFC83C9AB2FBD77F38D9F1C06968B5F15DAD7219099E085462725
7167E6213592BF930BD272F738E6523978BCE47195F943C02A0BA3733B0C4821
2BB2DC5F63E0872427EA2CC4B126E7FF4AB687F4EE4C94910435E0DEC9F9C1F7
92746EF0EEB279C2BAC7FA41E32A7A18556CAC4A41D09513FD52532103DEFBD5
ACCF319103D92ED5D7349DD094774E46E8BB05CE7132B05004C72B85CCF5E4BA
D142D76384E3CECE7906E60342E5BA19F4511A65F1ECBD7A802C803A15AB3E83
A3260E695470F4C07102F6B4364C4CC42BBAFE059E8E052A42ACB05F411BE8BD
63E03BA162769F714092D1D0FBC4AD20E25B5839B67EED7DC17979599EEC232E
3E0E28A5305613C8EFDCB220FDD30920CD40E9DDD021FE2811FF918621D38DC2
44C648A76EE2527F171C88B64DFE9679373B25AE46FA426A9328F08D9A96E402
745C7F229B421352B809DDDBAC075D6E73866170FABF222806F2F4FE863B25C9
CD10E882E1D02EC54A51FD2B96B3D94435B7E47D2CCA753CC0FAB6E1D866BD7D
F435F2C98E6670FF470007903E10CE1F81929653513BADB1831F6336AE44DCD2
A908A5208ACBF54019BDB50A5C08BE784D316C3E7477514F840B05BC7AB3CD7E
3369753DA36F6F13CDBC8ABE6AFDF502ACC20C8DACBB7F6BB331DC559433596A
88B244D1BB616EE2FED8253C6989245269FE96075C636C256C9A44036523837E
51535D13B9B10BC7A265C630C5705E327F161B03F0D6038EDB120CEBFE5CCF80
598C5BD58FEC2FFAF988471FD0691A2779DF93C1A54048989B8A712C63884213
E9A8F64B21F2B895746242BC8DD23E8374B6ADC82332641A6F67199F47608ED8
7AC6A7E4AC0BAD09238CAD99F0F3786DC69BB05C4ED46D75720A56A9071B0A09
E4952E50F3D4F13F03F895099FAE46498C4111F97B40C859283A62E7FF77DFD2
E15EC0F097C5F39281AAB43C71989CC589BF58E37E60D363417C80AA353D33DC
9DE941D79DBD614B4B459B0DA856C042121D6691FC969994C61B4349DFB5CFA4
48CF9D9FDCC433E616C77124502307708ED0EF7C5A26E656DF92CFCC4006A02E
CF9DCFC6CFDA836CA24AE2F0F2D15A1F092C5DA06CDF9DB02AE5EC3E30D503BC
7F2807F831320766D5FEFE5838F78431EE280F8DB72F9A19371795011B1A5084
736BA7167C4BF7C07E1664DBBFED7A3026D27E9B79C323F13C814305EE291F64
9441F55405299BECE661FB514F3636F07D33F2346221B571F11B4432D4B7E5BE
31D45CF7D321FE9287A7E23F7D4D76717967D5ED2DA31FCC608B704E2BA8B8AF
CB2351C7C5712AD8E7F5730958BAF45A10BF50EC9661D7F7D9034FECE01C5D39
BB5DFAF09FEE465A47846071B55F338424381AB7E9418A5294FE0AAEDC1B4972
2673D5E468A58307B3872182D096FD09753BE89253F2087C8FD37F426A198A9E
2F58ECA5A577797EA81706FAD1358186D74BFEE3BEFA9EA100A65BB70BECA70D
2D4F91216729418197547EABFB11D710BB3DE5C68667AF89D7905D8F39EBD792
53CD3193A35DB8FDC4C855B88CA4E7BAA4C3F70D92BACB52409784B6F6EB76E3
8001209F937F25EEBDC597768CA75B4759301B18FC9633AFA37071F533B4D8A7
49B6F509AF4E369501203C60FEC2C135E16A1DEC01C75FFD38834E85A7AE4339
087897A2B52AA9D58AE3135F267932667331B9ECE4F0CE63BCEA7F9C3AB7ED68
8B3C75E8F9500F3368064EF866AEBF85813D345FEE083B58A356F657141D0F1F
E399FD36B8E60570F5AA73F299E5F73127A7B1ABCC623B31E3B057E62CE56DD0
C345F0084A94F1415C9BD70423E21E4D95B42BCD34923694684D370B2CE0A5BC
6DA96DE13B96058A6A1E129122D44D1A5B5459F865DC71661819AF6808256704
E72784EB3014B69D6A185C911766E6A51568E039E7520B036B95A018CBE9A3C5
C8A9BA59FAE7E0841A602F11B1D5470FE7BBD4AC11DCF1C200FC1BAFAEF705B0
247464FCD94DBE12FD99B31AC979804BD3E0F9BBA33D34A0ADAA8F1A96FDED93
333D19B087174D200308AB0D095658F208D604C758C28B214CA0CBD980888F09
FB547170F4602D1CA0FCF967DAC2EA04A9D3D5E6C58B68245D980515AA33D77D
4175DACDCD33C823CAB5D77BFBCEE91C5E633C86C47A5C6F5BF194BD7915B076
D40A04E38445112CF59903F0B9460259B868BDEF3B4E545A77798767CA5F24FD
F29C0D2CA38A8FDE6E09767918B6AE4FB05A00A8F6D791752816BCA4BA0C5071
91B83C8C14C6FFE8AC8C635DF57D4CB8E39540AFF5B6071D5E7A533FBDEF871C
EB900758B02918FC4ED8D163F078ED5C5748C391694D52DB58C840B5B3E8AA7F
3F8A242EA94AB4EFE73C16F76777AFBBADD89DA95A6061F28DEE83741775DBF1
2C0162CBE467CF2E84C2DFC4FE8E9CFF7671B8F41AAD8542E0A43A1081C897FB
272B4BD876FBA17E3AA8B62FDF13245A365D5F5DB033C7CBB7E08F7880FC8993
3212A26B4B9673FDC538BC0061B6AA71DE168563C16A14344E95594EBE4D0DBD
94F57F490E48661E7B9B548C3159EC5DB3ACE3ACDE6B56A9DE748E7EEE627093
E843486E59276BB2255DA6C45E5FF3531D9EE0EE7A5DF98E0DFE893D51FB364C
B736BFB03266274FECA57C5C905DA246D1350B7E214FE5A5124644D93B6B43C7
466C4EC4D703A9BC71BE6BBDA200731164624E0124F538D9915C1D596AD3CF39
D0F89B9C8D2A051D5B9D3EC78726158D253A5249FD3EBD1C9794E3726241E987
1CD4876001D8F610000F606F3190B84D68F4CCC33C48CE0036E3CEB8B49755E3
7D094D8AF23C0CC29B237BE0E7A7CFBF45A265CF19E01E128922409F8CE149C2
BCBDDBFBE65991EFA0AB1AB7F06C5F6DF06F9AFCCBEE1A76B178283D4A93F988
29F56FC31083629B79BCACA6C3AE962C16FEF7AE652F780F6E9391028775EFF1
8CF86E0A2A1EDD6BAA133EAB2A0CB7A44E7E81F6950B2ED69A2B460A711EE33A
304C6AECFF4F17FA30E50BD016747F5FB6263F5D49A5A50AF3A96661B5F0BE42
48ED56886279E033844932C7D435EF10008A2CBEAEB628739D2B777ACED75576
A78AF8C8A8F02C759AB51B711F251F73BBA08EAD1224BC61432AEED6C09ACED8
D4110F96997539B45B8B583090893872A64CEE2FC251E0E5A4378CB1657950C0
79F649186EBE94E27E2C3A380A61E8EC7826E71940466C7DA4969FA404CA7FAE
46C48E8A76AC6C27320E8B4380D2DD89127F8F9D3C746E95B477E31BCAD36348
2FCDD52F4DF1256933A10B3C24E4930992A97CC3E62EFFC61F9600D527F5B8EE
87C6C8F18ACA19F9A91E2A4FFBC523A31331E699D561EE1EF1118138A1FE9D58
211AF636DBCF002C9FF28E43A0C7DAA533E2AF447E32A9F2066CA5653A436966
5CF3CD42C9F11E336191BADEC8ABCF75ECDA4A8FDA661ACFEF58276FDCF2C30E
392CF1804D39A8E9D30FD03A18CB0BE4448862866E284D7342C2956B53F3495C
69C37F6C739DC6CEB863E3C24D8C08EC61452209A9E5116C3820DC606ABD0AF8
A7D16D3EB47BEE94450CDA2A4B0F8E7263E9EFFED3A6C4367ABF555F228D771B
38DDDFEECD07F6386C1C82768018AD26BFEDA38F1B9EF9BB29825F1B22688DE9
E017837CABCBE4C70E5F86898C8F3A25E894163AA502F4E68E6DD9E6754DDC25
220B72D119A25BBC9A039AD413BEBF3CB4E315AA6922A06D47227953A6833761
6F1614537CBD3F60A5287BDADF61677E4EF0DE7914DF4D4154B7B9B5D338C930
00A7859DC1AA39EE2BC287822F388DB450F1D8344C0DDBF2EB2AEF1ED7E90E54
5388C0BBA75B263747383CC7128F5EE0BC66AB54091B60F0E57AC6C94AEAD9AD
6263D54A6E0BE65F773FCB1B26E9656EF805F0E7A3BDE1BAE2ABE9E32A3F610B
76EE08F32883BE3D2854A85C55FC52105F8A8EC6543B142E59147208CC17D8EB
B79C219E132E1351D6A1C2F2880ECECEDE56CEAD8CE38746023F87C2C4EEB1BB
B12CC7A9AD6F8CBF41266A92337ABB52F95AB42FC36758AC427CEF99FA65EB27
8C5CFEFD3FDB7E56EA6552B5147BD1112A184A211C92D2B53E9DEDF90C47CAE6
CE96AB1762C56B6A4393940EBDDEFF833FF3A5158E69D84A4832D1EFD0520807
A1CCCDF7F1C7B66083EEFC7BBA523E9774ACCDFA5A4E649CA6DE41B24116658B
CFA9D4CFD20965386A70FFACD63DCCC40E15ED374B7CD7DBE76DC6CF5CCD9452
CFC5296015583084ABEC0430E597663825CD57B25CB672084FFCFF577A069423
B64040E8C800388480409D36F8FE8EDEDBD3FBB89D6BA5E9A91ED47C244A7806
95BBE5783D1BB058CB1A08CDCAB5801002CCB3F63A7855300C11C34812CB547A
C8A0A1331974B523C97C576DBC6F7018185BB1DFABA69F276C9374BC7173ADDB
1EF71452E375272F45A1D5B4FF2051A700DC9C8E52475A012410E0A8566A55C8
9D4EF33C0EF2F14F0724120E018224EAC517AD2125544451D5B3353856318759
DBCBBE9D50967DEF036C8EA24E3E88A138036EB5C30129783EBB0C0B1BE94162
2FED8C32B81FA03220CE009595C0ED2DA8B1C769F8BDE67B604F5CC054024DDA
12A3B7545F338969000A044B7951789B8D2316D2913ED6CCE46CDACEFF808D73
A5CE69D2571D6D292B56692422A2C3E64D788A25A5B2D327D1E6E858D1AA3A25
BCBE6857F33F2A6692DCF1812AF21176C71B2C1495F337990F1E5B05D469CF5F
8E937189246569119FEB5B912BE6F7574FC3B38F71AF8BF7D8C37BCDAF5D6CD1
4696A237E51646A64C722CDED50A538BA1B06E6D735353DC4AA775A29896D2C3
F9D19B8EBC27A471704A00FF02F273659451B358A0F61CD61F49A27F311266B8
DF22A933A22D709F6A63DC1304FC8AFC809B14A7EEA247B7D4BBFD5DA0D6D04D
A75EFCEE728CA9CD1E0F030FA5FCFEA89283EC890C7014773DB7A45399614AF0
DFF6FC1478FCD9CE76B5D5CB6E1BD68FE4937DADCE9905E95D65627D54FABF20
9E86B2FC801F22E4CF25B7B397A8745AC5E9C9025A541C57BAF6D1C00634B84F
B72BB4342E5F106CF1A21A206AB085F256BD5E0D1793960032C93B31A824F284
A1E25FF77A476BD8177778DB67344B5C8A3AA311B008E2DEA71E45B148271E11
F55538BC6CEBD4A86F7F7A13E43FF43F255E445F77CFCC29F4A3B52543662C0F
53E50F68711212F168ACB018C917F93978F89D48D05FE012FE44E852F4C19402
38DDF440AA26922E4D82B10450633426257D2334F193E5FBEAEFA6F306FB1BA1
D57959556AB764BF36A34C2B245987870DA2EEF1DC5F975DADE423CF4D814C4F
7590820B0C14AB484DA3DFFDC52FD0FAD8B1CC998BB19007690263C84C054D05
002F6FF116F95B5335EBE274078144F32CABBF6C3028AE5CBD114384A41679F0
2E1B8EF68EB45605F8EB1FF72E99C3C4F938F8BC648BD426A5279F7D550489D0
D6C90666D00A0A66B6B5BCBF7C3F2E287B949B68F74D0B1BEA14237385785A69
26DDD754C0ACF305379194F2E2F77F0704A97F3362F709CB1A4B1BF4377E0B65
0D7391ECF899EAEE1570A1F22F017BFAC1848F9A290A23A6FC2B1EF3AA8C0771
A19C10B2F536366F3C5040E34A4F8E4B44D1871A2E64958CAA8F77470A1F2B71
6CDEA6D191EA8A58EB236B14B6F7BBFA5922134D8DC1502C0889B6DE341FD6DC
B02F604944D435B972E7155E45CC29E600A0ACB1B29A3472C822B1D24477D873
3BD1A80F628E681EBEF3975A4BD567277545FF8EECFD493A3A55944CF37FCC5B
8A92DB3977A84E7A9C7333808AE04FC9278D56C65562F8C973E09D8795EA47BC
17D9586D6AD83D0773EA0FA2BD247C6C46A9D52ACF9A7A668A91B683E9659D00
48D180492A03306515859295E4F0F6F37198428A561BD3CA11FFC68E8B25058B
10F6E51E5E6FF5D47CF21A8F16337F7B6A4E55B7CE740C903224B8106CE8BB9D
75EBD55CA31A43A539D23D06860DDEF0E1958832AF79F60C35E7A1B0E6007A4B
33831C2E8B69B2529D141D7FAA70EAE528C64EAE26F2573ECD02C1EB53AF8933
CC1C4C5AE760FF77A450D9B20F119A3FFDFC8CC5FB491ACDBF0A2868B36E49A7
B4C7DB9910373229236B376683A38CFA91F166260530337AEC003F108657AF6A
FA2CE76254C512462B8765952803C8AED6D63453785B38FFF3ED433200836384
DB64D7F6B65304E1C6F3512F93CEF5A6169377E3F5BA092DBED8C47BC61C982C
8C76D7A8021FCA5373055ED5D60CB7755BC53396026E5EA04F6BF4FA1CDC8FC7
632C3167C62E9E2E5EAB25889A0888FBDFFD6455491B475E9DD581B77BFB4DDA
F9FEF4E0D9EF01B56A74C9128B31084EAB663D59ECA592E6F696D8B5E93C0933
BFB139C6B818A1922EA57C0264F6A0C9B1E0532782E878DB7A0A76963E4B22E2
96FBB6C2B24C2F50B140DC275F99F0994256E982ED77DCD185BD9D48B26603E4
FFD913C06FA74830CBB3594F5A44BE4D4B5E7ECD35D37C6A509BFD588CA7DAF0
9AFD45B7A5F821559631773748939FCFA07FC0DF06274915F4085C828C159FFA
8BD15052B006CFD2EE4FCE6CA46D35A384D976AE4B970460F2FE1D29AC447C66
21947A8DCBFF5E3C707D5DC88FCBB1DB33287E57C58067110898129E2D2A97AA
45FE4AB79C3E9686BC4CEAEA7F7C325F872D25A02C381FED0D5347BF27FC2963
D2FC0BAD0A7DB58F1AE42173E976201C5EF6843231DDFAE332076DE69E707BC1
CC0B21DBF04CA337B629808C10222EA013A4F1B8B85ECD6E0E8D7361246E7DF1
4014B968733C80AB38B0EFF651A915B80DC37FC2830203AA1E039E315D8F1715
2194268231BDA5F9FDABE86C0E9F6AA3F4B8AD24B3A86A167A981F89AF366D57
AB3AEA1D26FC89020C8C029B055DDB125619942A2B95D3021D528B195765A41B
B595F168BA756483605FE8CBF29273665486A45A6F9DF28E744FD941A82D1008
15A0703FA779EBBB45F4EC2AB2E7B4828484EF684ADF48CCE8E4D7808AAFFDE6
D828AC92C7F9553083C083636561D9FD74D9ECDD8A81CA0F56383B144AB7C90E
E9FFD605C24BEC8B473A53068817A44D243029EC06F85B6F7C5529E1906C25BF
41FAA8764C74E0BD38114F2934B2602E36275C5DBF102E4DDB10C410DE25B10C
80D004D0B9C0BDB3D9F1C7F47F426081DA4834253CD58C953A9802F08EA72FEC
EAD8C814F0B1BF7F26CA2636D000447918C4B3D12DA6A8A0637C6D77EECCFD3F
79F863DA73545ED4C938C1CAAC9C63EE006F610368E75394DAF45E708C2CE64E
A5280BDACF3585A451FD40982D3856B62AE0C4853F20E4279549614F883934AF
357D751ABDBF3365B784C9FB9ED963ABECDA376CEDB3B6E4E1675908D8C23906
4A66D212E96A8C5EF781314F76BB986FAA85FD3E1F38B02A8A49953A72011289
1D9D25E1720A3DA7AD1E11DDEE3C0C65119833D97624FFB9294B43D0ECB17EC5
624625B6A9B948EDE7FE0B876CD129CD87F78E428CE446287F1A6946C4DE4E98
814B93FCE642D573D1FDF9A2F8053289C316C1429C53D6D67F96BF597F203C5A
A4CFA1289E1888AD616958AF16CEDCDF70B8ADC4720C5A054146C6B11FDBAA32
7232A908BCF295F4161DF5D4FB723970F743B34B79760E8B6516A9850E135117
A09ECDCEFDFE00A4EE8052B20E70F028E57557B3540399348F2CBCC8A1EB3673
ABEDC8F87FF36557F3965444570943CFF443A9CC18D976A2960AC4F36AB37840
3DCCB623E71E16427BE42E75E48A6328CA500FBC3F528AE029D56D9E709D6C1E
F1D694026064D698C42CB712E7F24A41D38688CEC1A0F981DCC8D00BD21D2581
B20E40EFF0AF2CCFB5CCCB43C7EF0A84AAAAE0246C2BC8088CC91E319DA9C196
7AA9FB19A1305CEFA3C3F53674FAADCF0D3B65D4C5B1ADFC9EF6E9870145B670
74311EBAA995688B012D3D422C497440C54A22BE5546972576183662342C7CA6
415F865BA82D7F38107F3E9654A41C8A4BD377DF0C44906BD6729E3D9CD89EE8
6555F5D817ABB7CAC49910BFF3908C99DAF5FF62A845F228A27CE6DB457037B3
669EF207ECB92F8F839D0E7B699CE24F839B92AAC1F506C3B28ED85E0E281884
5D483182A94504CE09AE764B59E290993BFC16ED3525E7AF0BC79D6EB3D1E2D9
56533E148499F6214249D4D334EF5F9CE2E731EA1B6D497D3AA71A36948BBED4
6874B46F7AFA9A15F9B6B2768C4781EB64A79F9ABC3FFDE41C8E118DD18ECE13
5D22C2BE744BCB68AC10D5FD0AEDEDD022A7031E53D2FDB4A081D2C4B9DC4197
D5D21D5DFA380CC2A10ED4F58F165E8B80D72D6A665FAFC412B8AFA4D57EC209
AF0D08657BDA90C7315F957FFD0A31DF6BC7B06DAEAA3A9130003BF82003B301
FAF04512DB6EFE807CE3A7B36D74FD3469749FD63B360AD092760D2275B78FE4
88F225580D0DA620EB4116497EF5823C9BE0F831968EE48B2FF36B56B52EAC82
EF4F9288FE2A1E56765B8CB207244AE3C49EEAFCBD9E2B56200BAB33368153D2
32907B6B85B4E02074C791D9A86C50A2C7E3A5A1BAAE56A6F1D8DA770B64642B
688E259EBD334DAF32C450C425CCF4F70D7D95513C060655DED25C5BF5E77547
82F44EF1A21C91566483F1A69952B600803808E0F0C435918106E74E982E9FBD
E54A2036676BD39686CF4CA5848C3C8B50000B7AACE8B7F376C432CFA0ED60B6
20C63F4C4A873B619E4E17B6C604F20AEE0C935EC3A3EA332309AB8F225B3C4C
2F4F489E7313C97DED202C648547DF1E0CB02E8E3C63A3CC2131D981D4BB98FF
3AE652A7CD433F01A7E7D92420B3E3CC1729DFE368B2DED863E76F177876A9CE
0841FC32981AC42375D1D922EEE670FDEF00081843DE460E18CA9A5099D5FD57
0DFA7961A9E3C4E21D327388AE841845EA146404518D3E72424E611CC416A00F
A79BD39F5EF38D98227392A6240EF56C9863BCA2B6E7E48A637D1D61974D3295
4779AF4EB6C1D59CF7B64413ADB3015C6846D0508EB17262FB5CFB267CFBA0B9
2F4B77ECD1B17608C005EF2E04DCC6DE7A4582B1C5DA4E7BC19123755F30F388
73FCAD01B7D5A3D2716CBA41E2938DCAFE7A976A483BA3B5F6B3A53CCECC09B8
F1C2A2E1F239454B20B82C70A11338D4BEA38B5BD135D164B89F1C868C0AE313
0B2E5E9A9125A3303BBE70E2187975201B130E05AC7A6D00F78E115479ED52FF
F6C292BFAFE2C4F859EA1BC17C9BEB609DBC214E180268B495D1B343A6960275
AAB4E2AEEE41A89E24E856AF2D4EA80E7731FE902076FB40AF18B969027ED6D1
C7081010A97C1CD5FBAA046EDD1405BFB5EC0EFDDB07B89424286797E9724AD4
D826411D9580C7B70CD36BEA04DE87CB788B199EBC6B98F69212972A91138935
6AFCC08BC6CDB20C7BFEFB3C015B510BCFBD1F7453B9272077A7BD6BA5F60BF3
6B8B6A1674025D7176A189F7A4432A76CE5B2EF3AC93BFAF964FD457901B2116
000B6E4F76571CFC6DACB91ACB777A26C49CC04233974F5180E6C23045670B53
ED73A5AF5DC9CC49DAB9C84AC999013BA6385D3297E6E9C73996D0462973F236
504A15626851A4884F44FBA25F0C7C67ED9A914AE0A86D369C0782E0ACD77DCB
382AADE5099BD743501D5C996B9E957E71C82633BB84E608BC3AC4F2A5865733
2E2EC9120870F2ADFA92A046DEE2840274BA450F1DFCA057F1ADCD46E4C49ADD
C062D3C298DF196EEBFFFD270F483EBF045549D9EB7796633CF1C8B8D42B61C2
C261316AADEC36DC20A2777DC475EB2343C03CA22C54B5A3192083B326C812C7
6608C4A87F1BF797806901BCDB1FA4D5B49BE3D748262413EFC8AC8FDF9E4933
163C33BE8E17255461298B3AA52FEC3186606B74C5D7B5AF38500850A406F3E0
14CF0A09AFD103E40B78E94AB5FA479CFEAE15D3DFDAFA733BE3A3B4D830E073
B43266FA93CB5BC393C89364C11EBD64202766227C0B1B1BE9454E593A931737
D1439AC9EB7F4B4A3FE2733BBE0AD63622AF2FCEB20E04A5BC0D56B53F0A32A0
84388332AFCBFB2C146FB19C8EA962B45987F34766C60A19C5C97B72126FF73D
F48D0D491351605F4E0FCC6258914A36396A547A8E71BD52F639BE3A2FBD1BC4
7269EB2800DA73B7A30B586096F375F1B0E78C7F7992C1D28539C4088FDDDE18
5ADFB89019905AA4B14C892D942B3AECAC0FBC140A623D2698C09D57F5EE3C9F
E10A0E4EBCFE80743261DAB035C6BDF0ABAC7DABA54586C8FDD75B0AD17F3A67
BCCAF3CCE3C29C5BEC22DD4FB048B0DADE60E33DA173ED8835059101C5251A60
6FC245DDB8B5EC9DD5402FD2BF5C5BA300A350D761D8444CD733C52075FCD368
0BB42648FB6D01AD31C289B578C9523AD807D352C5A881440A33E60583F7862B
2FC97FB7B2DC09761E683C887A1C2DDC9618D1FE25E724A1AAA7E26C06733C54
2A0E53051258CE24D500151F2D1CEB9B13A24D0ED0525F12F8F1CDB00DDEFCA4
1CC1846F8BB627231D2CD6F7E0B98D5C796B08B034CD7357B0FA17C0188E481E
A8A0D28D6A6EB1185BAA469F9552C8479FEE0279E03C5D7B19EB08FE4948153E
B6FD8D1DEDDCF1B6AEAD2730267C000E524FE3F28D55F7249036F7006453AA48
4457A606E8A396DDDDDE62E07D08AD3889359AD139F4C0ED4370139E3C6A384A
DD50B868D166AB41AAF4BF406A53290C6184ECAB4F6DA29FAD010B9DE3A081E1
F866FF139CFE8B857C519060752B8B3B8C39BA18571E86F4651BD0D56D3EEC26
44966C850FD078C1E449EADF913B49A07D62B50B1B420036DB6C9DFC59602005
3DD39C395D126B0789C8162AE7C6D71D63E575DE113DD7F2AB3BDB6024D88508
6672A0E4B51500A10F0CA1846B93495474C7FFD81197DF29D5288B1743EA5336
ADE481BB36891E081A2CCB8294A79C04B9D525C453DC8FC1175CD58BE5B556EB
F3D1627F9BFA360CEDB44B31A6C2DD7C62294C6FF0B5AEC9E11E67A481F70CD1
BB2ED16EADD9C17AA029C9A4BD433FD75B2C1C5BFE881C723049EF5DAE9568A8
4F773F14F5288CF5C77BF3F4A8BEF5FB3E14E702CF22D1F6F78D42D5538FD854
44CD7A69F6A075A72FBB497CF2ACE63DEBC312A54F4FDB833C69D1E6DD51C717
84CA1A43A323886651CB9A99925FFE5DBCF299B0F31D99BA81835160E9963732
592A011EAF67787961A531E2D7CA5CDFE93A43E4160DDE0C5705B99ECF618585
DDC63F960DAE5BFEA0D38A29FEF6EB05FB0412A6AE164DE9E1A53BA3ECB184A1
9E5D3E550D1D026ECD5110266AF8325B8801B37EE5A769DB19CB2C88A48240AA
C293BF40C0F2C410CE270675F87978F42B720C756480EBA2C93F688D6DD96869
DA29E3DE52282FD40F2ADFE5E9A3EE7EFEB6FD4CB9285AA2F30793B4BCBEF02A
62084C677F7906A16E4F8FDDB321F00DE53DDE2F606B568D04E84077BC071159
D4CEB02C3464A02DD3C27869CED4AD1BACBDA82442CC18FAE709805761C59790
D88C805B5FC54E4F98103EA0E8285D6474E0791561E9AA1A5A30C9DD5578BF02
6E9B64B8D41CCF1A995BC94EFF0D184EF7A8D84E1C254A9EC6837835679252BC
BE46C8CDB15B2BCDA48A838800889BFE33189718D7BFE979CB520C748CEECC25
C35518B87ECC8DDB5ABB78328B71FEE332F9F0120D2C20526CDC8CD93D4A4F1C
D1197C0F08D5DF97508189A22F993559CCE19AE75511E44B92793984474D688D
22866961217CEB5AB72CAD554F464DDEDB428B3AB5FF9C25D6233DE307B60E4D
D2A122D668E81F6EA56FC03AC94813D050D5D3988C4AA27AA72FD5A9CB6449AE
2470CF15BF417AA2B1FDD367812B86FD593F02369460859B5988B8CE48B431C7
62A9441EBC721278CB865A7DBB1CF58018E44A5CBCB7382FFDC9FED851126A33
DA219076C1F1879E933264FCF956E206F38ACC0E50A3424F1B09FEE30E77A7B6
98ED8446F3678E9AA0507F3995C3E11A2625828D55FB4962B21499B2B69DCCE4
8371E9859BA244B1D57100B9F5CBEB7CE9905E026FBE37BC420F09BC7119CD2D
AD736A3172E1FDE7FFBDB3CE03BD7B6C0270B3EDE5F20C9BD2CF729941C3830D
6D9ABE1C2636028166294FF755DC33D6DE4F42D82B023F838E1474B89E9F8097
E1054214E64FFF7EB57738CBF5DC7281306DC20E17C10A0D36AAB4340DA81B0F
5F58A73032E3E9635D693D138AACBA0448C7F48292DFBAA667790D4752F05124
3F4992AFA3BA90FF7512AB5459DD48B851E63E7C635A0541CB963B6A73333E2C
F7B995B2E47E9946712F92ABEE43CF315E5149907F7755F10AAE056662502D0E
47D026C65363B1CBCC00D263EE105619F1E5BEE5BAC3606A4EED4107715A2B44
C9391DA30644DD32B270BCB71F85D7116158B3CF4BCDEC16C5FB7CC0F09D2101
A3026EAA52487BDA9FFCF724B5F5F7564AE15D4061BE14531E130698B3636DDE
3880844E93D26BAF13EB1EB54B1D022EC68FFD1832AC2934B580B46C71B0191D
2E20727919D5C415D0A72B90279DC2C5EBEE517702B84E8EB519FD98681F4099
D3F889B24CEBA264988C2BB748FB231E906773CC79C2DFE5BCFE8E0625A0A017
C473086269A85980C1AE7986FDE7F690040FA8A7D0DEFFE307BFDD969A93FF53
4BD2D35EDAE90CF023DAFCAF027D58CB622969173A995857AA7731676ADD79C4
27771E6F9DC370D5C5AFD010FB159460529DD63AD9AAE6B7D289C24FBC5A0443
BB9D0243ACBFFC790119E967324E9586ACBB48FE1E45B0E277F2D6C42D73819D
E1C1A8A7F428D021041757C7ECA7F0CBEA5ABDAF4392CA6960C5B693EAB5706B
B21220B33EBA58CA01A5308D5C58553045EF824CF396A2CB1AE1FBCCB49BA5E2
AF9EE25438682917C7E5BBF4B0DAC61BA8F950B37D70412BBBD65CC4D786A356
C772C101DC88797258FF0E618B6CF10F4D9B555577060E57C485641302035D73
DAD7641A1F2C0DA44C2B29DFCBBC30B087C0B9A156AB109F779D5CFD5A494D2A
1471B7D47DAC79D07AE66BC428CB4E1269DD89DE61657CE13FB61C854F5742C8
A39951AB7B3D710E40D45E67EB332C1674188B888EA941A4DA966D7561B7AFDC
261C2EBA492FC9847A4BD544EC5843BC5F6018F62BC8EC969747686A02C1F2C2
A87A893118EB324C7A3D5C2ED6C2740FD4CA4D7972EC05F85BF9D533B6BEA451
C3D5B5EB138C2555E9204A3AFF0F3DF305F6B0A8CA3A7546BB18EA41941BF094
1F30E8D04FC9926FEABEF95DAE46AB1BDB5CD4D439863321AFF1098CF24C7153
6F7D298C5D06917182325D7A51017E9275A9070F4AA149F03794A2CC03665D2B
85A5F56636636A6A8293329A2A9BB23850178777E501242923AC83CEC7DB1021
FCA330C4A2DE2C7FA966BCF903E66D8DFE2B2322EFA7EFE5053BDA656947E16D
1B00BE2E5206DE4D4DE5599D6C19ADC359F5A4C61C8CE9FE7E4B089AB53A8DCB
C52A465DF638C607E26A513CAFAF5F0389C55531CCAC409A189FA135851469C8
26455823BEE596EA86530F7881EC6DBD6A501C64419C5F027D902095FE1098CC
1039955FBE0384697456CF9113E9CC3D08C093C9E6E6BA19BDD39382FF09D406
46A7511412B40B28857FBD626E98F680F9664BD0E19999ADC8D960C4A9145B9D
BCA81CEBB60CF9D695B169C33FFEE4B654578208770EAA83F05BCB2D550B0C3A
4B245EFCED4CDC95002E0AAB702873B23C51C2F6A9284565A282C7C900468C2B
7F84EC489E29EEF27E3B8CA115B99854718B87C3CB025AD55AEF9D39B8150EC9
5AA285C4C4B703CCE2EFBDFB6A77B597EBEE505D6A325A3A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 33 /exclam put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 56 /eight put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B78188FA4BCFB0B51692D07B0BEBB930C6F0997B437E2C51B876B
61A563A2673932C2045833FAA35DB22ADE12102335D5DC734AE3AC5EEE6658D7
92EB62131E1DFBA441F53EFF9021D9D4C491F26BE8F54C61165CAD778CE8695C
EEAF70E3B20C64D4C2B34A084B5770BAB2A974E898F62BFE90F132A37E2DCA4F
43E13DB13C94DFA8ECE2B7374827AE168634FA007F8981ADA046CED3448BF453
FCD9A4F194FA648F9FC0971734BB69CB75348A88CC361FF06E984C86AF0EA429
DAA5808CCE320924D85181370AABED43477769BD769B373F9417AF3D1DAFD256
199B50193DDCA689F58FC30A5862D776824CD76277100CA1B23CFADBC2F2A050
AC76D853C7DA4E1F789C9AD6777FA89060957F68A42ED5DC8B62C9D15D146B1F
79468D135044625266E58B9BAC8B0CFD3017FCFA75FEC913DB7C0CD81B395193
E5505FACAA73DFFFAE7C765CA988D678E522F3924DADB7DEA139D539F1465D50
C5D1DF71C76C8814AF3F36DF5FD7E3659796103F5B013D89DC6BB39AB87035A3
444D643B1ACD115FDFB8CC64ADDCC5262BCC0EB511B4C6035249000B2030A93C
458EF6AA662099F50C4163307A30154477FDFC5D2A62DA183B416BBAD65C8B29
524188CC192F2D4483E6E23CAB9F3FEE7DB9DCE91B5AE82CBF821D0CA2394715
CBF564DA9975E3FA79F2ACEE14EC067247D57BEE7813B669290506CE9D11C643
FCFAB14C04795B3F86179CB516D72D668D9BD1E3F48E387E26CEA23A3C573720
ABB8F9ACA159AC7B756CFEDBE9F574872DEABCD681246D5BD659ED18D93441E2
2F5FC8C5A8AEA8042722C095DBC7053C61819779D83E5A12B3D4CB16686869E6
DA6415F1B1AFF2AC9421A460DD2615A53B05EADD61C2695AF8AF3E6D219FD8F0
08C145D201F6E6DC038F50278B2CB875ACBD92D1DF24D74B7C5331802AEC79F1
F7628452C0CB0BCEA40278517D63E3CA320F74C91902C5659B246AC968FB3FF4
EA20AFCF808430AEA2B423316B552D6AC7CA66DCDAA5971EA84AF28E55765856
F9C68891E464FE8C339409478BC75403FC6A47BB5B01912014F895E828905AE5
40A2DBD430F2E133964E293180E51F1800FFB0B1EA9845063F46A9EF1D44B6CA
0EE200EAD49B2DB9EF98D5A321EFF3B20EF62400133B39CC6FB8997B2A362028
333CE38E851ADEA52E0791409CD126A36E01B27F60896A62B8C516573A566949
CCA18A169C3E54FF99466F9BF00BEC273A0A35AEDD337ADD06394072FC164277
62B7E1B8342DD92B778D9B930A9C69CE464D5556EA933E003756834825F4A882
228345DC3BBDF6C8709D24D648F4192FF97AA61B697507FE0753D2651C949E9B
0B7398174532822985157D55650E7842ECFE81DB6FFE385A5B46F88F13054480
BC398D69DAF57FCD4ED2FE660DC6DCCB7B5F7ABCBA1EDEB89FDA3AF4CA08C06B
59E852B475F28DED5995D10BB36F0838199DE2E51C85B3597B7F11F5D8A8341F
B68C638CD94175A3CC532E057FCB216F291100381675B20C96D22C3D18266685
5932DC90C6A3A9972A4A741ACAF026905803984CF150334D70935C5B71717C33
CB248678C48C03F6AD4C066DE8A806A9E21646FC7C6800A218AD80CA8F61E47B
559BC01330BD62349D44387512E4E16807DD627F18101AD1C3976C3B28A807D3
D3F5961AC23B4EC4F42DA633BCF6FDF0F7FE5FD691CFE9ED1F3F12ACC7457F7C
9F1ABC088CA4F91AB0110E5E6BB87ED67BCBC061749D4DABFBF0B4A1DB9FE1A8
CDEA6A3935D2C129E6D2D63B6AA9AD5225DF0C58E45665A6A2FD8AF482D01A20
D567405851F780A8672DCF3D51924F8EE8D770AAA19095501403F4D3E2A4393D
6F9CA67565A12FA227FF6427C1C2D98CFAEB9E534BC051C417A7A3557C1DCE8F
A43D70598FACE4BC756BF6E0BD91A129A7013D036CECB48CE023D805C2E79A7A
9D2D2C688CEA7C4E8B22FC0A4F13C7D87A83AAB49B16704067B6B7A5A9259B71
1BDEF7DA016F6E40ED7B9DE7499D73C70ACB64A706326DB069B456199A7DD366
6E6DB76CBAFBAE1E8114D2D887B3D19CDB3903AA84F074BFA05F08DA130DEA49
44F6861E5D4C172F9725F6A64E31D20FB3A72F4EEE376D46FC63DCD0280F624D
1E88E9D736BEEFB6AA4D4E7E7F27376A12CC41195D3C86F626E8BD547D5915B0
92846E4B4B063076532AA4B0A4F3F7D6308252EE2737F887A2E8C02EADA18350
6814B14495D037F07D3E87EA5AAE5862E94E78760FFE308BD0272DF35F2EBC11
A6A6D1606FE56804BD4C8EE635E234DEFA4E4AC045DEFE5FEECAB26B7D0C1CA4
136B72FEDB04170EEAAA3FB567DD1D4A6E2F7F0B77C4C35FF748D3D2D13DB67B
1DC7BE39316B0187671ED8BB3EB2C2A51615DC5159AADDB6133BD24B474A4CD5
B0B80CC453782017E8611A37032C30A2481682132E7BF1F15ECDEC66AFFAA0F4
0F1E6F1B5013522AE46996B57E0A2D52133014513896E340607520A346B9E649
EAB7F51A5871AD4773D0E1F162A7538A4FF3C2D262EC8830FE2C7FECF58CCB9A
D0099F3A68FCFA0EEF86FB0065FEC4041152027DA0E4F8C24169150AE3C02D7E
85CE4426AF7F694359B6E71E78DC29DC25293A7E88D01055FF62684D16672E1A
C5F5C265099D0128C06A74099007FD4CAEACEBB7444E42D689B0062DFD2B6C87
1E78DF4DAF138AEDA81CEE96F579CFDCD69CD660D08998682EBAAFA531CA9400
FD9D20B397D9915A0F17D021236E867FEBAFE77D03BFDF0F49EE18D58C2FF25E
EFD02E61E6799FCF1B4E684E4389A375755636736504FDF6D1A65B7A55CB3BC5
E0A7E7D3AEAC50FA0E0D492A65B119B6A370E17AE2ED12C80BF328DF1B035D9B
5E30A47F7AC1E3A19400D7A7FED5158A8C7EA5F68B8F0BF401F7F243D1160CB7
34ACFFF5FDDC052D0778B5D84FE9D312E0EE3E422F0DCB545209A450ABD8384A
6E16B396911CE777726780DC3B191C95C4CEDC8243B6559655445B5DC8C3A5D4
4F17A21E2EED7F72E240D035C7ACE8F94D43509EAC57FBFCC78FEFDABD0F1EC5
59AD705A6E894903FF111835E25AEAD02D3EF216E6058AA36BBE51450FDC63DC
9B6607B79F691D300C8258EFE619028D8972FD5ABC1780E26417085977CE764C
34AB177BD204A28853F959698B605A0BB141D8B6AD8BEFF41C7B523DFE7C1D87
FB8E766A6FAF36589D581B0F6B12B85111B083E1158D3D2C831EAFDEDE59F816
5468695BD2F11AE7009A1B0C3C5FCBC946233EB1B1586A4C4EBE9F5394415634
4F33206BC0DA46AB629601482095A134B94EF1A8F5D48B755663965B9E4B6A43
8D53BA806E35D44CCCC4EFB892D9430B006F2026F9345CD77092BC71F8ADD359
7B3C69DB365E114FFD28F181472840538D1181CC58ED55E57B7706FB012B3F87
0C806EC231182DA82CEA4FA164B5FEEEE15FB9D7DECFE3EFD9869786CE0E2D24
CDD90C2595EF898AED6D57416D966B3121ED7EB778C21305C6DEB1B62F3A296F
BC3A29DBA65CE300471C2CF18DCF33795C1EDC67A9CBC44D906FB43CCD3F600B
3B084B0B44AEE5F03E66CCC3B8D4AD736199DD345338BBD522FBACD37A156854
1C86925E0428739D01161119C826731D25D71528A0100D46DD0D7112F47F1162
E69394F502CCE2D73790349426335B021E12DE774C1DEAA1EDE40FFAAFA46062
81C272338A21F0123B2898FD542D3B8F52847CA797DD6541EC562DBB94ED46B9
A1BEF3911B68CCD2CD9F828A5D89D22CC1EBE6641718A412BF266CF029BDB08B
7B502FA8C9D3A268BB7A45B1D088220EB6622CB70D97A063F6FD769579C36810
1B7837886F9DD7F3E7F98A5164892DDB31E75A78524F7BF900DD3EF43E71DF3E
4E6966BB64EA7C84173F27A18957CEA201CCC072C205C40DCEBCA861BA77DDB1
B2D96A0A360F91971C877164424829F31184F34036E738F11658EDBD563E5276
0D490B4EBCF875931269F10664D654F64B59EFFA57F1754B1E8D7C043F8C00D3
DA1F502CBA51EA2EC7F219C89CFBEBA1DB971F85C35645C46533A42F06EA340A
1B9696FD2B0AC026C03886E2D36BF5DEEB5BAB387A36249E4E62549E0DCB6952
2A270EBEAC6F484241A8F6B253F4A3F27DB92D2034DC8B15731207307A897F26
B99C79BA8F660F6D5C8A3AAEA5B323D94493464A7D546DDFA5FF75E3473BF3B9
F02088878C9FE18662B02717B083176B7E843501A3C582393955A6603B749A2A
97EF4BDDD3D23D4409B5405C772D1104EFCEF412053BB6F254B493D7F9731C96
F10136DAD871D1594AE9A6A5846A2A151143ECF141B9D7C7A7350019EBD5A967
423F73D285CADA52C1AF2CFB2028892147A22973C7BC7E4A211FA801A938485F
046165E2FC6F56F2F4F351F253D1349B06A9CFED86E0E36D3CF302B023041DDB
C68C50173B00A819AA02CE30042CBBBC02DB17709ED6B327E5BF3249C12FDFC0
D16E1F7A4909B6783EA0BF15B974A9EBD635BEA9E0F81940FD0FF3DA85D96100
359E787B3097C7C6C1556120EC92EAEA4F978017B01A8E5C24352FE95E8C9328
97DB6C974C6F0BB2E1E38155ECC1D114E6CCB94D698581B208795A8A253EDA88
319C576C585A27BEF2BD9B30F9349F36F70FF00F0EE141CFC7BBC26DC273ABF5
18FE4A9923E9888222DF3632F1E7AAE764712FFD3218A62F29B26EE01920F9BC
CC83B8517E8AF8EC4E2FF0CB3A254C28848EA6889FF6ED7F2E5BBEF6DD50331A
3C779404A1DBD8416D342C14F6BA236931808E9527662B0E697674EFEC18A78C
E4E0BE2D2F95C15013315C09D9FA70507DCCE8546EC003035627DFDE7BF2AC9C
47EBD397D15A0594113DEF304FDCBD008D9FF18EC58CAED94E7044BFC1EEC5C4
B87D323C38BD25DE2325381A84DBC0C58DCC6775F7FCC1CF06BC83D5E3E6C49B
FE9442C0F325839C0D6492AA7FA5B7A23678B297A36F77D2061EC473410FF81A
2CEAEB23C2BBC016B66B365C75586DC62B30A2D5A96DBEC36A17DFC78EB9A41D
E95B541F316E3E4E5AED5CCFC3A53158C4D38FC856FB65737ECFDC05529CAD5E
9B622CE6C954078C9BF54F660D9B6F239D91AD651EF2F33EBFE6760D85FA8F59
12D4BA992E34C49908E84DC0AFE0B45C3010DBB6E544593C75B1F6CBBA392593
A278E025F8BD1E51B3B4F13A11FAC12D5FC896AE2C27C71625B100D5DCF20471
174646DAE2F4DE1FF6B74F77229ECA812253E08C9D73F774021325C2F90FAB76
73909F396BAC7B25E560B5EA6806E2A0BDCE17BE0C05FFFD3684D42C649F7060
81D29D460A6EE0CEC8E271DD3BB3FF2378DF7E8C1A7E8AF8ACD243FB38E3FCB5
0EFB08AC9FB1616BC87DB87E09660CFFED04D7015EB0C5753AE0A434E7D5966B
B79BB9B2ACACCEF48AB841E967D6F8CB4348D6E91FC350854B8D2BDF943C107B
60C94ACDB74AF3ED30CCBA2EAAA94EC73BAEB4541B198292CF171954485DFCFA
73E593B4FEB39BD15CC34F1A231EEB30661768184795F98688B249A70909AB3E
0092F529B58BC2DC9D089A974E7CBB4A0CB8BAB466196AD6150E0C1FEF7763DE
2AD4F056494B8F2271D39734E3D95D672D9A685A4C6DE802DDB12745299B1302
71F98A01C5D7FD7EB99EBA1D58759B74BA8BDBC36E2E2A953CB0993225060B29
29F8FC5402803F402D8A948BC2D93BB17042F9B4FBB83544537E18F94486843E
B2EBAB603610E8656B6456D6F71F5650384CCE056FBE2AE908CCCCE97E6D2567
04DCD212092ED266018F0D22C45D9CD3C3040B9BEDE945525EFDD0F8B70B3A27
E6CB3235476A2F98EB1E0108CE37CB1BE863864B74826B2E4BFCC219940BBD59
747FE06F6D96BF601E3228D9B29B38FE448FA3742E70069548D4BCC44D0E18C7
F4FCEDD9547902E6F2C7796C3B659DD2EA8C2B8BF659A3BCC99BB49DD618F9FF
D5185F545F1C22272DA9964753034040B8979251B04C5F34269A86D293A39341
FE6BD7AD3A52D19CC2CF2BABB70A7392BA6C58CC783810628A6554E455188BE6
9DFBB48FF02709DEFDE1B14D2C73142FDF68142C781CDA52BC890B29B2FEACE6
C2DE359905DF177EA58633FBAB73B64C434FC37FC146B05174CDE20EBF5CE61F
77B1AC40CBE4F1E722655F2A6A7BB321623B24C2DF3EAC446230D86FFF391574
DC311FACB30537B2566DF61A4D358D7D1E6C2E8ED10F5554F5FD0E99C0A4C260
2122E3DC425D726C82DBBE15ED66F3E6E8AB9EEB6B5CBD38F33F63C5A884C7EE
7138C9167D2AA4238F1FE3F9A0EC9660ED41976E560CE394B0404BCB63B70B2A
A98AEEF6DF830516EA6F6BF85550985F336A24751A4D69F12BB7DABBECA62242
114C5F6B43506813CFB5E5D2FCAE39FFE0BCA3DBCEF6005782914199213041CE
CFDD1B07230664733E16D87C9E674B22F1A78446D5C26E55EACD7F7CBAD32FA2
631790333884161155B3A6F984619E2604DBEB02DA77ED0C6930ADD3EEE60681
0A155DDBA8803EAEDA4834F9CFB80FDB2C9E69C82BB6855FD079DC4066674B79
1967B71F374F8F95572FE791EB458B23169F5B19C0019118CEF547CFC03EEA30
A9AF476B215EE941CDAC46024B0856ABFFAAE6C009EBC1839EFB4A1E8F396020
DADCF3C1AD1EEC10911A90CE609ADC7C900E240ED368C2C26B114799B48FC081
992A491651531A9604CDBA226F6DB982D272EE97D41225DDBC3E44CA86CC28F2
095EF99D45B7806C269D2DAE85D2EFCFA0DC7BAC7E124353ECED9898608075AB
B16E9D4C71C45E728F7EB95887A406D9D2E3C5488F6833AC7693384B8F3FEEDD
E4CF503FF2541E050C16063112654E62BD796A0C7C47F304D331322751662D4B
92BE4166733C77B699B640649BB517D2CF66059582F041A1499F189D166BD4D9
5CD21447BF18A42B74DDA7FE9E8DD656C962EE4DD465944BDBF6E7AFDBB2A3F8
E800344A26C64D11A774C60421DB4D063CD9765653EB51FF01581DAFFCA9BB3F
6AA5A0AE5752EC8F15402EBC572B6BCBC5C9D75CE712271C47266A19DE1CD054
2876F78B042A7744663457479FF2DC7E3D8730ED85C8E81A8C53AC2C5BBA705A
2999967FBEE2D99F767E213C859FF7C055E99D2824E6D7AED3F65E16C37ACEED
CE72979B0CE01E3156A30F1BA2E908A62994494B02269CB4672E989AFAB1B0F6
0AD49607ACB111BB6260E8DC58A7B07EF5E0AB4AA9171387F5C3CB10D365C8CB
AB1E867167BDACACCEABFC8580666A56B754401925BA4F203F30A8A23E314B1E
F25E61EA65394C28F60BF5202757742478D818529355D0EBCBC485EA99F40272
DEA47618A2D4754DAC6C96249726FEAE6D8E3E29407484D34219456CF073FADE
DBF48966E9845E14D20FA9ECCEE2A95928B009427BDD6C392B8451F264836BFA
D7C574FFBE6738F6196A09EA3094EA56F0AF949F68406D75BF5BC54937E44465
D734986710E43ACCC65485A954053120E5773F1AC3ED8AA484A1B3D340C301B7
7318FE5CFB83D9AE84720C7385DB44E357152436D3DD7A5A15C28D422A39F074
91AB57F1548056DE8414D5EC44377E4FFDBA109CE929F8DD5421AD5F74DC7A39
CC82180FCEFF1FE92C87DD35DF884215CD4B0A41E438EB3238452E72393F3636
62A211B0F0D340A6B6D2921B83FFE4DCAD72C67371C061C59AA2BA5A1AD11A6F
9286BDA3628023D935942368068C72E1CAB4C0B06C12D0833B2A9FBE91AF31D9
15A6E1C960C04173AB964CB9518A6E0F09515F535D7EB464A02B37D9C72D5A7B
E57336F3CBDB49C9C03DCE74AA4D8F038D746BC0441DEFF61262D225E323E9D8
B27BF6929F3567B36C0CE8202A1F2222ED4DBEA4A151662F68D6FDC5F4137B4F
18F21253454BF79D02B78DD7138C3B79DB903749B98204555F3115DAF0F763B4
9B9D0528851CC26C33D4C84C9FDC4D6BB42D2812BC628552613C39A93B6DCC76
455D1C101A93CC30F991F69476EE883BEAEC85155CFDB2EE6A0BD9DA9837DF0C
04EBBBCE1B52EEC3E0CD92348D68B1E9E64B5C4B342917F912B932A78D5854B4
8FE4FDC85049FC37146585FA422DE5028C5A7907EB2F6B6DA4C295F1570129DA
55E71F8D22587C23314A73F58E4C9C8C41AE97D010A721C8CCD193962597CDC6
19DF507CE8A48FBD98DB3BF2BFE48A95F9B562A32FA77154FC5172A7FFBD648C
AA97304C63B592355D7D3E6408B8EE7DDD0EE5E510399DDB96AA3AFC9E0B3413
8AE68FC912920BC1ADA46E34F1D3585DF17CF2E2E6884A6691D7238FEFFBFEC6
620885E26DB11C6C917912BFF0D306C70A4B4686E4179261EF163B5F4F6FA061
D811A58E41E6D6EEAB509DE921FA847B18713D125915370B661AEEF4ED076343
EDE201A6EC9286471401F20401DBAD5A6600CA6067CFD64F249C8AFC205EE813
3887CFF4D559CB318AC92ED4D523744408EEC2144054F2B73C8A4051DC53E21C
FEFB87959329158BE8CCFBEEEA0720666D83D134C1A747E3E670B86112F1859F
D9FE8E69AB5A1337113E3FD3F8FF794284A3B5905DC6300A75031055C03E0BCF
0DD07005C944895B13E372F0729373350ADE10B79A49D6E1D257D898C4A1FBAC
01C35D24C4936EEA75AD5615296ADFC66BF0F7628D4897C8CA2453643E625021
9445573AD1597FAF032168F9EBCE2906C8338840758F4EDCB860AE77628AED08
53A7775BD28DFBD5A17C1EFD68BFB9085D6D2625A8BC997DFBCAF3B63E1099F1
ED1EFBB07CF5D1C40ED619CA78368DBF1C6AACAB086BF405AFA853D2C3A4734C
80AED05D1B48EFE7B1434E2CC0CCFF0191CCABECB2777E3A2A384CFD2A6110B6
B9E1B4C3EEA0C86116FD98C2DAC4ED5B71F12D66D17F8D9EDB97DA65FB3A8385
FA8DC4618DEFE8CFEC868F643EFB9E0D0E79119A1A86CE459FC8D40C83020913
EF39150A9E2F4F81EB25284EDBE150017C08033FC02186D7CFCDBD480F6D3E8E
7DBF4EBC30AD754468CFA7FA76A69ED8B85319EA7F3BC59CF48E179C45021575
A7C3151B039A1CB89130AC47DA68CF64ABF4CA19D55505AAAB8B55DF4A7DCC56
235FC2CC20E86E8CCFC4DD45424BE03D7CA3CDD269C1362606F2A9B66223543A
089E925F3B40EC406AE0D83414C36705C6C666243C03F84F9A468DB717A4CD45
AF27A74BCB8DBA243C54521C8B9CDA26E933FE2A39E5AE527E6D6E43C46A7BB0
1059760035CFBA0FDC2B5EDA9A00E4428B86AC16519BD9A3183A81203E77C42C
F7F9F557005500E3F916B1C6655AA31860BC8539C9478B9B99887109CF8A70DD
39E8C94AC53B817F9B9907E1E27230845F32341023B399EA4415794925CAFA7F
F7C83EA9BEFA984CAAAB4399B52D5FFD72573AE6B4A7CD689B5DC558D6ABDCF6
0BF4F8FD7A451129FE0F8B3435F9A11C9B9D504DA80EA135005F16765D40C8A5
E11A539F5576DA96D8ADE4DBBDDCD8B635D2022B76A71C4ADD3DF44A43976882
AFA832F8D8C7B64F9C8E1236523C28D4EFB59125A3F904254F717A8152C65579
7E87B39B5E97640375652666D2082F77FC603C19191179A50ABCC65DA0C57CDC
BA1DD8FE69B02A8F959B3A1DEE2B04BF0F7D6D0B9103506954FEE5B540045627
3718A86DDAF4A59CE47F526FD8D154570D2BE52241C669FDA07F635DDFB01B0D
891118DF5ADE684D24730401D6C08A3F7DE762D4DB82E36051AD24BBDDFDF437
E3AC7E854D902460B2243A2F134BB4C51CB59A3C73198BD1565A6B2B58B2BA7A
63DC6864A6F3EDDCDEDF7928D4AA59505F28C1D0B1F624089474E0045BFBF771
D3DB91A88D858B5F794F5BFDA99E1C9E2B90081C5E2E20484F939E90F46FE28C
6A7004388FCAFC7185D96A20A9A3BD9DD90A909B1FC278C8BF7539AC934CC3F2
A49104FBC9DD34A821372C3956DE7080D374834D9BAFBC46E6CEEAB32A49A818
71BE772D1FB5FD197E6BC6959432A870D69B327FAC7292AA64767303C2F416B6
025E366EAEB4122EA6986B935D7370E759BC87AE55F163387138B31F07950CA7
29AA649B43571C632C63E23B3D27A27DC77A56808F8F67EDB7A86FE3F49C788F
DD02E291432DB4CFC3B5DF39A66DA7F9209318A11E6AC1DC7A38110357D39E52
B1319D94B20FD58289A551B350DD192F814BBF2FFA5446814C3F07A0605F500F
58F72684DAE59B979121577791F37287A8B5B604957EFC60F5D72DC6AAD312F5
EE809EC1EBB58F0171B7C52F4BAAD20451DA01688A3D7E654F8040DCBF9E47D9
BC5AD47EF3B7DDEF8A4772DC6BEBBCDBD78EFEE19DFC96738F19491A73DD802C
49BB19C74A83A077FE775322F66AC803F2D24C636C53997D4C4836D2A11146C2
1AD52F770753BB3D2DD7CC67C6D7BB3B7BE453EC4820DF03FDDD0BF8251B69D5
5042E0087BBDBA3B6FF5F96A759608A8474B277C31F7EF7A6A3FC022F0BD500D
D1B202A51C9B38EA9C5732ED90E1D41F930540B1B8EA38B230F01CA906BF4DDB
E251349F1A904B9E0E71EA8BF48C671D52D773DBD1DEDEA1545C6D2E909AED96
B7F60FC2F4B1CCF74091BAEBB9A8F8B80AF9B801CC075638513B13FB96FB61A0
060DB4437C6C7150070EEA42CEBCCF9FB5F1510C0E6F77BF86598ECEAD9AC2FD
1FD00CCD21E93F94615215D378BCB63FD93EF1A9D1494499A0F06800A0422DB7
1A2A210CD53849216100DE7CA7B5DA44873AFB19E201F9383E54D98CBF1F0A51
FD9945844292DE69F87B09C081C5B2792B17ADE35FC899A4989314134D041D1E
EC7B37237709B6ACD00EBB6F38DEAF0F399C87280E1FB6A773F4CEE1724F6E99
BC3D373AEDC7E443E3207208667EA0E5F80D83FB966282033C379481E94EEC88
9F627A0268132EC800295F5E481935F7502DD691789CAC74356D3998CCF231EC
69B4993B5381082E7CB515C315CFC9CEF11681BE23A3E91900C7B73CF8EC3078
2ABB9F2064B9D460FA01DD4EBBD416E57E476E1E94A2A4D3CDA15BCD9950376D
5030DCCCD14D3BF258DAB03F21427956A6D63C25C3335320A70C7FD1046129C9
6748E6A51700D93D4B60EDBD500D411CDA75A0323C6D0844E80E6ED1D1BC715C
5E432E54D04D0275657571543B8C2BF49FE4C15162895E589491AD6D624E0E6D
D9D75944FB5A33F4A6CAAA53E1EE726CD1CC04CD13686B7B8859D8E863CD027C
DF3427F3A1FF0908277FAA8E87E00F3D64D3D3A47C9E5B4BD3AFE25CE260BA51
69650A49C36E12
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /numbersign put
dup 50 /two put
dup 65 /A put
dup 69 /E put
dup 75 /K put
dup 77 /M put
dup 81 /Q put
dup 97 /a put
dup 101 /e put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CEBE01C1B982
4B1CF704E817814FF9C921A7DF98FEC4EE23D26FFBCF1004A858030D472889EF
75AB4A5233FF85E1E62CC4406A2BE7F5A100E122C37BF9FD097DF67C32F65184
1EFEBFF683657F6481776983309CE93111D8D775D23D56D74735801F0EBB1421
7B9D22171EDA7CF3EDBDCD7B69062F8AEDDA9DDB33F3A68214643E87C86CD7D4
4E5B0770ED8D06B592E307492B17BCC61540E842FFA408254273D752148A74B0
563CFFC2136FF23183986A3437BAECCBC072A763C31BF7E0C55598E34AB81211
6AAEFF8C982ACA51DDC2E7D2807ECCC2115B439CB89768748890E273D2838B1D
80BC1731A5D6F8CCA00851BB031F5AF58AAEF17FCB7D2228F4B8B27AA31943FC
9E68489F9741E7CB9C8EFF1452DADC3D0E8DD454A58EC4863E0A448CA25084CA
6DF595B09F014A17E4116FEAC4C811D48D18E0B5AF09B0D2D418B1BE65001FA2
59E4D4658F2414946D7B0E450A3242A9A9C153D2828DB4A7B779332C1B4F67F1
9FC41DE6B8A2F6353A075236698978518475ECC7F1F72567FC9C1051FB4E1A27
889CC4BB7B3722CAB0879848BA857A866A9C9B6E5BB7B37BBBA0CC791EA256C4
9FDF73D663FA60BD739FF1F8214182D53C4992605F8A1269B26E1B7E6106EF7C
64DC98703D97B033EA42F5322C741B4BC3F75FAE4F76DFDD7289952463D81C7B
BED11613EDB79AB509BFE95A2CDF5BD4719FEFA287970B624B8EC9BF2E852987
DF63424B47D35C5F4FC4EE85E518E9F9BEBB1A5B9457D17D46B22B89FEB7B5FC
A20AE13F3D7F00CA735D4404FF273C85AA5B61FA26D34795BF30205C9CE381C3
620A37C5DEDFE80BBF5078EBFF505EB8591C7A9AA5043813364A805204D0A7AA
B5226581E86D45E9E4FE4A89E93CE096E6BA91C1167A1D689D92775C3141DD17
EECE68CEB97D0FE206B4DB8B4F1A921C6C239FED9104005B52D74DD5DAF6CCC7
6FD849E7C260D9E9E6925FB11346A28456335F493475D831784B9CEC5ECB4ADC
C23E4DE4E1C1D48129B5FE6D94C6106EFAE40AE28EDB146BC7B2C2FED4F30DD8
0C3240DB73A37DC55CAEEA873227CFB33D7C4D0189C1C2C81189165F2433F2A2
C1113EBB32EE4F0CB6CEF2AB5F670C1B5661F63E4717148613161C4354EDA6EA
3269B2690385EB054C87977F44DCADC5E8D55E8516C8D0C98602C7747CCD8E37
1D48F660A2A25350A1EDCDA3065EE821C96972424D794D832C5FF7B46997F08D
CE6F1AC97A0DC7F24A24EF9D9292851C78D3C3EED6F549BC8C313FA9B91979DD
9214C4F4ADC0FC7A793E051C1BA572ACA1E926AA1348DC23B26A2B492F633894
9379E40F350D1FD84E132C38FB39BE561D2E0C1881960439B754BEA450DBF68D
03DFFA2A679111B6B10B7A979B8E6156525BF8174870B3BCC7B3608AF4FA853D
5DC290AA7E04515CAC5D267B0C6103617004B5AFA370A9F12C48A357E0C70BA3
810BD4057D4822FEA39CE4B16B8F1A81FF60AB145ADA3C0D9510D39B3B382B00
6F504E74A3DDB659F4F50308973A404473E21297DFF290114F9A08BF80A39B50
7E059543F9C28DE749FFE69D70F327BC23BD1E0CF428CC048426DEDBE4A2A53B
CC1894F3A909F84BC51366417B0294F3417F0AE4CFBCBB2F58F03B076B251479
EF5CBE6F9A95BC0DDA3F3F315D7383A3FEE6DA6F6E8110431F0421ED0E2C0555
EF28CB3B8AE63F7202A098596927FD1CF9E6D526C81A3C11F7BE6D1430E2C03A
D46F1DD1C86B97AAA29AACD1B67F9FAA60D63E9E2C0E4CF2F1536F521FF1C3F4
28AA88B540EAA2ACD3909D399E9FEAC7AF543AAAE8A64F38C203E1595A19167A
A96E38CDA975558A0D45FD2D9FD00783C055A5FFD8EC5E6F32B56B9FCB9B5D5E
57D2FC83FD497BEDBB29739ED303DC8C03DC6111F33C98C8675B8285079E9B19
954F9F13D88AB85D666B56D9D6611C2A2A7F192F3BF71A470DF6AFAE4FE762A3
A2B9B0F29B545F99DE426319D72091FDA93071963EA7E8E4025AF0381BAF7473
24F0B528596FA635A5E2297FEDE0B7B7FCC5D64C3DDB53F9467C253988B30F5A
07BF840E780935D6C425CC46AC4C4DB7894702378560657014AC5DE4CA31E5A2
EB2BA1D991E080B45F3B09BE867902B60611375D5E00BB4E916BEDF8715E8B38
D80DFA535BB86C1015EFEBD6C5EBAE71919113742C7E80BC7D08AA0419F29A1A
796F35B326F7A31F22FC2FCA28F954FBC64F25ABDFB6BAAC56A2D00387553C31
0CB90B68916EEFB95744A6F62A99A528D71921B5597DF81AE52C7D0E07B6283F
7A3C81561079E375EB9B0287C8825A2DE9C6832082333B1A906DF0B89142C529
C7569502E2700E06135F466DB6C74810C385361B883E20CD23303DBDBB2100A8
0F064B95F37CEC3A5DA231AD698CFD94BB213F64B7EDE2FC1BC2084E69955EE3
98D948B4D41F8DD5DFC245AB536EFB7CF13ADE79F543F663359D6FC97749C029
B1FF6098C98CDCAA9BC2DBA6851ACE8A86A6CDC4835B53A8E06DFD7B1EF6AF1B
6F549956FC346A90F39DB4FBFA34D9AE4C4298FD4C8253E11907B1167F41EF8C
EE3FD7DE735F81F130B54B5B85D391946875A175C9B77CFE5CC86012E43A295A
D2E1778E6A38F7902EB948E76E6AD581E43861B32FA002661CE648DAD1528E69
2A4E33CA08B2947018C005F236FFAF78A1F1AE6B97C2F5C59E82CC6FF7D3A2B4
E0114D89115438707C58E360D327843F333D63FC31C24FA3F8E417C5C1414856
CD579654DB291970EB5C6B0263E239389EFD7C5D9CC5345F90D379D026D00B39
259E0C53A9ADEB13AE36A2C072B49EB37BEEEB146D7D8F45C84255A0423A74B8
98E85EC53A061F0681BDC0B287670A21126D65F7436AE98D8BA6EB374EC10F11
532498202127AF2DCAD3311EFAF3C382503C966C087E0FA852139132F7FF096E
3A23E06E792D48769DB209D2222A944BAADDA0303165CDE46B97A6B1B26A87DF
28BC6ED037138B38C41DD4F8F70B3C55D23ECEA5BAF36B7E2B243CC6BFCB9424
A851DABCBFBE58D48326C779C549F6D8C6FA7451C67D0E2A6370152A078A4F3F
B5219B24E3014B1D539C6E1C7F6A1ECE561A84D5CC26166C3ADAAE726C8F790C
6FD6C74B8AC609B2B3E8A5A284F90EE7CB4C24CFE20DA1A064B7E95958FFF854
9A89E637225613EB5D00645985C209C8AEDE44A2D17C5EB7F21626144647CCA3
1DE550344FB3A64E6BADA98C3DD84107706D30994231FBDBCA66ACF6925D3280
DE72931957F366A16BE136618EAF3B4351EC17603B519A2BFF3E77F6AB3165B4
C7056D56E1A2F373D5AB77D6CE8C029C47941EBC7C445696BE17206A17576A23
97485471889B3A73B6C561CF05C62A2A854E6ACE83428A8D6556B800601875AD
0F83D3F3DB7EC7DF161342000A802860B566B001064BED5AB1561CC8F550A245
A652F3453A3FCA8E12F61153E9C0CF8E6B765F3ADB3381AAECA4E8F4BAB756AB
5E51CF42AF0EDE10670A9176FB71F3753DD1227F107E95408E0072EAEEC182E8
1893EF2F7172C9C039D124F715D5073686A79DF01F32A3155CC6B05D7D2C539E
AAE3A97ABFF2B80655EF6F85557575A9424943D4CEFFB2C6DF717139D331A498
0820D6492F904B248E03F39914E5F4CCDA86F0F6029157B52731C39852F0571F
F9FE721807FEBD5F4CDFF8AFBAB561C8F2626F0C526092E7A8B241DBF5FBE633
671B6C6D55E90260AAA385EBD384893BB7DB16742015F55BDEA41920C0A82BCD
C3CE6069B35476EC23C1E2F16C949B2F9558BF19DF3660BDD41C16E4DE560100
6FD311EB024546BEC4306B97F58F2611B0B352D5883A63A5A978A39C31F7CD2D
BCBF0D99B74730D51210F4688E739AAF02FDFB9309DF8F54D72D7601C96F09D3
86F98E8A6252D430EC627DBE1C966A5BC90119083947024AD116C528A5EA8BCC
D84DD48A42B6290E5783B65F334E743CA13F8C1D02BCE78F693767D32EF471AD
B8E0D22DC911BE94E1A0602FF6A1CFF4287D1C40A3888CBDDAAAC4116D78568A
8AF3604D77F219126A5E1C2379BA583AD80C3D196A88B52B0C0FE3F45D1B3692
421CDAC7530250D0C047CBC757C8A9C6CD2AE0A76199593A1E7F690D85EFE4D8
2905A0091C9E719B7F6D40EEEBCD097AD44561634CAE6F63645F9DCDB652C570
DE0C293790BA4A6BA4956AACBA9F7F0E8C0E088BDBEAF9E05F6B5A2DBB444929
26952E2488D3505207A29E4537483FDC6638CD557056F97E18CAD540B1585540
3310971B6A4E7160AF94ADDFEB25253ECE293AE88100ADD1383C54D13051CC91
529154AE517A453B296C388C0FB86C00BB91090783D3BA041BD3A6BF40E9F791
FC3D035094F9FCBCBD2223C51E913668E83C7C71C3AF88C666C80ABB88C71026
CBDD8A75AF931388D23F0D32398FCE4199A2407D42CBB32B4C13ECA61AE20D0B
E57187BF888E610717552AD6ABCC7CEF1329DE652947042D55CCBE303F7ACACD
E085F949F9CA0B1644DF44C8EA1917FE01BEFC01623872EB324449F8F67C09F8
08DA34C02FC83A49A85ED2932616F93A9D0A4630F4CBEB8DBFE488D213F280AC
F8D4A0F5DFBE4EE1E9C0551CF31A5697C40C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (2008-1bgi.dvi)
@start /Fa 135[47 21[36 35[65 1[65 1[23 58[{}5 83.022
/CMMI10 rf /Fb 254[23 65{}2 83.022 /CMSY10 rf /Fc 137[38
1[28 34 35 2[42 47 1[21 2[25 42 38 25 38 42 38 1[42 50[25
30 32[47 12[{}18 83.022 /CMTI10 rf /Fd 131[83 1[37 44
44 60 44 46 32 33 33 44 46 42 46 69 23 44 25 23 46 42
25 37 46 37 46 42 4[42 2[62 62 85 62 1[60 46 2[57 65
62 1[52 2[30 1[65 54 57 1[60 59 62 1[39 1[65 1[23 23
1[42 1[42 42 42 42 42 42 42 1[23 28 23 65 42 32 32 23
2[42 1[42 19[69 1[46 48 11[{}70 83.022 /CMR10 rf /Fe
134[50 50 69 50 53 37 38 39 1[53 48 53 80 27 50 1[27
53 48 29 44 53 42 53 46 9[99 2[66 3[65 1[75 91 6[60 63
73 11[48 48 1[48 48 1[48 1[48 48 27 1[27 2[37 37 6[29
20[53 12[{}44 83.022 /CMBX10 rf /Ff 134[62 62 85 3[46
46 3[65 98 7[52 3[59 15[91 3[107 1[91 5[80 3[88 14[59
14[98 35[{}16 119.552 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 988 523 a Ff(Exam)38 b(#2)116
b(QM)39 b(Answ)m(er)f(Key)291 758 y Fe(\(5)33 b(p)s(oin)m(ts\))f(Name)h
(y)m(our)h(do)s(cumen)m(t)f(lastname.\014rstname,)f(and)i(sa)m(v)m(e)g
(often!)291 858 y(Please)40 b(write)g(y)m(our)h(answ)m(ers)g(in)f
(something)f(lik)m(e)h(Microsoft)g(W)-8 b(ord)41 b(\(2004)291
958 y(compatible,)30 b(not)i(2007/2008\))d(and)k(not)e(in)h(Excel)f(or)
h(PDF.)g(Thanks!)p 0 TeXcolorgray 392 1114 a Fd(1.)p
0 TeXcolorgray 0 TeXcolorgray 76 w(\(a\))p 0 TeXcolorgray
42 w(Bac)n(kw)n(ard)25 b(induction)j(predicts)f(an)h(outcome)f(of)g
(\(8,)h(8\).)p 0 TeXcolorgray 529 1237 a(\(b\))p 0 TeXcolorgray
42 w(No;)f(a)g(P)n(areto)f(impro)n(v)n(emen)n(t)g(is)i(\(10,)f(10\).)p
0 TeXcolorgray 392 1392 a(2.)p 0 TeXcolorgray 0 TeXcolorgray
76 w(\(a\))p 0 TeXcolorgray 42 w(A)33 b(P)n(areto)f(e\016cien)n(t)h
(allo)r(cation)f(of)h(resources)e(ma)n(y)i(not)g(b)r(e)h(go)r(o)r(d)e
(b)r(ecause)681 1492 y(of)26 b(equit)n(y)h(concerns)e(or)h(other)g
(considerations.)35 b(F)-7 b(or)26 b(example,)g(it)h(w)n(ould)g(b)r(e)
681 1591 y(P)n(areto)k(e\016cien)n(t)j(for)f(Bill)h(Gates)f(to)g(o)n
(wn)g(ev)n(erything)f(\(or)h(for)g(one)g(kid)h(to)681
1691 y(get)22 b(the)h(whole)f(cak)n(e\),)h(but)g(w)n(e)f(migh)n(t)g
(not)h(\014nd)g(these)f(to)g(b)r(e)h(v)n(ery)f(app)r(ealing)681
1791 y(resource)k(allo)r(cations.)p 0 TeXcolorgray 529
1913 a(\(b\))p 0 TeXcolorgray 42 w(A)34 b(P)n(areto)d(ine\016cien)n(t)j
(allo)r(cation)e(is)i(in)f(some)g(meaningful)h(sense)f(bad)g(b)r(e-)681
2013 y(cause)c(it's)i(p)r(ossible)f(to)g(mak)n(e)f(someone)h(b)r(etter)
g(o\013)h(without)f(making)g(an)n(y-)681 2112 y(b)r(o)r(dy)e(else)f(w)n
(orse)f(o\013,)i(so)f(wh)n(y)g(not)g(do)h(it?)p 0 TeXcolorgray
392 2268 a(3.)p 0 TeXcolorgray 41 w(The)36 b(claim)g(that)g(an)n(y)g(P)
n(areto)e(e\016cien)n(t)i(allo)r(cation)f(is)h(a)f(P)n(areto)f(impro)n
(v)n(emen)n(t)498 2368 y(o)n(v)n(er)25 b(an)n(y)h(P)n(areto)f
(ine\016cien)n(t)i(allo)r(cation)f(is)g(not)h(true.)37
b(F)-7 b(or)26 b(example,)g(giving)g(one)498 2467 y(c)n(hild)h(the)h
(whole)f(cak)n(e)f(is)h(a)g(P)n(areto)e(e\016cien)n(t)j(allo)r(cation,)
e(and)h(giving)f(eac)n(h)h(c)n(hild)498 2567 y(one-third)36
b(of)g(the)h(cak)n(e)e(and)h(thro)n(wing)g(the)g(remaining)g(third)g(a)
n(w)n(a)n(y)f(is)h(P)n(areto)498 2666 y(ine\016cien)n(t,)28
b(but)g(the)g(former)f(is)g(not)h(a)f(P)n(areto)f(impro)n(v)n(emen)n(t)
g(o)n(v)n(er)g(the)i(latter.)p 0 TeXcolorgray 392 2822
a(4.)p 0 TeXcolorgray 41 w(Consider)e(a)h(division)g(problem)f(suc)n(h)
h(as)g(the)g(division)g(of)g(cak)n(e)f(or)g(the)i(allo)r(cation)498
2922 y(of)g(\014shing)f(quotas.)p 0 TeXcolorgray 533
3089 a(\(a\))p 0 TeXcolorgray 42 w(When)44 b(p)r(eople)g(trade)f(they)h
(bring)f(ab)r(out)g(P)n(areto)f(impro)n(v)n(emen)n(ts|wh)n(y)681
3188 y(w)n(ould)35 b(an)n(y)g(individual)h(engage)e(in)i(a)f(trade)g
(unless)h(it)g(made)f(him)i(or)d(her)681 3288 y(b)r(etter)f(o\013)6
b(?)52 b(P)n(areto)31 b(impro)n(v)n(emen)n(ts)g(are)g(a)h(go)r(o)r(d)g
(thing)h(in)g(and)f(of)h(them-)681 3388 y(selv)n(es,)25
b(and)g(if)i(y)n(ou)e(get)g(enough)g(of)h(them)g(then)g(y)n(ou)f(end)h
(up)g(with)h(a)e(P)n(areto)681 3487 y(e\016cien)n(t)j(allo)r(cation)e
(of)i(resources.)p 0 TeXcolorgray 529 3610 a(\(b\))p
0 TeXcolorgray 0 TeXcolorgray 109 w(i.)p 0 TeXcolorgray
42 w(No.)37 b(There)27 b(are)f(m)n(ultiple)j(P)n(areto)c(e\016cien)n(t)
j(allo)r(cations.)p 0 TeXcolorgray 725 3721 a(ii.)p 0
TeXcolorgray 42 w(Initial)g(allo)r(cations)f(are)g(a)g(matter)h(of)g
(equit)n(y;)g(economists)f(tend)h(to)g(fo-)836 3820 y(cus)i(on)f
(e\016ciency)-7 b(.)43 b(As)30 b(long)f(as)g(there)h(are)e(opp)r
(ortunities)i(to)g(trade,)f(a)836 3920 y(P)n(areto)d(e\016cien)n(t)i
(outcome)g(will)g(result)g Fc(r)l(e)l(gar)l(d)t(less)k(of)f(the)f
(initial)i(al)t(lo-)836 4019 y(c)l(ation.)p 0 TeXcolorgray
392 4186 a Fd(5.)p 0 TeXcolorgray 0 TeXcolorgray 76 w(\(a\))p
0 TeXcolorgray 42 w(A)h(go)r(o)r(d)f(prediction)h(is)g(that)g(ev)n
(eryb)r(o)r(dy)e(w)n(ould)i(c)n(ho)r(ose)f(to)g(not)h(purc)n(hase)681
4286 y(a)j(catalytic)g(con)n(v)n(erter.)61 b(F)-7 b(or)36
b(an)n(y)g(giv)n(en)g(driv)n(er,)h(purc)n(hasing)e(the)i(device)681
4386 y(w)n(ould)26 b(cost)g($100;)f(doing)h(without)h(it)f(w)n(ould)g
(imp)r(ose)h(health)f(costs)g Fc(on)j(that)681 4485 y(driver)38
b Fd(of)27 b(only)g($.001.)p 0 TeXcolorgray 529 4608
a(\(b\))p 0 TeXcolorgray 42 w(This)39 b(outcome)h(is)f(not)h(P)n(areto)
d(e\016cien)n(t.)73 b(With)41 b(eac)n(h)e(residen)n(t)g(b)r(earing)681
4707 y(health)26 b(costs)f(of)i($.001)d(for)i(eac)n(h)f(of)h(the)h
(500,000)c(cars)i(in)h(X-ville,)h(the)f(total)681 4807
y(health)31 b(cost)g(for)g(eac)n(h)f(residen)n(t)h(is)g($500.)46
b(A)32 b(P)n(areto)d(impro)n(v)n(emen)n(t)h(w)n(ould)681
4907 y(b)r(e)j(for)f(ev)n(ery)n(one)f(to)h(buy)h(the)g(catalytic)f(con)
n(v)n(erters,)g(in)h(whic)n(h)g(case)f(eac)n(h)681 5006
y(residen)n(t)27 b(w)n(ould)g(only)g(b)r(ear)g($100)f(in)i(costs.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 986 523 a Fd(\(c\))p 0 TeXcolorgray
42 w(The)38 b(cen)n(tral)e(di\016cult)n(y)i(is)f Fc(not)45
b Fd(that)38 b(y)n(ou)f(don't)h(kno)n(w)e(what)i(others)e(are)1129
623 y(going)j(to)h(do;)47 b(y)n(ou)39 b(ha)n(v)n(e)h(a)g(dominan)n(t)g
(strategy)-7 b(,)42 b(so)e(the)g(other)g(pla)n(y)n(ers')1129
722 y(strategies)26 b(are)h(irrelev)-5 b(an)n(t)26 b(for)h(determining)
h(y)n(our)e(optimal)i(strategy)-7 b(.)p 0 TeXcolorgray
840 888 a(6.)p 0 TeXcolorgray 41 w(It)20 b(just)g(so)f(happ)r(ens)g
(that)h(eBa)n(y)e(is)h(curren)n(tly)f(running)h(an)g(auction)g(for)g(a)
g(collection)946 988 y(of)34 b Fc(al)t(l)h(\014ve)40
b Fd(*NSYNC)33 b(b)r(obblehead)g(dolls.)53 b(Imagine)33
b(that)g(y)n(our)f(v)-5 b(alue)33 b(for)g(suc)n(h)946
1088 y(a)f(collection)g(is)g($20,)g(meaning)g(that)g(y)n(ou)g(are)f
(indi\013eren)n(t)i(b)r(et)n(w)n(een)f(ha)n(ving)f(the)946
1187 y(dolls)d(and)f(ha)n(ving)g($20.)p 0 TeXcolorgray
982 1370 a(\(a\))p 0 TeXcolorgray 41 w(Y)-7 b(ou)31 b(should)g(bid)g
(less)f(than)h(y)n(our)e(true)i(v)-5 b(alue.)46 b(Otherwise)30
b(y)n(our)g(exp)r(ected)1129 1469 y(v)-5 b(alue)25 b(from)g(the)g
(auction)g(will)g(nev)n(er)g(b)r(e)g(more)f(than)i(zero)e(\(and)h(will)
g(b)r(e)h(less)1129 1569 y(than)i(zero)e(if)i(y)n(ou)f(bid)h(more)f
(than)h(y)n(our)e(true)i(v)-5 b(alue\):)1534 1752 y(EV)23
b(=)f(Prob\(Win\))c Fb(\001)h Fd(\(20)f Fb(\000)g Fa(b)p
Fd(\))g(+)g(Prob\(Lose\))f Fb(\001)h Fd(\(0\))p Fa(:)p
0 TeXcolorgray 977 2067 a Fd(\(b\))p 0 TeXcolorgray 42
w(If)37 b(the)f(highest)g(bid)g(excluding)g(y)n(our)f(o)n(wn)h(bid)g
(is)g Fa(x)i(>)e Fd($20,)h(y)n(ou)f(cannot)1129 2167
y(do)31 b(b)r(etter)h(than)f(bid)h($20)e(\(and)h(lose)g(the)g
(auction\);)i(the)f(only)f(w)n(a)n(y)f(to)h(win)1129
2267 y(the)38 b(auction)f(is)g(to)h(bid)g(more)e(than)i
Fa(x)p Fd(,)i(but)e(if)g(y)n(ou)f(do)g(that)h(then)g(y)n(ou'll)1129
2366 y(end)30 b(up)f(pa)n(ying)g Fa(x)p Fd(,)h(whic)n(h)f(is)h(more)e
(than)i(y)n(our)e(true)h(v)-5 b(alue.)42 b(On)29 b(the)h(other)1129
2466 y(hand,)h(if)g(the)g(highest)g(bid)f(excluding)h(y)n(our)e(o)n(wn)
h(is)g Fa(x)f(<)e Fd($20,)j(y)n(ou)g(cannot)1129 2565
y(do)39 b(b)r(etter)g(than)g(bid)g($20)e(\(and)i(win)g(the)g(auction,)i
(pa)n(ying)d($)p Fa(x)p Fd(\);)45 b(raising)1129 2665
y(y)n(our)28 b(bid)i(cannot)f(help)h(y)n(ou,)f(and)h(lo)n(w)n(ering)d
(y)n(our)h(bid)i(do)r(esn't)g(reduce)f(the)1129 2765
y(amoun)n(t)h(y)n(ou'll)f(pa)n(y)-7 b(,)31 b(but)f(do)r(es)g(increase)f
(y)n(our)g(risk)h(of)g(losing)f(the)i(auction)1129 2864
y(when)d(y)n(ou)f(w)n(ould)g(ha)n(v)n(e)f(lik)n(ed)i(to)f(ha)n(v)n(e)f
(w)n(on)h(it.)p 0 TeXcolorgray 986 2997 a(\(c\))p 0 TeXcolorgray
42 w(If)k(a)f(pla)n(y)n(er)f(has)g(a)h(dominan)n(t)g(strategy)-7
b(,)30 b(they)h(alw)n(a)n(ys)d(get)i(their)h(b)r(est)g(out-)1129
3097 y(come)g(b)n(y)g(pla)n(ying)g(that)h(strategy)-7
b(,)31 b(regardless)e(of)j(what)f(the)h(other)f(pla)n(y)n(ers)1129
3196 y(do.)36 b(Bidding)26 b(y)n(our)e(true)i(v)-5 b(alue)25
b(is)h(a)f(dominan)n(t)g(strategy)g(in)g(a)h(second-price)1129
3296 y(sealed)37 b(bid)g(auction.)65 b(There)37 b(is)g(no)g(dominan)n
(t)f(strategy)g(in)i(a)e(\014rst-price)1129 3396 y(sealed)27
b(bid)g(auction)g(b)r(ecause)g(y)n(our)f(strategy)g(dep)r(ends)i(on)f
(what)g(the)h(other)1129 3495 y(pla)n(y)n(ers)33 b(do,)k(e.g.,)g(if)e
(y)n(our)f(true)h(v)-5 b(alue)35 b(is)g($10)e(and)i(other)g(pla)n(y)n
(ers)e(all)i(bid)1129 3595 y($1.00)26 b(then)j(y)n(ou)e(w)n(an)n(t)h
(to)f(bid)i($1.01,)d(and)i(if)h(they)f(all)g(bid)g($2.00)e(then)j(y)n
(ou)1129 3694 y(w)n(an)n(t)k(to)g(bid)h($2.01.)52 b(\\Shading)32
b(y)n(our)g(bid")i(is)f Fc(not)41 b Fd(a)33 b(dominan)n(t)g(strategy)
1129 3794 y(b)r(ecause)26 b(ho)n(w)g(m)n(uc)n(h)h(y)n(ou)f(w)n(an)n(t)g
(to)g(shade)g(y)n(our)g(bid)h(dep)r(ends)g(on)f(what)h(the)1129
3894 y(other)g(pla)n(y)n(ers)f(bid,)i(whic)n(h)f(means)h(that)f
(there's)h(no)f(dominan)n(t)g(strategy)-7 b(.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
