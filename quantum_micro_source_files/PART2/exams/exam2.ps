%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95b Copyright 2005 Radical Eye Software
%%Title: exam2.dvi
%%CreationDate: Tue Feb 19 14:01:52 2008
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR12 CMSY10 CMBX10 CMR10 CMEX10 CMTI10 CMMI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe exam2.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.02.19:1401
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def% return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def% return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 98 /b put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667094CD8DC214A666D7D12CB23EC030318B42CBAAF40FFB3841355872
715967202E674F5ECE31075C2B1C5F53E28AE3C1491012441F34A19EE7421594
8C7C9937E184D28A736BA38E5E2596B6541FD3FDFB01B11C6688F739EA2CB227
5A433732C19BAA867456427C889BE96F9988CC4803E46C73D7C14FA47EED15E9
A50A7B3440C3657C8546702F174478164D3FCE6ED09E07BFA3FF4DA15665AE21
997EA3E6028E445E404FDC17A8D5D3FA9528AE2181F62C56CB4B1285ECE7AA46
EEEFC61E321B7CF97ED25B44CF211808249FBB714274083A6EEDA8FEFC25BAC2
F6B34949BB3787420E355324D10686D875753E41AE62CA5E355D57174A427CE9
BB1C08208FF30D62F93DBCCF4DA55FC8396A70540D264F88FA43A922E568C7A9
586252F2A4620127687866F56E53E9836D9072908FF5719CB8726B9DA08C5E7F
20C2E62996D74B332A8D53D7C9DAE7BCE867F36B09342AC6D37358556E90EF8E
CA121EEFB0D350737C376F98AF29DF5F70585660F68298C51F0B7DDB998651C0
837FF9A3E205E215970147CCC001742014C2549563211526C4BEE9BF91E0C7AC
655FFD3FAF117DD4DADD1B866AF7BB3732E51B71CCBE4CB7B844A084F53D42F6
CAEF9FBFC5121D158B33D8B142C211B6D029BF4DEEB2CECD8AAD3F5048448ADB
CFB831765C308E7E585A08B1DFDFB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 58 /colon put
dup 72 /H put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE8CF47DE0552AD09E4838FB0F10F99C1389CFC4686DEB
31DEE2B4F08790D16F3041F9EFC88D77D02D39EC1157D538C0B41C1685D632EA
CDC90C78A145838224866EA5C1299D942039DFF06157BA1886575C8115796C72
19F735AF881485DAC6D989490ADE623FD53D3DCABB2ABAEF03EE07C10DDF06EA
99B3174459E7BF82AD59FD366E775F2BDAA584B63EA0CB7C9786C3BE9F3808FC
75BBF201A290AA21889E5CD37096F11A64E99FD8B75A43DDFD7D2AECD6E2CB37
75A140048A071309DE0BB4DCAE725D0BAF946A3B90C50C382C5666284C76AB6D
9A4555AD14A381C99AA367FA48815462B99963D4DF3F430E53E3B60480F6A2F5
D7E849209A7AE61B59F7A31C6F02DDFDA23FD8A04636CB9346E8D191D82F8BF5
979B7619DBE0E09DD5F0D2195823E9B9193AE6A80744606C4E4F7B6488916908
4872CD9F48E6667D4450FF3B0C10FCAE8A12B5B4A419601D3CA21E48822881B7
31DBD3A9A523B0D804A04EE0DA3B41F71D51E03CF3DB87596F1A268A7282553A
632DCD29F5A0C1D2FFEBDBDC94F5D7E953314EF44F3A40B907AE160EB61B5BD5
3FC804E78BCAEFB83BE1B5845DD206FAB21D48082A24209BD90BCBB1CD1F649D
248ADA6EB5F6A05BFD021C5493E6F499FA2E84BD66EA92A82CBF99C4DF922E2A
096E8C938118E058E1FB5879A6CB39E98E38E3955BD369AEA541C253A4F27F80
C2978085C2E152F6E83671A5947E05E75D6DB8789F7A759732E341A83940CC50
2E7B41A51194C5F36D808D1774A28F626621AD49346C240B06D9CB848229D969
275469041FCB49D89C6D597365A22EF55A335B3454C9ED8A72E5F519431E0381
9F4C2C0F89D61FCE76362D0B3D4D10FFB0206EDD14112CB520EF6AB146D0A6B7
E29CE9E4FAF683095C6C72C9BAD5332F70F81C282D95E340C520057791F2C2E6
96DE26339F46EDA2A98BF64CC51C1B6DBF5D2F90431D36FC74F92734B16CF333
1620357E3DE2CCE161DA66834DF4678D3498CCD19E3BAFA1CC6C7AD1A718A974
31C24BA193FF4C2A8DAC404AFD9BFB0D10ED15780BBF8FD78660EFBD8BCB1538
9BABAD7BD92F25644F797C211729BA8C646C03DC98895ACA143B3254ED10C4D5
BC47C50FA4FCDCED848EFD541E5E8761AEDAEF2E2A4C5A7BA1E09A203DE8FA4B
503CB597327FBFF4A31214B1C53E6FC7500002748E4EE6F01410CABC764969D3
DA393303A7EBD86F82C9244DCEB94D3F9D7F0BCD352300EA4EC3521F903C6842
D0A4F83AB9D536D989804427CB4528D711DE9A1D10F0AFC32A6342BE7319EB9E
4954EB38E3DF32BD037CEE1363294BA488579B70A98EE88AEA54B3F5B7BA5673
A26B4A0BCE81C57A7C570B41558652EFB6673B3840C4096E6CBEDA94D756F048
BB5945E0C9C3E3EB1FD44B658DB61FC5926B2217084F179502FECFD51FCAE086
AE949D4EF16691C1A4A90DC652E7647796B2DBD1A3E0DC4B2E82AED68C910EB8
96505CD06434B99953BD1ACDAE73C172ED0CD02868E8668B5442AFE1FC700FA2
C3BA6DD384774806B1B200CF301F0D44A057BE0E3C229F9C2A995F27271B28A7
690380A5360780BB8929D4C18D92B58650A035513A2C6B17D157041E798D3444
B150C9B9ADD7E36D445526B61A480DFF431DADE6CD2DDCF7C89C8BADA7B84E73
F8F0B9BFB55CA14F244C6E51911675EE0D056810A9CBB5EC179CD700A717D6DE
33A5390E5DBDA4CA4330565597E0C22F64D12AB81F102F579C8511C7BBC92822
FE72DE904BA02695C08E930F9214A055A01D751B0842F8022C5345F2960AA651
3FE269F5C8B0E0E11CF1D30E15A1F00B50714CB5488C69FD33CA0064C7BC43B8
3F87853B7C5ED73FC578AFE8BA7AD68EF612B24839A4AF754D6BBAA760667ED4
CFB56C79062B1C911006AEA00A64311A2B860A6F46FC88B57E49ED7CF93405B5
2C1AD2FEF17C45256758B8D4EC6D50AABC929E3BF93877A5E0E481B36661A52B
71C5417A97354B88D49C291EDAC04074D7A1B429D3A49886ABD27FF719F7C486
3388EF76F64E46F804B3825FF4608AB82F1D26AFADBAFA5BCCF31BD82F7D6210
65A710AE345C4B677882E4F8C1F2B55F71E09350EA5DF77D92A7C59CD1088446
D039A0C9794C1C36F2DCD25E64C7AAA992791691037E35700D92E148F389E7D9
E5555715361249FD92C0B5271032040045CD417079F3F50836AC0D32CA466BFF
530A6B1C3577F605A77FF1EA5246929B6C4B91D9B0E271ACECFE3A446F706C68
ADA3A5B6145234E08455CDAF09BBBEDD72EEB15B621D0FC2C82C3165C158D3B3
232A09DEB1986451B2229084A79F989EE474311F21C823AC263E16FC2F3A7B37
5805B7C880B9B96344703541083CA00664B7A653D58D1B19975D88C5DD94B253
3A0D108B91F8D953401AF9B413BEB9DD15E87EB33D0D3AB10E5D2E313BD8B5A3
ED38D664AC7CE938D4442AB76BAC328A357FD3A9C84AA7CC6B3131D0B2481E93
B91B4EC67D220A9F2025BD8587DA2256A66F78283A3D0AA2730BB3818C455283
CBB72D74A5D148DB506BC0DB7F15448ADC432EA484B8F39E25BE30FC8ECCA39D
9544E94E43646860FC60DE5C8A138A67C43EB7614FBD44467F5CBE5125D2A2EE
752D55CD0845C8552F5B7E5F16B40FE125F6C69965203C0633E618A97DFB3DC4
89B8D8F000A5E6797834A49E6ECA9DE123B5BF7B0A7EEDFE22A56F2601198CC7
870083D8C97E2A30A83DB2FA45C48A99747973FFB0DFB486DE8665E1A99B020F
AFA92899994C46F743BC3387DA7046B5B8B1101EFCE25EAFC63EA7B57ECDFC29
3EAC34F43EF09EC31BB67346D97B826DA211E2C11AB9E9BF43B1E6321E020805
54F16A8B83C30C435F3F16288480CBD8AB5BAE2C3EFA9EEA07A22FCB54730917
AE877B360E148EF9BADB293E3C4D23E5A10DF948BCB283437A7ADBB5009D6FCF
8705A0F45712C856BA213B2D36899E7360F28FDF1ECCB431777E8F14E74F01D4
A193E86DFC3296D1CC9A0EFBC2394C0C9D2F04698FF72F0D08F472FE47C08491
AE1F9F0D0F856002F828D1ECAC7E8A8618F200347817D3BA3CCEF3332DC773E5
B8BDD9219D007986395611B02E45BDA0CE188FA31513287A07835C97436D8342
AC96E33D300C7FE3387F4EDFD469C17F1229A5774E10CEC83C599F5B3C193EB3
D98C713EFDBBA92D658A3EDCA62C848BC20406840C9C83295A5513934CE705C7
F79FA3927D5C8C653ACFE28613D7C63796B82CE3FD3781FBA22FA8047C76493D
5FB070F46379F8F9A52052F36DC29CA078070BC6B149D92B71E184ABB9781955
3ACCFF0F162BAC393D456DAC3953BC5428F44E49810813605D27BBBDC7433058
74DBA38DE44E0349FA042CC064E5AA805CFC1F09F5E163A6295AA8CD9244A56F
05BC4DE030AA75E29DE90FC0586560954D6EED73B4343C4510EF27757E18851E
3567F0BA24B11C59EC8A8630BA723EF42D0AB1EB55B9C063D1919217AC44967E
739ED9940C84FE698C6FC2AED9B0BE4D8B883932617D99B570F70BDC296DE226
A61ACDB521D1567482DFF3E11691AC39F42B8B493F05D53C5F24D95B9A72DDF6
70F6456C42CBFF5CC8225DA0CAAEFE7B8728AD7486E3D44377CFDAC8FB9C0ECA
6E45FDAF7AFD36982C93E55FCC684FEA89AC9F75292933A76EAC4A5966533ECB
D4387B6E93B4478314BE9FD0E95D199723A96A378790A29088297E00FB8D9147
EE08C2C019767FEB7ED4F945C553CC4081FFF3482AE7EE766B534FDA55A9F2EA
6CD743187D1F685ADB6804F98528A82E76FFAF2B5B2B3D8F08F041FE1F4F0887
72C91CDD265ABB4928136BD9385BFA50B082FF5688FD389CE181E6237AEE8764
AB423B2812A5C2561C53C6E31B39649D224BFD2F43B18C60F4E826BC700DF1DA
0E4A4302420D357B7FD6EEB57BB0671683A74BA5BDB5E466DF52759E192BAEC9
61CFD2EDCB7D159FB1617AE1B1A8D71E8E06CDBEC249CC99BA4E85D7667B1A4E
11A1C724E9F0E34F41B5B4D9C7DB859EF0F08CE177D1EDCC230D09CDE81D177E
449964EB1CD60E26970C61F1D029551C231FE148B0EB2D290C809581603D2F88
2BA03D5ABB98FF1A2FDD57B4759A9DD810A20FBA1C6340B9341056C3062B6F38
454377F012D72A5375CAD4EA5B2B82601BBB259059DBE9E0F242FA5E698A1BDA
526072B3304FFDCB7F02E81ABD6A69E0F797F8C4817EE666A9AF5FFFB25E7658
73FF0E4B31711263B8AA541B0360E0B16B8C9F00CAC1F4363C756FB4DB12E5C6
DBA7FBE7B4AD2FA3CB6ACC05E4BC61840B4660BF019128F1AA6A5F3EF9DED77E
A1A07E8FE63D75026AD675D11190A34C25CB6870AFCE10D3960A6716859144BB
3AB64F469E2E624EE818F0A543E92AD3B6DEFA5667E1A010473788013CDDDD16
CBD5857B0868CF46EB4D2EFAE811BE60D92995D09CE73516C22FF4A0A88736F7
E4506353D8542E259481A094F129086BDC59764DE1C636B044C2C19B9742EAB0
1C563D89444F29D9CEF0BD2647D1F16CDE2FD8A278243D08A28F6F1E1C443512
F1A74D3F27BB3ABA19A68682CA412A38558D701921A43D1CB2C0CBDE1DF12A85
C0207C62556EAE58B1ECD75F9003445240472AF94D77811600495E0B187BBDE0
31FEFA777314032A99F4B4C080E5A5893A63A44ED2226A40746FDEC11F189439
5CBB19293074E8353D97494CEB6057E8A3B9C762F85BA8E80C9B56D0BA2CF511
7D6909540CB904D7DD2696EAED3741539BC2AB9D1450666E2F8DD728A11988F9
75C2052667228A6D8208379B5DB2310E89DA1B232CBEA0F0F95C62C692E49108
9F3B5DD9637CF0F152C12C9400CE4DCF1AF752E3CE75AA668297103B805EC8B9
22347431E6B36B30C9D27E00562EBD844F102E715A192F6E9E08F735D5B1DB1C
6EE38B685798A61719FEA3F260C0F59637C7F5658C51CC3835590621931E5178
654AA5C6592A8AAED2608CB5367F40E4C1809BAF376B7349757E9FE252D0E29A
8BAA31D1C73769A111D3FEA72D8765DEFB5F8EFC622D7BEE2D07EEFFD55BDCEB
99D1FAD9C562CD474EAC5E58A06D99DABBD731DF99F1D4075B90B24F326598B1
98FCF9DC7D2A20469C3224495ECC994FB73FF210CFC4FDEE4DD9555B128312C8
A980973059768E9534904232C593CC1A6284371FB9E3637799264CFB0B88FF8A
72C51B222D04888641B8FCFA19FDD43C30D27323D1EC807AD170C8F1BC5396FB
77A6CE10A36A8015289AAA2DD85A7F73C74AC74998E3809502A8A893C3DBC07E
9F8A76569FA9F8BA5744FE2D40A3144C2D148F9A1427FC075961CD6AE6103837
71EF6E0C421D8FF3CA1E8CD8DE20C51DDB88085D7DC28F534E5905985D9B8897
9A68194FA9EC869EB4B7F2DFC3676F8EF3F46C5E0A1E2B3F26F4847E6E6C5F7D
06CE8411DAFC4DBD5A2DF260B7761AF434B884E62EE546349E21F7DE0597C130
5502C097BC1C3AFF9BD0CB168CF457D6F61E7465A94F79EFF79F6C54F7DE54F1
4B4944FD6791953F9EC90EF6280C7B6D1688C3E1504A8415AD3E18A9016FFA19
25160E30E12961E7DDC79B96DE9240D62AD5169F1842B1878A9D555A819A1F89

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 88 /summationdisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C8384F906A7BAACDF441BB0AAEA2A697E453D89E61340D3A13F615FF
3E64BC24A22786C838BF3BAF6B2829B5E16372EE3B9347142EE6853C37C61423
540C793D56EF624F68D2BD0C0A43524C3DD7DE1A30702B79032D9EAF715668AC
6701F3B3E54B877104A17D328FA3B6F17B484771428F11365153D779E59132B8
8AA4D47495417DC5F6CC5315B779C2B12A4EA32D16BE254D2EF2E0FEE0021791
B46226F1A45386FA41C56864FD6EEBE29E98E00C279EBA6F17ABFC1F8E0519F0
A9E5A7FFDBFF06D6475D65A977BEA0F5DACFAB70461E8E08B1BFD3D31ABB37C0
5C42D17ACBC194B89A50063B9C2F02ED26A99FF436DFEACD70511658C9554FA6
6EB73CA3F0A8F17C8C34B79C6A5BB7C395190BA6822EBBB81A40EEE29A69E316
9AC9134E9DF5007B32E8CFA45579F310413D25E82691774DF4B83610A41BCFFE
E2119028B24BFAED5197C3ECAC5F0D0D66D17E69
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 36 /dollar put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F966977BD8C8D07FDBD
F4D058444E7D7D91788DEA997CBE0545902E67194B7BA3CD0BF454FCA60B9A20
3E6BB526D2D5B5321EE18DD2A0B15E53BCB8E3E01067B30ED2DD2CB9B06D3122
A737435305D42DE9C6B614926BFD44DF10D14402EBEDFF0B144B1C9BD22D7379
5262FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EA4FA77428025D4059BA
2988AC2E3D7246BAAAFB89745F0E38580546045527C8779A254DB08DCC6FB9B9
0E172209FBE3857AF495A7F2B34BC893D942C145C2204CFCD6A5C69FEFC25B60
E412CB2BEAE7F7FAD03AF46344F6A7D483BBB1E896BF16B0F4C363799DF23CE2
E8127996DE841B6F9D8A9E56BD799B6A938582988AF87151BB8D3AEA85C49857
DD862B5E10D9F33D57795D656FB616BC9B8397B3612131A2B0F472656700958F
739A548F7C3A348698AF9F6F9821D7A9FD4131781ACBF7EAB885A3AC254DBF94
02FA697941A0F97F048861788BEACC20DE829764413CA58F9D045A6B38BCD6E6
E4827247EDF1171F64E3B041A69B244308DC07F66643FCD7D5FD37F36EC4CB5F
957D4ADAF91850A3B1A765E0E580EDC77556593D1B2E1B66D135E09A46B054E3
7922BFB709F40562D00C1A242E8650BF0FE0D02980AECF04694B791BC6F67442
2011E5C9A0B7A8EF346E2F5A026C9FDA93FEC39DCC0AB703CBFFA116CE7DF360
90AB2CAA68DFDDEFB7386767ED578F87B65A64EEB60A335397EBA98C4CBAD002
C28DBAE852F966E7FBA6AF8C4B5DAF932C488BF28699B28A5A9ADA8EC4D2736E
CBF2265F957688A99267C7EBCDF533C4317D688FCCEBF34B49BB6272F1FBF048
1F9F7DABD5221D5E7DB7B9EE4DFD09192510ED18AD7F6AD5AA23A0D964D85F34
D7E9DFC5301B554BC721F19C2AC8427456D7C5731C01D42A350CC63289AB46D8
28991A420BA6C41C143A8ADC78D79CAD675FF4EB4B41A1ACF59FC85509D9E7F0
248214D7D5ECAFC09105BEE902A168191623DB9A3B852FF3D6D1143830B37F02
6244DC5F6DC2B2EF7F70978AF5E5A9A9F96FA4FCA01BA64C33B8324CC1953DAF
F026D9E157E657FA9E4D982137BBB03E150F4871F34F38652E8148EF47136FCD
65E10CF0F11C93977573366A87143068D726435362050EB90BBBBBCF811505DD
EE74D9CD2DBB53F96F9FAABEE4BA441FFA72D5B73EF04EAD7F45958F8EA3DF71
61B6848D0DD56866FB9F164D0C54B9EC839D119200BD2249D705EF92A9987BEE
C76965A74D112B2D02B3C170D32AA2EA5810068C36D5D84F96EFD8E71F8BB049
59FD616891B9F34006745CCBFB567531E6AC08E1338B037D87C40EE6CF427FDB
05D274836533B3307F9EDCB334435B815D0AF5483BC0678173DF35570179C08C
5C881BF1736E830592216F403C28DF8A67CD805EC551240C59862C3A44B1EB06
9F9EF17FC438FFD943F5E078F2460070C9A8072CEDDAC8BA0FFD71495D647F2A
7F6E1F8F2957A16658594ED3C4A6249D4A5862677E2E7AD3C4D452CD0CA2CE6D
9398755417A2C73F93E146401FF8DCD89C95E850EE78D733DF7B46582266D4F8
6BA57AB18411EC8745F5A75C03425F2BF9F91C1FE470DFEE3622C1CB6BF3AFB9
55FE9ADD33FEE4EED9C98A5C5AB829E1CF1258EECBD736AB60461F158327E373
683960F4467F6FC9A1F15A22A2485DDE4534347243F33BCA738741A7E2DF8A8E
811F3E2F0A2E93219F07919E0D41DE5C6BFFEAF264C454AA0028EE71F347A8C7
6D12FCD26CE49266BCFF8951CE11F000FF79B0F8EC496C95A518F5791A790649
2FE0FDC6D5E11504F5E59E40CA2A4F52D13BFF3817E8057E254C82935BB1D3B8
B1B5B958A4F7FF1915B4823FF48CCC9C24512A58CE7C5911E7A6913D0D27B5E6
B8451EE1D0FF27FBC82A5D3CE969F96064BC13E4E0D6D3E29B72445C2D9CB0B0
EB9979095B81E9A0017D0F6072FD02DA35BEEFB32B243CC59F9415C29436689E
4325DE6B0086F74C6F32078A0322F5A3814FD8195EC19CE581E1F540F22E4FAA
B414EF9C2370D6FF4A34230D0E24D06CF31B419EC06435548D45DC1E5FB82104
2C2E277E9158C7AD87EE1613F1F69AD4B0BBC256C09EC21CBB65169EEAF279FF
E0928502D6B7523DE85CE7EE3E6FAFA0C484C1A5B1043AFA98AC3968E79C44ED
F51C204CE971AA06BC043F3B6922AA6A2705B138610B4520FF514CE7DE42D42D
64B64EF94857E34F5981C37A575907C7A91D2C5C9E0822B161665E6EABCD16CF
178F25BB620CFE70DBDA1643A6BEB876A1B0602511AA7E2178459F4263332DB0
9230A64DB0873E7D16700769521FDB2D5C886DB1C6B4C2B396482F61FFA756A1
83CA7100ED1A9C9C2B3038ED025A3814D736B1092232C2AA276314BDD260ED94
D0DA07E6C394DD353EFCC84A7B661327E672E21F17CFA7F7131B90B38047F265
37EA1F80C3D6B8800C81458BF192CC7FBC2CDC06CAFC0ECF584C8583D799C4EC
A095882B44956D822D463A4E593C23D8C88D43072A96CD889D5E30A218316281
C371B9A9463AAA406C721D2A029D86F4CB30542E480E966812412ED53A6CF52D
24E7520808B545F7168E41558DA968B7FAEFBAFF039D0BC926348BC208E58D02
EDE83DF0E73D97E82115FAAC207BBCB2FB5194F903B71775E1BC1DE78E73C2EB
FEE8DD61E5A0BBFE6ED9D3940B92C34C76DF0F96597E8CF39732B64D2C0EA2CB
981A7C7964235E5C0A658BD145C250EF3FBC2915E1A13AAA69ED798D09C3C08F
E1B281F760305ACA1EA9C761BBAE43CBE0FF51220F0FF5825C1E767B31155F78
281EAF02637F875F7808706BC006323D4B2F64C19274239D0903218E8EBF1C59
629E98103A8C09D36916CD8BA017BB8E1A66323E91757C94F66568AC8C0693F6
44FF204B0F222B6D95D5E8FB6751FD3D8401C1001F526C8D08FF19569344379F
F8725F58AA2A327A5662EF935E1E292C027CBD822D827F3512997B29A219D0A5
6A6712B23A09818EEC71D6D6C4AB2FBA11C14B046A0F3B080E27EEEA38BE2314
A4F79CD76C5F6AE87F96EDFA1BFF84925AF78854C15234F8E637451623C88308
4AAFDE36C10E2D368F2BC0579895D724CD0A44DC2EA80604B9AE0A55A5C611A5
4652933D19F56735C5C2777F1B1217CA866446C28A4D683D24023322E288A4E4
D9C660CB80049FE17704608DEBA19F4B73A96299FC805AD15DAC3B5D0072C1A0
F1768754D1AB52636026660099D5B250B71E93EC37F7CE60668B80D8A1B86839
7CB39BA5193B7D811F64146CA1E83C1A65E59977336D6A751322C5B02853C169
26BF60273142C542E3494EED7697F829EAA7B7E85937A1AF6212B3668DA1F2B7
A38592C43A8494BB66E90027845628A3621C74012A758B7E1E3E4E2E563DC3DE
94A43C53066AFE31949082B77FF7A94DC675770EF0079018A3CC49152628C0D4
9706BDEAC444DFEC6F14C9DC6206C0D95F3C4F3B7F9BF147D8110861BDCA9564
F92F55035BE934468A455B5BEEB5DDB6D80811D746031BAC35BB5353BB72DD98
D23484A95E1913D24B21BF93C9780B44588D1E8E5A95EB5F07A97DA15C3A52AB
A7F477DC5C304CDE9D020D8E0E0505D86FBD508B01D6C8FEFA4F2A0E7EB735CA
35A98194C012C72208D6E5B7528B6CEC3B5079E7C7D0C15B72FB67BAE7861EF8
B6FB2B6DA81207FD1F93FD25CE223DEADD2FE1E9E992078177227AA8EA64D775
19E24119D8E29AFC6266F9776C5C61196280B91FCD66A6FC8864AB029494F046
B38B00DA806D8DE7813050D5D961908E4C33C60621116AAACD0F0ECFB4269A77
0D56B6CD6892A1443F367BEAC95D9FE7276BE2BC528007497729AB0645E6B389
620764AD774C2C92AF5AD675C583D64921DCC78DDD5E82FF58ED498928AE734E
ACD7D42AD5382D812538484C24CB9D00C80CAF81F61B6C46A15F9D69EB3CA709
1255AEC551E02B782C84245200AA4D66A34025A77D202EB282BDB352E6722DCF
83AEF57148AB08C105EEABB22DAFB647D6A7CE3DBAE60B8EB8BB0C441AF6C63F
EF6A61D93709C8AEEE4EC9DD7B3515E7BE5676E04CBBD28B37C98834219ECDCB
1F3C9B3B408F108C493A6F4DE2A43F59E1A105BE2383839A946C057CDF7C6A2D
AB3D15BCD2B12D5FE9E7AA6692E5D5E0C15E9DF9A495077285F416069F30D81B
B1680986DF0185D52A3F4E8295425D7EBF748611B58D3259A87594C720F08E4F
076CCF4C9965539105DB2B2884DAD116D8F54E54B091DA2A61AE9CCAAD132F49
5FEF3471B6BC7C0412D6189FD55EA1C3ADC3EE0A008CD00CBD41421ED62A2020
13C4265B106B36518F10C84339B2BA2AAEEF0E5527B05AF51AA8AF0F071F9C9B
407DE990763B561F1AA3FB3AC651FB9DA34918DEC6B7173A95833AD0A5717465
475D5A0D9EC65C2033E46654CA7048BF7E8BC95491B2C176C06238271B39D955
98986277B1EDD87466164CDFFC05A266EDFE297E7BB320A73D70897FF327B2D2
2F6C6C896875C167845C8FBD62652E29B785C11796E144031B9F70A0D951F914
874DBA64FEBCAB8AAEEEAF65552829EC821B59E04B13C7979299A770C18CDF59
B159936CF9EB2DC818A0B4BE8EBDB0C74C871D64C3A437919571221A7DB2A804
6907E5A2A54BB39E70A8012B23A5AD2ADA9108EBAE7F00C1F86D5CC5F7D9DCCA
548B459F8B22B3F8BBF99580B2ECEAFA1D7F584F765A9FF1ACEFCDCAAF9F8D3F
65C58DFFC971C10C531DFEAEDD0C93B34EE013D31C8B56E4125A96ED5A2B561B
A6520777861DA7B38335E05AB8C837311A57E8E6AA8031336096F3E68E9DCAA7
375541EB42EE09FECAD55D27D969B0357B9742EFC0232AE59AC10ADA895409AC
6FB7B7201BB860944E93C358F1EBA3305809A16B10B6DA0C89888E50B4B3F2BB
4B72E5C46D5D3D015219AFF0D19C1733D7BA82A9B1D343F54EF4851B184616E0
EEC556EC2DB7B9089873F347F9B98B2D44B9A4C6DFC7C0DEC53E5A7A4C3E99A5
706C7EC60FACFB6FA79ADB396D93188D4DCD2D51E74049443E79BC40A48B89B8
66950D84096938AF5D6B5472308205B3A2480DC5B0D46B1137598B6CD05CD811
03597BD69529A51CB2E7EB210B4054FA51347FAB679F8DDABA242845E51EA82C
93C81A7032FE67004499CA387C562CF0FB061705BF0E3ACAB0F91159AC1726B1
59BCC7DA8D8B87AA90A081428E640D001B730B7CDC3A5692DCA28F7C2A8660E1
5878FC90F3F34A011CAAC32B3D043D816FA8384A40B4D6131C2990DD28DDC14E
E74AAE8BCDCB1CA51668D05A93E421F85005E96AAEE3BB593E70806FE7BAD695
8252DBA5EC22E1C340A8B746FC0EB4E53C79C45B17107B8E91733DAE9D6E1B09
38CA5782B38614D2C9175363F66D4992D449BE483651C78816B3ED82A4DD8675
9F5E45E50FFFBBF3DBDDD9C4F2DB6691632B489839181B1A63FAC0A146480A76
C6B28A7D6FAED91BFDDB5DDB2D34A3B43AB85CF00FCEB36BB6EAB29A91A8887C
17DA02A99BB18016297C900550103E5545F3A35BB5DBA2DAB24EAEA86842B7C3
F1723EBEC02768A49D975D6C509E757E47B50227299B032E204BE4DC6FE9F6C0
7D75D5E4D5063BD438DD8FD1FC6C90F3B6A549CBD1F8906DAD2C75826C4FDD19
A8E6619F2C67CC62E73058F598E7B05FCDD25425C0CE3F22480EEBC569FE6969
EE4D141F71735C90F7121358D1ED7B866F2F888CD82394F979D3E8BA1D308C9A
DBEC087EBBFF2F2E201A6EC6E41416710BC52676BCBC7264EBDDFD2BC28DF294
B43D16BC5440CBC57E6DCFCE865FEA7D49A162F6B1B7DCD7E976707F35362BBB
6D8857CC6F016B005F7BAB703B0922856655EAEB5E813437F7F95132FB9ABC58
A95EEB80AE685FDD83665274AEC12CBDF099CAFF79065FCEACA4C74BDA6E283A
E8A2F22C5DFFFB880C3FF1C94432E13B6B529B05B4E4A2FEDFBB16C5A1BF0C30
180437AF802BB9AEB00649B4C9A49CE85A422E4FBC38D646BF57211703290D73
A1DD53772A5BD5922D69B34DB19A02E92B11DF3866A0DBECD740F88819757699
519CEC61EBF6209A4449FC51DDCC57270CBB51F6C3180899D727A8947FD2864A
2D4DC66D5843C9F6CBD74D886FBA979E1462540290F7C409BD2C5A34FB534486
803D88A17A6E0AA7946CD3297AC8EB5BF1A7873A4CB9A3878BCB42AAEBC4136F
B46173429765252DEB13B9243CA48D1BC047582CB779D669B901121A88129B5B
49EADB0F9F18DBB394C8D6D486C9FC85E5215B5EA12CC4084632A79E93238745
A0966A876A0E5EE0C9D18DD21302FB126FAC2990AD91E95D10270C9F378810B1
55C9FC716DE6A0317699893B0320A589964953BB042321492BDFB9CF2CA45E57
1AB2891CB5F47DFD9D35EBA22A40C64A3882163E0B8BDC0B4897C5897927E8D8
82FC4CA4CA923D060CE259A24A0F0D0A31C586EF93F559B14AEABA8E5424B140
92D631C2BC03CCA012C76F969D50B839558E16D1DBA47DEB5B50DB44ED55B90A
E69DBE7678F57573A2888C16C674F047DD57A5660FEAE55B326CE62DB27A1A29
8DF895CBE5296C7BDA9D62CB2C51A7E352154411B2171702B08ED1C54D9173EA
B710CB778DAEC8D47F319D725A8029C0D101030090FAFA6A4BC8E82DD234079A
FD95020A585654159B77B17109751226692E638A06BFA0A3D81E6A26EF77B7B6
2DD992314880191BF57E9C8E5C459B70DE1CB10A37BF5701D4132D00D31B3112
11DA3EE9A2C7F9E346EE801BAAC83D5A27A864287DA0D28FEA5021D10FF267DC
372EB7C59A5836A692343A249A874F836A08652DAE6CE94D3F3DD49CDC03FAA8
01EA579ACB5F17E5840BE6FB4D39E86D5CF8FB21DDC161B67A74D419B2F3DFDD
E48B58068C29E0D4F9DCA3F84AF1F4AB3A1A7353CBC2F2F036273D542A837386
E1516CD9A095DFE3DAB75834C75C2D34D1AFFE55F69132AFAB92D616B899CA42
97079D47A4C05960DC407BD77BE845F23A1E15BE86764D1BE0CF1F9C3AD9C575
0C3FED542807F21B609161E50EA63840D587D0DDB91122CA50EFF8C14814A0C7
87EC229F15A556911617D180C3EC9377D442420829C6BAA816FF6BE0048FD7AF
2B10396BDD051B05CC1109329E221DE254C5B8A914670605CA006BB194ED2847
A4DB1DFA12F9B1506B74C3D90CE43CEEFB8F7A7E84A8ADBE2C5F56AA7449A9D6
0A540BD6CDF1B312343EC0367E01C5D4733FF298652D8D656BCCC2F8CFBF1DEA
4059197E0F7CA200CEAE219C5A3BDAAFC333EEE3926594FD2E2997BBDF0EBC5F
49469898265E27A961CAD4019B201BD4074A370A48195A37576BC916CDEDEF8E
35CBD3EB4941B6C0BD10B63698CE66ACF5F01B24CC2474CBE92B8F2FF568D533
351A2F25D8292C850D32BC53E85E4DA45BF75DB5BCF3166B767F211BD14076A5
C347BC0C73546513F6995F452C68225A16F0B3F017DC40EAC0B72C7B6DEC37D0
20C6B114E13D866BE982AC77FC329ED36D0BB0D11DB422FD4B09CF9F70760393
B2DC0183DE1C0A38DDCBA98769001FFB382BB1CBB0E310FF8E3795AA0ABC1293
F50A37128FEB7278556A339EF0BF27629F509870B52FFBC210A035D078740F50
E725F526B8F88658D72837B00A81F2362B24CD01940C62A2BEC1D23E04E98A8D
12C37758A6856E1DE03B087DBAF9C667B8DE4B1C85E171E974F5578BD30A13FE
277CF08B99ACCA22896A7A33C78BC37F03650B4AF8839FA3D716D6817E7EA837
734DC04265648E5F89F58613AFA9EA3AE2F85F7955671B61A6EC70629703EA19
836A981CF85F078087DCB3797955C180BDB467C56F07EE52EF32DA27CE10CB4D
A19D00C4395307DA453B222670B449D8BCC9042C3A0225E6445AFA8A2F22A844
7F06229FAF414DACDD2323D74D48AF5181D56BD9350BF018981FDD0113D695F8
D5B2BD3E6023959148C2FC9DB0FD4994813D6A09E2AD0BD92A7B1A696DE33A7E
E925F4B4DC1871D4E9D3DFF2A218C91F59E1B275A6F7C7140F8165457DBC1070
6AD879657886EC24F3D1423E1AE6AD324AB15ABF236E120970B2C0EE03D170F9
D3E12C0DFE3BF2558FD081D1410967FB7D07067DDD343D0D0B92636234B756FB
C0ECC6F9128FED72A07F985C3EBE05DD28E5EE5A49CE1852A1B62E9AB6E815D9
18725DCC13A1EFE57F452EF8E7A51B0CB097F1747CBA3E13A7A449AA9320F8C6
7DCF80EC6B4BD48F0A3E4430F00B5B91C0E9AEE1EC96588A072A9A756604E917
75E0B90725F43953EE3F9A36681386A3FC2C67EB1C97886E97097DD7AFD01560
22C14A6FE55FE8EA9C9098837FDE0271933F3E95370D03AB34CE034336683519
2B2E93DA7967706E1702FD12BA1CE4BD6214AF077DCF513B07FCBE2B3CDAE031
210239CADAC58752556E3616BD5C46ED8A55A963311A15E55E17E23537A97E3D
B7984A48B6286CDD26C248AAEBFE47811B96DEEC0C5D3192EA4335CF5E2C592E
0EC98923D3A66EF942A46D0E6DA48CCEA155B3E9CEBFB7444059E56400B6AAE4
2FCA5A3BAD6CACBE58E8409F7F46E59721B108B00DCABA9E9B66761F68051AEB
F287D51F4E2086A72DFEE110573850AD7CADB0883F7CC006BD952E1CF6B99F01
E4F14040AFF1E2B6D9016A36FB8FAF1EFABD48858AE9B550206CD033358A145D
94973C478B9AFB115B7D57A7FE38FDFBDDF56176A09F53D41698347E541338DA
A05B5891535F6BA233334589F83C18B2321262D7309381F1B4873E61BE8760D9
64B05627C614DC25F7D83E90A9FC17B2F518198F9E6114B02C9C7CA7B7399764
E7205E020B49A662688A29F370B72E83E017DF0F11BBD4D4A25B968CE099BABE
9DBFC35153A7B1747E94D240F9CD8999134CF94CACEFB39A5E4D35EF553500C1
90E2D8DA628175B51990DA0B560C0D544F325B315ABD037327281F1437FE6DD1
ECB3C077C78624FF5FC97B252D7B76E3A5D11C9D7573BD729062168813CBE36E
35AAD12DDC145AE56E2362AB3CBF3406299CD1988306D3D3E2C39D0531D442B7
7367CE4D24D757BA135B235988B1AF3A13E5E1FA134311752002ABB35CC26A50
6FB498AF2E441F72E029DEED551673BCA9BE39C4C06820DA28291699A77F754F
5E33EBDD9A6AE97E7938E54D1225A7DED82C9420817465AB37D782C85646810A
A96840851275E09B17E456F1DCE3ED3D0AA5C4040E5CFAA12B7D6B1C649F6E97
08100B2BFF37F260122092C6C3ABAA779FDE05818CD5C2BB7C6610F4DD4149A6
9A84D1FC201BC85604F923D638601A0D526D279AED60FBC35C52FAA03C2FFF37
C3017DDA46B95C79D322029651188270F4CC58B41D15B91BBCC2BFD654151FDE
D52F8389097D49E2676481125BFD7A6E650BA000D330E555D6CE39FD8E36F25E
6614E9AD485EB92DDD668C4D7ABC659DE38156D557ABF5B4CFACFB934578B743
DEE2A64151A4401CBA02A9C6C67B259A3A2E96555B580A4BBE2D34447F2F404E
30AE88B92CD63CD75F1A00B483A5CC557B45643F3B585FC678DCCB6FC0E4B464
12CB649CB828590FEC90EB426A230F1C01FEBEA857A4208861BD66CC6D1A5820
FEBAA82B5836802A68A987B115FF126CC365645D0B4C238C0D4CF206FEC61CCC
A95EA2AADBAB4477114223813368A40C7782C18DAC1608FB6A9006321F06AFDE
4D1C499203810D37FF9A9FCA4C8B7F4ADBA1585475A6D870EE324A1501998430
6B2B420355FC68CE1F92686B8C0C8898B3BD53E5C65F4072EE079C91D3D04C80
4E431506592FA49A2E94FFA0C6F20C119571749A1F5EE481EEE2AA316DAE56B1
0B88DF5E2EE8722AB8263BE0A3758BDE21294DF2CB44107B1EF2CFE51A6C44A3
2486043AA7BDDC81235C25D7079F2C5F5D730C3362FCAB467BEDDA9D98017202
FF0EE00BF56D0C75912AFE32B85DA2439EB29DF24FDD266CA934BF1D6E930AE6
BA2877FE9D9251722D835E90BA996E15F0E5CD86115377607C970DE66008597D
CCA9DCD6BB3D6A5ABEA2B70BFDC3AE57D594F52BB8FA72E9BB820D95011E020C
8923FC2948DBF42CF076DBE304C2CA8367B40F468B6DFECC11B3D204F0CBAF53
5DB9A91CD54CB22174749E433B6C56B2C4568F47F27F131A791D0745F57A3F19
692FA6C9E27F95CCB76EDD29D0B5FFBD5740783BFBBF9CFC369A4D4866505EDE
7822E1A2E64565972063C9D6236758441BDD4BABC9A15BC62A9A34366F6EE1E9
555BF333D7A9E519261128CA1F3D9C5F54F66F7DDFBA057E84EE3EB42F9C4CAA
399B73C2C1848FA905D8D8DA7AEAA7EFEFFE92483E88937C0F34A9820B13D848
FC65F23D3F7A96EAB5ABC7F04CF3ABBA4FF50F339D23F29BE442ECC114FA7636
929B054D4232CEFF615E3B8D441A89E0A1F011B89B17B73C54EDE11B65637281
3453021301EF912D4483D4A68BD9D2E0F43A1C3771C5BEB92EF6AD36C0BA4269
38477E6D2F45B3FC34C8646FF9CEA8A682E76CEB6AE29A15966B5F6449B07A6F
1E54D1C0E5F3421786D3EE7ACACAD1FB54548B7804E45FC7B4668C8B552F1628
AA6D1C6C1EEBC247E35F4C539E3B4ECD249B9D9DF20648B6799D96FCA9D9DEA9
422CE264AC25989F4CF50420294A61F93A90E14C0384E3C758F28CA59D73D52B
C712D8CBDD2953E1B10A366FA7D7A43DE27951A3CD2F9A57D313B50367081672
32E79E066EC91BF2BEE09B843C3E9542184EA507495049668119B60DA743A2AB
4B6C4B7D310A7EB822A72E53D4A7A67655DDC3B379328B09F492035F600EA48C
C0ACB09331762BAB3CEEC01DB62A10839A869C68F8E28485E65D4AB24D51D38F
5DDC3BB0104B159F795C1D2556A64E793759BDDD5F1566060BB441780957D6B6
EC0B842C60BE62CCA8729D491460FD35B69362FBA0CAC422CD6C833EB18986F2
F0106862159FF62D7C919C58A6BBB0A2FBAC78F88427A344FB4893B9C9C69D6A
294D9E90F8ED8219C634ACF8603FCE8222BA57AF233424549E2DC14F87F22A97
49909BF3DFA8B81C4220238173D61101DC3BFB1BC7BA0CFE852DE1DB043A2C72
9303F56D02CF059213FF1E7AFC7B9797FD0821B1117D7F1BAA53EB9C6108A5CE
B3BB095003B7FE21B73060FD986E0A153CFABB41D498847861415EC44CAA3AD2
994F5C428CF85AAD2D7D2F7DBA61189BEDC69A61C7024BECF37C1CEC5F1703FC
C2EDA27B387A488E96DFA4017C0146CDA901801099A8422796F5787923C52D1B
6FD7A57EDD7470F0C2B043868E1B03010C2853A90C21FFB9FDAD5FE8479D55FD
2FDD52DAD251CFA3AF7EC2CF00FF4FC66A6F1A42419C752C203958DAC86612FE
5D10A648F4DD5E6A037043BFE229C3A91A0E8DEEAD2136E8EFE33FA48DE0D763
80D7821F16F55330DDFBEF789D1DA6F20E66D09F6AAA302A1FCC95A2E246DB75
CBC38CC32617F27E64CE0A44FC2F12F89331C209C3E223BEC18ECDDE6ED5B7C4
E962DE02C260B18485EA06E1263D2E51CCAA70202B190EFCEA00175A223F487C
96434FF25C08B2CFE34DFD6BED0D436F33F6863A048C97D83D9C968152FA3E85
7C512CC0DCAB15F6940E51D1C64768BE7F21841334703B81824B02387A0BC489
6AF1D998273B232ABEB37BA26A01D6BC407B13BF2F6265158EAB62354CDDC877
89541921C81E58E38FF0CE59B2C9896B201F7A632AC57A25CEA03BBC1765F6B0
594E21969F8A47C93404D648392124322033BD1CD43AE046934A865E6AB7F7E9
D084F883A9692171B70A2D5477CA97628141E10B891837B8430EED25FFBD6FD3
E75F965DBD7EED71F7A0442E59E6F6DC53A5F47699F80667F0EF154ACDA29D2E
9DEFB9240C12C9A16464D49D6FFB7A501BF8BF691831F83CE08C67D9A4BBB306
05F5355F0C92D0155038469069520B6255649D7296BB6B6F4C9E5BDEC2F4DADA
8B3E4B4C6135660BC9CBAB2D22B3C489CB129EF25EF44AC3B6004682A7D32E7A
AC9EAFBA58EA1F6532EBEA70B4CF24261E76145BF0FBE1735E1A7C699F018128
CB93594E1FC174AEF1D438381181E2BA70F789F474004ABD0A21281A43C4D458
6779404504FD1D143F9A958D023B1E156E516A0098EF273DA1086F71A8AD33E5
0E0E355CB7F43F8CE65D580E8F3B9E6555FF01483F8F0B5E9FABA380B47B0386
4399A873FFD93CECE7E3A378FB543F5562DA8F5B5F86B19B098F0D332F98E381
5AD61949943224883FE5DD5512978F388EF918408A99C9E053FE2DD91B07D2AF
49F64D294CAD6C37A4EE9CDC0AAAEBDD34AD17F146AED0DDAECA679704D56A23
552BA226C148BDF1E2D83F3F54F7A6A2926506F0971F740901AA7E373F7B134E
27E698D21E92B108C22F28D58870C08047E8FAE1D6206EC3D39097E9C19A5E5A
F62AD28B601A165DE36C432A1BAC5D625922A2AFDDA2EDD29BCEA6932ACBE748
3CE98A2C8F08A08C36C9ED5D2013FFE048BFAA8B437D2A767B58889CAA58A517
FB057AFBD01D3E3948FE82B26ADFA5FF5B8E323F89455D168D0202C6A32693E7
F8FFFF1222C81780C44F18C37B766022C031BBB5D08B72B81D7EAB702E54A0A8
F31A2B2327F933CB924CBA0F93BB60C2C1AD82A2312F0BB0465298F5D05D2255
0D9675BF8B4FDFF9A4DFAE3C9293BD57941E08C2C72D727F13D61FC74D2D92A2
9BBFB1791CDBEE0875E5E602A45335D5E2E382B9EA6AE751B1744942D27C4020
8739C827494EBBD12D6FD64D18A824FCBEC20CBEE0567E03BD4D598D05FB02AC
4B51AEB2775D204E9D487825E5F35D5A5A2B6A8C04F8620651B60EE5E52D4004
AE26FD21F7E9D20B7A734EF7CF6E7218B982A087CE06C2347DDC4FE2E3A50766
9A7200478DF7A97997CF049A3560959E559EC755A24DBE8E2759611E3B08D44C
34C260818BB0564234F764D8CB19BCE776062A63D374825B4CBB382013DBC8ED
B4A56D14CF25BD6057FAFB5E009228BE6967FD837C66DEC157C8D65751CCD2D0
B8885BA2C71BC802597BDB651D3C17C00940BE15CC8C896E2A3B4E80ED0E57C2
A0F6836D81E03BE6D95F19C4F8DF1CC62F48D4A7577620BBB0961857FF6D008B
5E91A35695E7640154E3A505EE011C7B69E27C25BD34B777F396ED385CE90204
461EA0BA32B47795B98CB3640CD461052F048B4704ABF678D5947FF9F12B8D26
D0945D53F3404C0B4EEDDF2EBBACD1E8F71B92BEDD49EEFEB7AA339ED122D5FF
2ED1093233B995D041246FA2970D9344EC528B7B46667EAAE51768D880752CFC
6C698AB1CA0AAD21A62C325F0501A68FD06B6E1748BD3E8BD9282730FE13066B
EB3B3B070C7CCFAE4BA23AF484074E797BE6D6EF4D28B4C0852336F2FD8EBF21
81569C9E845B34565D0B9FB35F48B069410A0755238871A7253817A789D74230
2520ADEE554559853661D968BA1CD6BB0C8549A89D0EB05275B48C0625841AE2
497AACB6B9BD009E86F3B32A080EB921DB911F9E28182C2E9BAFFB36FACA9A05
102224614B6865F05D2322D82870E894A957AA2DC5AE69E1AEB9BD0FF4096B81
34F6B958B427690D0C80053A071ADEE7B55965859E149E4301E49669E5C671D4
08AC57854A31E71A6D58C4B546DAC8FBB2C599C7BFEA7F1191EA0C411B34BF72
DF94A503EC5EB73C7F76B172718915655E5A2C2CEA5717DC5196FB5177307750
EE392F72356552FB84AEBE669F85023F797CF4FBEC7BFE91B483E5BCB297ED96
71BC7DFEB679A087B3D68DEB81106B4A0BE4A0871CE88C4DFA0F17F6B1831385
1DBDA09A8064504C4FD85EC11B835FDBD99500F025BE6959C422F954B8E8DC0F
1BFB105189923FE20B1EF5A83599A64F33BBDF6C9138EF1025457F5F11AEBDAF
EA6DDC3A5BE1F46021EDD228683CEE5F740696CA082969417B9E30AC773B7386
C57591D0B6EACE64152E0168F409F25D74A1273C9AA4948F82D6C17798A6F2CE
A3F0AF0E488BA0F5ACB75CC612C64A29FB6CD2EB77E3815BA955A596B273DD55
F4481D4E401CA8D78A53CB95A99F0D037DFDD63404DBFDED7F2CD379D93DDBCA
B916A00A9425972A700E3116FB598E963656C29790F622BE3228242B8882BE73
115264BF43359570E090566DA5331316F8215C9BBC125EE309A43AD7C51662F4
2BCE91ADE57B375A8D8CC53CA6C71331107417FD7B94FC5005933301BF3F49D8
EC192C3424C0FB2BD2599F3741FBFF97D2B4A40C087E2702B562A4B9683B812F
695252D979556192F9EA988DF2F62C0DA1930016E5CCCCEBFF7E8610EE615A18
5716473911BAD3A17669676DC4D3AF5FE5E3CF718710E15732C231918B1C975B
9310CF134380BCFF24D548813B0D29FD99F30854027B4143C02B934E59727EA8
BC949B5C38CA1710B708ACE6089D1076BFED2A8D8E75EFDAB8FCA48709308D1C
6FDA00663C6E9A24CE28EF1D321FF3470C2543077B9F1BCC682C365D3EB78606
4A059F9F9D013FF5E3A3FF4AE60B561010CCC15A75AB16AC357CA830DC8D4CB1
080DD85AD70565266308E9A7104A31871DFEA42BEF9E87551D2467D22FCF8FF1
7CC2BF5A7FCCDFF16ACB0D8826836862E9F76829F1074FEF7CD7FDC10C876093
031E540C66769A4DF839BEDF1E47C907DA108976263DCAF39DA49A006883842B
429B1AA835104A4981603312E5FC2B771788443F286FF8E555ACD74D978E5029
CA514237892011EDE1FA20D4C30909288E8771F5831FD09962F2D85FAF2FD1E3
D7DBE48018CFA62531A03585A7D909B7D4A31CAEF2A666B7A6623F7EF4369E02
D789BD0F371AF61C269905D0AA086E7B5F9D2665439F69190670FC108132B1A6
684C863219D3394F40F426C151D3585E19EA5B89422C3D16192C0DD15F23C072
469BC94512032D9F0CA0489B7D4215A2CF5064BE148836E2E22ACC97ECCCAC91
B8F3B72FD9CCB0E6435D87070020781B022E452B2CEF253005029601D04C5F56
196515D8FAAFBA8E1FC32FC53EDF83ADDA430ECEEE368E9C5095A101E7DA1E76
9C83BEDA9F2A028892DF6531EE772962D4DF436EA6267E0558898890AD50F52F
24406E2471A0FAE0C5E6AB023E94647F68BC70A458FB5698F2A3604E1831DA43
7CDA5BC35E3A1D3DF73C99CC21FB5E201C5A4DA20C3F726B3E40650A2277A44B
972E3E518A02618DF9402CC9553C88ECEB1FE04A086E4ABA988208C4F7FDDB0A
BAB21CDD9A6359B5C53968B89D33604C55A84501DAE8BB25AFF2DEBCF01D5BD6
273498398D83AA16072E15B8DA60900F0074FEB67BF5689C3949CBBE7EF28DF7
E062017A2537938DCBCBD3DBF437971874D580985A2A4BD6F3E936D611653D4D
AFA936DD026DBB1811ACC7EF0B6844502931E28D679D7E4B0B52BD7B981CE604
96EFDCE6DC72078840824EB30D736692C0301AFD454C2ADFFCDAF76C326EAEDE
D21C4D389DD0D7687FDC43538330DB3193867951D8F35B7A10427B98816C4ACA
7CF4B6619063641136BC38480CCC0D5340E5FAAF3A5009F1C659D212549EED39
D720486A0364EB23939195BF729AE4165103C4F1FEB8C78AAFF3E2EAA58B4325
19AEC8122281B0F1514EF34001EBF114591846A8D46C192B59B7C24C5B1AFD1F
82649CC6645A8C2AC64826CBF9312DAB990FB48D8497D1756B285AAF2EABF401
76A52938B1C19A3370FE991E6CDBF7285B8C4BBFF342F4B5FF52ADAD15C682E0
6801F5865ABAC434DEF085290CA2CC66F37BECB6C551531358399B1A1CA10C6F
920A02BA11D9567D18C87B84F5EB4B928A11F9AEA323A6FDBCA595102C51AE18
053EC55BC036FFF709539FAD7CFF50336E272D742720BC56DDCB1B39A1DA1414
817C8903F78F83F0EAD7EB750C957C061D6F0DCF0655741B66215CE953AB29F1
DBFF5F05B7A812E685B8DE860BD8EA87A11EDC112885FDCCD7E85B5446ED69A8
407EC64C2BE1DEAC52B89ACC26FAC038D91C72DAD92150DA4998A5DF582C842F
2FE3689A661D2931778B3AA3856A99025ABE6AAE2B6363A4B607E8289AB03598
95029B5FFD2A10AF07B4EE5C31D22175A28893A6BEE1A125C15D7B4ED6A0B9B8
68447550A79E46463CBDF9F88A307F5278DDC61EC08F96B225944692FE04EAB2
6163F8A8FD9D5EF7FD1FFDF1F03A124EAF8AB68631678CCB7F8DE7539F6CB505
4E54BAC9640A245C8A1A7651E1193E68C69ACA993BF9766D1472D46600430F19
A00AA5BAF78F37C270E3C82C3385DC62968F6F526FF7DFE890879A6EEDB37FAC
61D4B2D187C3B5090E9555A2640D28CE7C76B4544B721EE056BA078659D21B2C
8090BAF96C2B5DFFC8D8CD546D44B8F06B9E6877FCF5E672E22A941309ED5EFC
6B5528EB0BCEB00F548E4E1A419F89BF26DC75B49F5A85D9C1BEA71116F57C92
94439C36F330D77AFFD13655DB8FDF8A091A838E71B0DAD6931552C633C9D325
D2E44CB97E2D369AFA03FEA29259B748307F85CA1F74A640F306BAABF24D7BE5
9A78652A6642B8AE2A35D19C117680BE4576E4E85F71734EF243DA429C76D320
B51A8BD0B5BEEB362CADF6985E8EBFB8478EFB93A35C3154CA75D4C6EF58CF6A
93BA1F2B5E69B9D192C0C44B07AF0E873017874453FC71B781E74F4303F1DF74
6EA6AEC815E5CCB759C38616E41C762DF8CF35EE39984E21DA55286EF881BC10
6191C9F96CAB81795DBABEB290CCB757DB12AFEC65DBD35CF71C979D9B4DF56A
AF31D8518734F0CF551FF26502D7352F77476E42EE6E9C81C3B7A8EA94CF2156
4C6D4EBA57E6DD3621A3FFA6262BF1AD0771D4DA63D3373B46BE360600E11857
3D538EF89948229CB0470141771691B8CE7541CB68AD50B2481CAA24AF9C66C0
DDA8283F4A2103719B2D9223C2E8ACC7A5B7790383C8915A695901A934BC8947
1B8116865F77265FF9952646080D908CE546CBB9B4DAEBA04A0050EF6ABE12B6
29278B662B79CED2BCCEBA3CA59083CD3059A0F5ED2B825EDC22820B28837225
30BE97C79799EC0FFE287B5FB4A00EB725CF232628353486CA671D0BD60F899C
A750D12CB77EC0EA7C6A21CFEDFC22D6E56B53917FB79B6791C7FABF58B699BE
BBB67B13548BCE9C705AD19CB1CF2141F233AF889962B614EF8BBD23104B1910
9F7FFB4EDED0610A00861C8CA15153819A437049C3FE3C929C9D5BC525E9ACBA
63CC65D1C639F9477407156589DB55294D717F0654425044ED665094DF88200D
5AF524A6DA8611E89DE5899FEF78E5A986712BCE6F8B47E3D551B1E7C2ADE879
2F3E1454907636BEA7B9B13D6FF5C90F4F8AB750450AA9C0887B09485352EBF5
069F2B41D0906EB01FB5D02132FDAAC5C6EA33AC669A81C65B62F3E9388CF13A
1CA2977F916A4A8A4FDCE67A28990E34E05A37C15748A1B055EDEBDE5B9478D0
85572BC477BF8F9291E042D24374002BDDE19C3550AC6AB538E4FE8467D2082F
F610870A8555F7EB5B565DF89D26839DC9E6300087E2EF6358A8AD5D6B461989
322A1C1C6B23293CD63E4DCBA170FBAB933E524246E8F4C76C3AF40796855DC6
21D8EDB453B7C65F92B84BA50B2AC9CA5856C14B8C0C8AC8BB8576DA509AB82A
B73DCF7743D4E17F8DDA8B27976A46EB12BDCF4A69DC916F3514835343690367
00B5727592E3B546E9A696BD1DA743371DAF08B035A8B4EC5F951EB591AE1D8E
28BAC0BEF36FEE00AEB18EE702D41A9CA598B482DB0EE6DCDF04FCD69F07848C
DC1F4DA6C9E08D892918F23A364F3801E75B0CAA2880178803BC8E5B923FF938
95025F9EAE4EB3F7BD7B8CB3766D75B483DBE224AD048653983A9DB3F814613A
1DCE23F0A02F0E6914BE79A0EE6838B1B4B6A48BE82D75754070DA6450D9138F
66C83935427429F3D5F87F5CC74E2D54178B566B992E3ECEA9B642853B79F61A
9651A29FB7A2395F4232FBC0D15128ED590391B4C4299FE2631021EB32693BA2
8DCDC2E6B6C1B00B7B65584A2FEF97CC89ABE227B6F50C73D3C84127B59D36E5
6BA147EFA74DBA0512DFE09FF6942C9CAA85F845711CB2B27273B418507D8560
C52116B4B77C264995447EB07C029834F5248565CA3D7E20B7689224CEBC8209
23D517DF44300D0176F7A48FB27729919A78357A78ADBCED89A52212CDB6905B
8180A0475D05ADA33577A40A30C80634CFEB64A3B33F7DF6653EB361594AC121
F2891796CDCA9777522E953A8F9C59CB0C288B81466B9B7CDBE4A552B1599A77
FD8B9BF26A6D27A3C0263EF7773ED2AD7A66CF7430A3E7D58C4E7D8E04F1ECDF
EC35FFF3CE4DCA18AE90C9FDD935E6094D44A2DE42736E5AF3C7AE0E1781EA4E
76AAD73F511E1B6BA7C0829E5A97DFE24FE9ED4B5AB985813CCD579CF6C0A151
27541ADB5A5C3B8A49645C1FD56BC616E49DEAFF48B718C6EB995AE267B4B63D
D29DA4CDA52690D5354498FC6D9467E974FEA5518AB1888E2EB39428C85B9A75
BCCCA8AFE7974C81A5C502CFAA182273085BD29B8E58B0F37554C9B9C7D284F1
1A7AD0961D7A0EDAEC7DBD2EE7DAB85A384AE2F16870242C716C6E66458D40ED
9D728F96DB7A567E9DD963B65140D462CA5C8F5998BDE0D62EBEE1FC2369306D
FEF63CCE5A0573FCB1E5352E34F3C475AA8D933BE0BC3E0D2AD572E4E051A836
7E1073D410C2AEFC3350A19A629A0E9FB4D970366C692A217C83125957DBD769
19F1F2B5FD9E842CDF3A25B734CF9DB613920BEA07AFBD0D42EAA260CE908AAD
C01232339B889C943DAFBF84257EC0B860D688F249A096444E4778934BBAC154
AE890BAC52B49AA46684F2584C9940047D505FB04FC8F673BD3C235C0889DFDC
D4BFF17637B7689F3ECC470A0587BFA343A7082665DD817CD325A77E6CB056A3
09634561BDB885323B757922CD579D8CC2C79DF885DAE1762A0A5FFF2B72EEB2
7B09834A515EBFB93406BD3F744F37C97D42DC432CC04BAACE3C876A1BEE7A28
EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 14 /ffi put
dup 45 /hyphen put
dup 65 /A put
dup 69 /E put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B78188FA4BCFB0B51692D07B0BEBB930C6F0997B437E2C51B876B
61A563A2673932C2045833FAA35DB22ADE12102335D36BEEC9D5B0E0CC51613F
0561B0B802BB1E1111E959C7745653516A296E671784C8F9E06B892846BA33E3
8AAE46D5DD487E56A90079CA7DA18D25F3681DD0131C46E14DCDF512FC14D9AC
7341D5046C96E98C17C37FF5841CD42609A279E8E3D4698F925E037E82E12B02
1B0B763596B1655E53AB42EBE4B24C3F2AD371F10BA0F922AE573BBB163DD66E
89F2C4E2B1A15300BB08D9818E77F6552EEE7B621ADFDE8A66A223AD7465B8FE
6B33A7CFB6D6CBAFB766754C0E8934F9AB738930EB75A6A23D6D7EA98B4262F9
F5C1186772E4BB26D5939E5DE4ACC809B0EC851E3DF647BBA2684C5C2EE1F17A
36B7A9714834A884A4957B1168D1E1F46742DC29BEDDA55E45999C1624E9ED30
3EB0CF034D3EA181090A534DA50EA2A8F3E6D5BBA1E2319C65E68A4ABBFD0D32
1B2E2A253AD125B82674AF983FC223A55FBF6108BAD29CDA4B63B8C02E7B2D1E
21F22BF52263A07FB64435BB04DE94DBA4C63F4E5A2F54A5A216F2EED84DCC94
F196531080B2183AEDD09BDD2CBEA2CC1E405654EE971FA87911950FD65E90E3
CE3A2F684C07F2022055F71B8226C915CB90128267BBBC7664AB70ABD5C874C9
90AA026F21239338679E1E8D932840FCA37270F0C153387F50C5E0818304C2B2
101035A41E3E70E46FE47015876B2382447792A61A31DDC35687CF41E6A56D81
5C61493A5ED82995F2BF188A879FDB6C08B6A85884D21DB7FF06125DC64186D8
2794F04E7E986442E3E9F4E403A22EA36E867F53739AA226E5184AC0439E5BE7
AA696CAE186EDE23C984AD7469F69EFAA7BAB16572512F3D4F078EB9F69CC229
247ADBD9A6BD665229E9982136D215BD19ED2622B094CF9F53E122259F2F1847
50F48818DD0485486309D87A0CC9CA64517A5972AC196558B7368AD0E80735F6
83B945B0DFA8CD622F9B0C79E4635A10CFB39EE250AD0FE6FC32E256F125A70D
6D9C9806549F775AA2861FC7EEEFDFF19FE29FFFC0EA6D452CC50BFD5AD6CF0E
AC5B14EC1DB04B66B8BB82BCE345A5FF779385EB4DA75A71BDC8CA772F4B24E9
988B1CC89581689F42194C241522B54D645483AA350DD2FF1A3EA9F8F24DACCE
6A984C0E94289BE31F06A17FEADCD32E4E7B5C1F556B68D0E3AAE4796BC0677D
8A1792B270A469DAFB590080B9F865D19D39B03D577C85C3A6B25CBF36235094
8641625F2E22C8AD15DF6268F076B2E19792D2A5F195EA0A42F09004DC142553
CE124D6A672B2609BC6888CC52EC87B45D880F31F9596E55AC4382EF9265E70C
34EAAD5F882E49E2F0E2FE57C59EBBC90F06F117FC113F234E06790530277656
349F3A094361E475B174EFFB78C87DC1FF5C340F77174DED7A2426F357B7B1DE
DB623F9AA144066CB57E61CAD504599FC721883E0A4766E3442C0A00B251947E
B508F560FF0C02F374787D6F2032165C5334364A662653293F1A6EA754DCFD09
20CC02F7C4E03FE6C5AE5BA11F4A07ED065808967D51754471841855D2728646
508E41479DEF7D940BCD76F4CA99BF7385006608C79184E78C285360216A5EC1
18E613A2B97FED620A905FBE551EDEF4E630F5850E05A3D4F5D3C5CC1FB829E3
640A58C0B0F92F3140E3FFA023C8F1F784BDE680C252CE2092BE34D2C4CA207B
B8E6CD5F8EDA30AEBB17B0C83FE75E8418F3E2D3FB4FE6A0693F754532BF33B2
584429CDCA2D0F72247F730F4FC1E1F4EF7C85795CACAEBEED5F17C967357F7C
7146F11409072B5D46EC25635813AD78321D5AD679F61CC9FD3FB675D5EA526E
B38F5F072BF4FED442CBA8EF510745ED8E6B0A2F1678FBDBB686A50FDEB4FBC1
CF6370D6C642782120C7AB568C5689F8DF917D7BEA736DBCB60E6A9096F16B08
030A6D9805420584C89CB3B39D80BD99D4043BE21C8B8B404688BDDE64522155
4D8A49B3A86BC52D98DD2F4C103A130DA1E75E657081D16718A609646753D0E7
735EB5B64EFFA89177223639B55C9DF71CC60D6B7AE5B786B9929CC582FC5E1B
57C3293EDDF8659BF6F97CF5E6B031A42B58723F258286ADAAB0572AC5A9697E
F631299E238C38F3B72E7AD60E197623989D61DBCC5D623AE3A413AA80FA4D46
07E00F0010138915F9DCFFAAC288249B6E7858C5C8EC9CEB04879924679DA387
AD867FDE643ABD41D1424671E37D3181925883B39AA02814E7316AE4AF6B02AD
DE28E3B19F4D766540C0917A74BCCCFDAE8075D8FC09FA38178BA5E24BAD74A0
1859EFC466DD6B15F287DDF3933642B079EA454A03490544CFB74D14F0AB4914
6453971102C70A397423DD4415E2E284FE03B597F9EB5137DCB62D394089E346
1CE4B1B1A200A92ACF0CD2EB2707A32324EF2C9FB376697C57BC1D4BA2EC72D0
719B0E030D4AA079244B454E597BB3F03484F8442B02D2377D87F833772B7A1F
86CD88A65E263C4D53121F842EF50AC4E87E963122D39BBDB6F7035A3A858033
DE83854E98EDEEBC743CCFEAB90FCA71780B551C0731E8FE78C7039240EC80D0
238BB2A956A124A1F45B7F116E621D6DFF886B3316170C74D1BC646C5340C5CF
34EFB8450828003C9BD641BFA50D7373B84E91B03CA2AAC694BD17AB6797256B
C70C7D23AC8FFD07AA71B6B635D6A90AC9CB95938B09E0728891B9F6CEC35E16
091F2B44C85B706465D58D007CE77487C7DE4DC5FE1072286DFB09BB82B3EFD0
D08546351931BF648C75EC224A326A8BD8625C1BFAB35191E6DA1DE274CF7838
FA0102E444B61FC01B87C06259182EAF61EB8B8A6CFAF51BB29812BD6A364F66
ACE9BF8C0B27B679DCE2D4982E8656427DA1F1ED46137BDBD130E233CD94231D
B45598DB41FB735B92AEF8CEC205A7C1BD8FBDAE329056E2E963D2F78FA4605B
D83C714B316F89A636F199F136ABAA4AF008D546E2A08FB9136DC47B2C56624C
CD8F16B173D09070988EDC5139B9444A29A67DC3DE2A076ED5DD26F5EBE4D7AF
83364649639D1F042055F26EB1B558A71060DBB0E3F7AD2FB2C78102BFD08D1F
49E20DD3DEBC41A2E8E46BA0859B53D70AE479F0EB0C5E1E0AC2A0EF53C02EC3
BFAED23B5BD58C5D24771A7D1159BEB9DE73558E61511247EB6382F2D830F727
E97E5D7D92313F03D5FEC8554FE398688BC4917951FD922B1160148982FD333F
C94F5C961349D8809017F78E1BA407135B3E37EC1D415930742EAB23C2897045
005878A7148090D2C6698E9EE7C3C09DBBFF2F7EACAC30EE7462A29BFFBD6597
2428F8F98FBF5B71025428A55B15F601B2E6C7D3C8101C74AE28D5F12D8636A6
A2C7893653334D584E77FB780CCDEE36A75D8B41171AEDF19844DFDFB048171E
0E3C21C5246EEE9F1AA6780E1161FED8C5EEF99DB974CAEA0537EC7095B67028
E89C2FE795CBBE963CB0EA394E9D7DA8D585B22325D3F4663C6E6CB57E2C59DF
2AAD9C554642D7BDDBFC3AE0521EBB29C66BE6199C83E0E59624FA4F46391A4D
89DF912C3E063089B06E526842D1D4F31F03A07322C14293E130653E557EDAC1
DB08876310E5D83F681D3A82341C746E592C04E3F6F26975AC89791C3755F8E0
ECCDEF125821DA660660D45AF0C87A2E29A4CFD5BA17A026BD87135123A16FD6
26D047C4DB6945E933449714F2DE10F082E353861831B4F04096A4B722773CE8
EE76EC062E16BAA30CFC90A64560382547A1E8F1B7361D3A1ECED57244611744
34ED435D2344B7DFE4385E8CBD40FB03E04EC75CBB1A4989338CCBCB4747CCFE
8003E7A72325B46556BB01504D2A25A5DE0E0AC20A7528047AFD82CF2F850C95
ACBD8DD894A9A6683F846216AF89E8D62F2220D4C4EEBEE6B11F3BAE40FD7519
2530B413D69B57EEBB90E60BEE73E6BE90E556ADF735BC3AFBB16E3BC787CB29
63801602C3C32EC10737CEA49E3986902E2AA3EC7B40E4750EE916E9032D3914
87BE5603537058E44159214160BBF26E1CF702FF4C27E6EB66593F90A54469AB
7F23DA142831177D88FE2A4F4990A2E1044EFB5D56E19CA8F7C687ECA09113E1
0D0FE69F605EC5A19699B035BE606BCEF2F94994B827ECCC0B88F037DCB900BD
9AD44302166C74573F1DE4FD80ADE7C167AC7D8160EDE95381C25A0AA3C73A3E
8B237FBEC212FE11FC458618C39174F348B3E925BB5AE58C39FDD529E5392B2F
8E56AC9CA1954D12EE52BCAF8248F34F58157B0539E5270B3D95F2596EDAA6B8
15D9B84FD80051FAD9C3FAE85BFA4352442EB8C495428032B52A61CD4ABAB4FC
DD466B798C1A4430E5FFB35A23D1EFE6C3828DEEDEBBA634A56C46E90138924B
5C2C0E17B2D1E62A6EBAE4A1DCB3DCC847CA93EDBA8277EDB64DF78BEDBE1073
BB8001D2056A2D4BDFCDEB8DF78A630E60C35F7817C8024B1E2CECC510230872
A2DF0AA00C5245E388A72C53F1F5617CD3E6D12712612597F89E849FABA567BA
A6DD75A5E640020B2459B182FD44AEDAB3FE002CBC96A6F7B96F29F9170DDB7C
26FD4D839B3D3A2D50FBA81AD5E65F14437AB94B9356A16D3C6DC059BDCC37E3
19E61361F79ADA7B13F6C103317D60DC3FAF4338859329A53221CC80D6061617
F03B268C8D80C5AF5B7E536D60D9496731CF36D8DC68879BA1A59D0D58AE69A2
3E2E37C0D445FE04E9D69F0B0C063FFC05961C80235A7CAFFB63202F8D0C20E0
30EB9294E81D8426ACFC1AB4EBA0C4BCCAA83B01ADA2A7BDF3B6F7AA240854F5
1DA72E2A44B026774A048EB0447C2A2EA181EC4AD805EE3969B272D922F9A21E
D5D3581B1425EA94A96140DB77A62008E936252C91B9817D9569724F0DB94B81
87DBD56EC7A7BECCC6966FA36C59A8CACF6FDD99FF68CCECB1109489F270C4DE
4964E5A34B82BC30487E8DC996CC0E15094859E4894D4EA6873ABA0B3A1EAF6D
A41D035FFE01861E03694892D049235F432147D9BAF4D870523B1DE8E79389AF
2710B8A6567DB32DA5A8B43397FD1CC58CC46C5AD271F2C8EA4B903003DA604E
028A6593404518A790E5EB0FBCD1A675B4FA16298219D8582FBC755318CACAC8
C5092BC931B1248A4FD07D949A080044F46D5198E109603CFE17219451D3C050
6BFA3F214D24278EFE9894A01B621A8B5D76C0FD301E90E8F3AE416A82883AFE
5DBC48C8B7FB035B656B46B1F5C05AAD80375EE7EB6D2375CA870D45B872A698
C9F3A087F4FF4D24D4D4F72E1A049904E43C575109CF20DBCD4A2DE24A5EEA5E
12591CC9A0B75E5C8BC82F85B97B4F3032A00612AF7CA93FF7F63410717BEB27
8CC0172F6FC09108873D636E7A90B6E96F195A4FD33C9814B4327AC8002D3D03
6526356FE3731BF2184FCE7AB15D9011A3F229507F58E0160A606F0E3CDBE5E1
E1B8EC9D737210301BC64238B5303E107E3D2DA0CBD7672CF4E8508108F00DCD
844D3C5BA1DF0EC250341072A8851B2E8786850A0AAC01EEA305D7AC27956181
566A259476642FFAB47EE587200F5401360CCEC72C40A1381E37124B8444E82A
453BD217592197FAA3FF6F1A203C68F17BFED4B84B95EA2683E93771F1E94EA6
F89DF164F5EA3620DBCF03C753C49821C6E1303E9875CC8DDD476A213341AE15
5BA081E330A88AF94EEC7F05B7C003E8C4F911DDCAD195AD08390347F39C7B8B
A752B9EC144BA0EA2AA397A2B15915AE58874B98F1C68627555C6A3790C4C6CF
15C24575598A0D02797A17AA092C245259BD175476BFA3B4569BE9C4915C5220
FE2FAA5A6286F03F8BFFA1BDFD6FC565E64EC3C3E280E0924A05977CCE687D41
F8BCCE3E9E028E31B33C6FDEC6F136DC51C42DBA20886703BEC53AFFFD279876
3EE9D4B46E555E71278AF2E592C3EFF718E0BC9368CA8BA188722DF2DEAA7600
C173E1DAE7B9446A17C04CEBE5C03BE7BF8FEBE3C87B773B4D5F9FE5E5D30922
6F0BFA0EBEB02FEAD41013A45AAAFAF5DB1E1ADE23DF9F2C2E6B2D9B73812354
9DC99F9BFECA9C0E68744AFD2EF7BB112B4E9350F3F47309C713ABAAC80DB61E
F1AC85456599D9DE47E9C6DFDE165FB8D943E376F94958AE34E86B6018D30EF7
389805A1091B4C9FD67B5E469848BB3E672D108423B7918F5A3A11A2DE8BA800
4B5C503C496AB51E1C864768F29B9CFDEA8BEF5664482993425EB25DAD1A3C06
EAE49A2AF6EC89F563A7E13BC831DEC27E483F3C25494BA645E0CBF466E16CAD
F29D4546A315D7F7CBFA061DA3E86763D2880384B50970F53DD05310A302E870
7C95230979ABA94D099C6F021F3D8036DED8DF30613B620B95A1DF7362142B25
A7C40F14405AFC1C71D343DA6019FF56B4241B3ED9AFBC64FF86248719AEA2CE
EB2DD2C5F6232DBB6845580F06E09ECA7592CD8EA6D218659361718E095E51AF
88B4C27474BB62A4FD3BFC0088B04129F8C0B38E45B50C188E7AEE825FF7A4ED
B57F05A32B26FBAE1B24D8F332778E3456B1121EF10A5C337A09A0F2E2A7A8B6
FEC9FAB27B927B6DE7F115F03174BBB785BDCCF15CDC823988FE31D9593F1593
EC8ED2DEF262128515891BAE99302A98DD84B0674E52376B21D1F9720A0F6036
C9F09BD943E255D18B06B3DAFCB8D0A45462EF8E63CDF7FD3C9E6EA198528847
E4383A5871BAD177AD9C9A342100BF1489D070584A264CF83B69676F616EF308
204B59D9D1DE14A4A1BAFD87A57C6249975D3C5F10A7BEEDBABDA7D5EB46EC21
72EC4FCC3BB2E46108B5463CAC7F87B1939250492F02637FC51527CA9C82491B
3978E8309DBA3CD5711C044583642E4E9CDDE2A263C2D516B3F167E0B9D66BAB
430EB7C1A367269B5EC94E094D3CD7CF0EF69774C96642A8E026106AF1F23964
729C35D538269900A25512D4314F966FA379DD5E4AD88F1EE3E9F0A667AC4BAC
1146CB12D1291A0473055B56D0F6757E92D79418236D6A54B9D396D183846789
461D71189000C4F034F83C6ED8B0B42D4A9DAA2E61DA7F95B9E2C710BE1370FB
94C5A77B3750CF94865BB00D5C628A232D05401477A46CEF9AD3156BE6A89777
A3E59D45A11975610850AC252BED9ADEFB4289EC585BC63297032C41D8E6F2EC
1D31F98626E155DB80ACDFFC32DB29BB5E2C2739D5BB65C1D94B99AFDDF473B4
F4D5FF482D76E3DAAF39005837587AEC48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /periodcentered put
dup 15 /bullet put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57036431151EC603C8BCFE359BBD953AD
5F3D999EFA3E40D4C38BED0D7A872251C333BA38795F6783D83611E7CE9E146E
537483C41D947F2E50AEC949349321A32EFDBAFCA64A0F39824B350F095D4707
604DA3982669C5EDC911D14FBA3E2123E0A65395A17585A77EF1D7916391C682
BD0A00C25C4583F5ADD41B1DC32A6F4BCE7E1FDC9114BFFF41815A49D423A163
FCE509B6C5264685163B09839EAFC7BC3E7CDF784E852435DC6FD4E738562FC8
9E20A4E708DC223156857157997605631CB3F656877002013A951B5EF2AB05C6
96ED7E470BADA87882ABE700EA2D20BFFB1471E3450A0EEDFEAF92A6A7FEF207
35CBC0D4E5BEE75F0EF91C50BA7E80D7F43622DBC72E2403B8B7E4F62802681A
99FC62ABADA15ACB36
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /numbersign put
dup 40 /parenleft put
dup 41 /parenright put
dup 50 /two put
dup 53 /five put
dup 55 /seven put
dup 69 /E put
dup 80 /P put
dup 84 /T put
dup 97 /a put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CEB0F7F496AD
7A919E031AC74FE7BEBA9DAFC46FC250984181AA58FABE1CF516AD7D1EB408C9
5CD3109A8C42D2C47326A3031F336B79A8E06B5A0BB1E17B05277CA833E23A03
D2E242D4EDAAAB5BA3A41BE95A16EEFD9BF2D65F6D21EACD4CC2D055638663C8
823F9BD513C7E54300C160FAA7957FF9472D7CFC92AB9245492D6C40611AC518
59A10CB0F69EAC34078B1831EEEF416813FB8EA79FB7BF36F372703F218368C7
F0F2A3F52494736F1505BAD60E90F13DFD5B2C93CAEF588A721206F6EA620B22
21EECF5AC02E615C8AE09345F7F7C9F21218887757245F925121ED1621308ACF
2F395805CA90FD8872A5BC2A52EACB20CCE29C4CDE0BAC5B365D7161E4CBE50C
98D6DA395E292E19876C6AAE72736DB75A040692EE20CDBF309DF4608E266309
52A47EBE4DB46091CD14FEC2144811CB2B7A88C218CEF47C7BC5581ED9E05B01
0D1C49651D4690A08BDC1A8863B05D759BA4162E66E5A299FFE338D364171A51
D9D6867EF1E4FCFD1B5EF84BB104947416E4575D2967C97188C79183885BBA0D
05300FF6ADA9E2F0CEAE89606F6CF5D2D399A52CCBB8AB904D74FA8618240FDB
D47352DCAB2B637FE62AE5DD66A61113EA11416033928353DC706EA48BD5662E
30E02E059E0FE5EA090407A54DA862D75452559F7E172B8A4E6BF10F6CB5AD63
888C26E4800704AD858590B3B0BE05DE49D760558359290CBABCA09D32E602B5
6DC3FE2A5FE74D1533D5631CF5BA7589A57013AF24C2BAF59C5C53A027FAF479
016594B95B4F08D99D55884AE54E4FFED1349238C9C67C0222721EDD63D413EC
6A2E30CEB48C02F2F8F65ED329640D16A2383F9E8D1CA2E6BF59C421F7DA6CE3
53729E1B76AE61B4C62F122A9FF248B3F518976AFF056206FA66F8C4D36D73AE
A1931EC12BF3EFF8CC6AFB952DAF823E82BC8447633EC52CEAF8908FE605377B
60D8BA3688C28E1B64D36C9B79282D0D35DF83420FA875A01F89B4E57D58BDBD
985EEAA30C0AED995FEBE26351CDCA149F6FE563AAFA2C76B645FFCA33206C14
46CF54CAD7129A5EA264FB09884810E16E68A6B3E109918689989E8D52409381
37B84F178417973D8E162FFAABA9270C630D541AB9E487A8EC8F795E6B7A5605
B20F82F32AD21EB267D05F0FD7FEBAF2462D2AA078371916741DBE8991B48A16
0DC20136D961D93C56441E8AD3BE9B7FBBC8D8E10AADC49BC8282E119DF1796C
82C4D5C72F51B0DA573D2FA2A0FF3A8DA505BBB9C8164817108141D1F584A817
94D323C02E828956483767E1E580645B5183DC1E88B8E46F785E4CCB0B902C52
543C4ADA618DA089E0140EB3161060C7C202E48A9E714938E6D7D9508ABE8268
EC05211EBF001658B45863358F9A397D9DE22D94355472A08F26FE7956F15E93
47CD3BEE41B1CC3EA188568D7644A39CD5A34308CD0D0750273F050E2EDB59E5
0B2BF73C0D10FF4FD0A5896B73772E0D2E91A39EA1E3BC2E9AE7824AD966DFE4
2B50A626163E24006C6C6BB19323E1EBA1055C451988B53D8CE7760A5AD2C81C
8A205933560A4A03B7D61D06D394F2F015A8652EE543711C4ADC3CCEC3640525
ABD8A50EE392E7C7849B632EB7EB1CC9824DA0C418355ADB767C26790F9EA933
40B4F197148B1CC3FC6AE436CDB4ACBCDED3F08284B9605C293C43E337E82831
09CAB03484CE3F5DED53C67A9F8A30F8595C20418BCA9CAD764FCD6A48704444
FB9135B92C8E42C99FEBF8EC962989D6AB0A9B2B469DFCCB2E822AEFF2F29BB4
2CC3BB12882F7B8ACE913D35ACB4434F46CE1A30DD61C4AF51E89FCC7F1327D2
27BFF674F3F1F81ACEFDD6FCF6D4CF9294888A15D7CFDFEC6A7E3B2C095C5DCA
DC340CB6043496B9EAF398A7BAE7BF8E3AECE702401DA8BA9E78D9C4222BA24F
16C085DC21A269343A984EEFF1DF2AF1F0B00DEAA4CC0585FBA97F50045F0D89
EE33660DC4B666F19AB822A7EE50FFA7C68DA1FBD907D2D390AD8725367BA297
91578B4795323E609A04C26BF8B65FCAB8126E56F6C79DE89F62459215CCF3FC
7F3ECEAB54970BA8C903747C149FDC8F00E6B64FAA7BBC3FB68939A575533100
FC35FD6E57B74D821ABB15A780DECB891EF85D43594D35D042CBB4432D9AB8BB
48128A643BC2B8708AF19961F3AD35AE8E5774D4B0079C1C7C6135775DB507E4
3192434AB5D929DAEC78DCE1F687BB09F73FC5743B7B3466136052486E7022B5
1964326D95FB2A1AB451BFE8E965D1CA2F1998BDCCB43D0F81F9A4750E382505
E55F5B4BA3DC9003F4083F2A1DCF856FBD0D35C0FA9C6BDFAE6E7A74D39F9068
ACDEBD9FE3E8E971C8DE773D9E4ECA63104100E376A69B47FD2B9FE2A19FA611
4441DC210404A6372ED1B7A69A6BCB6E12F16F5D02FC6CC3C87910C3D970A9E6
66B36F30FC011C4094D5E0F5296813CDB70EB14390AC3C5F08689C858DE7E6D4
FEA2663A1B657B68626D8181F0A658DEF82B2D6A24A6A92B4E3FCD8A2D781FB8
05D3132F5EDC9D5A846A9BEF4F35810F35DF2AFCE30066E5A9913A2F5601BA07
B6361E75E1CAFEC64CDFA9CF187AD6EC37C04AD5780EAEF403961DA3001784D0
8C106410ED462F66163C624C3CA8ADCD06084B4382C64D2828DE16A2E61F4CE4
DC836D444048ECCF68910E05CE457A21521CBC24899B68E0C64688F20CEBD805
642728C4E72934012A79AA081EDF7B96E98D37F75F5731D42D2089BEC411A7AE
56C2B1B745DF4825EA10308FEF6628626304314D7DD2FF745F696FCED16EFB79
0B5C5D11B63DF888F93A651EF8D68C2C7D779F0AF4CADEEA23AE87B68AB62973
9F83BFB5DCECCBD912C5B8B57DBB911149D9A3DD3C756DF0298D9BBF3593F36F
135D7964F61DBA3081D1EE5BD75428353AD5C3AC841E0558479F461DC88E59EF
BC9E3A1306D65809CC59409DA6741965347B07DDF332B7BA384081A7A23B89DC
B882A02294609C1C1580E9D6E6E6D57E752F1BF39533FF8FF89C79AF6549820A
9174FD284C02990F746434858F03262F16F30114A9D2032FA9D8E33B3AAE6F27
446DCA65308A33B9ABF05521596DD1843A5995CC98A16DCD22CF92936EA7D71F
471C87A19321D31A033E9B0781EEA6C322AD138CC851474777CA9C6F2E6F042E
111363CEADE68D2858BF4006934EC3FA2C2919C1B11A0F2C298CC28DFFB66693
B3F3B13B03CBA0AD119C39E1EE10EF465537BF810D7A22A29A1F827E0AFF2509
B7CD1505DA84A33B4DA37DA14B880582CCD035E8713EE2ED656582A028E70057
0F5CD2DF51FEBD1F2B4698700FAF74D24F92A8DFB971ABA00FC65B288A2B88C5
1A2A51692DAF0287A3A5611794F40095291E0B4D3EF1A70ED86A919455AF6495
7BAF597293265FAA57E96E4A79BB98809B5F725653C7AEB69573BEE4A2ABA542
284AF8B4221CE18388A029AD761222FBC12864DC07916924495C8E4008C87CAF
19CBA1AF5FFDB58F0DB206AEC652D862ABA427F8F04584683F8413FF656E244D
E9469E1782B67B6471042495768AD5478B5E7D60B81551E4DDE1AFFEA55AD7EF
9963B95897E2B91C3401FD65D6628ABE3F20EA2460927C515417ED18228BAA3C
93C2C4F7F723806D6B957AC407FD9ACF6BC55D964E800AE92BD2C613AD86A572
B3EB5F5F2EBB4063E9E504EBB4537F2F5C061F366E06F37AEF898C317C09A8F9
B41EAB9B7BC89223E7DC5325838015245A282A22EA06A4667536CE8A201A2D3C
8D8447363CCF63336373534608597D5C5DFF21E51AE2064F7903AB79491C8430
E9DE1593F4B9B69C740D526BFB2914AF251DB3A722BB189FEA878E099B4A4409
4181BAA709030E0725FC66EF1FA8787E79500F511451D96C32A4CCFEBCBD7DA6
FF92709A7F6CDF1590C2E9F8583963E5CC4F58AF6888DD7829A87875EDA1D1F1
2BEA5EFC52BC37678F76948803F8657FE9E5E67A8D526B944F2DC1868D6D78A5
20FC358575931341207FC91501577E2DC76B441CEFA475A3AAC86BFB28D083DF
AB087E92452EBB8E45BC1E3E890E67B324A4F6353B3EFF8327F41B8F1D981882
F89FC20853D837ABDFE607654442DCFA051726B52606AE8FE7B1038BA082D955
EA113D75F0FC9B9B57C370EFB3B7C40C9E2444D5A3405EABFA04EA1367C658D6
0756B248F873D2FE0C804E94B6A141CDE64BD28A17459D54B9F5860DB97491A4
DFB5973F7BD5BBDDBAE5749B762D5FD230F8374DE11B65D0EE06E678C095300B
31F4716DEAE8A78FA1633D3F564BADE5AE93CF86B509932AA23C4C4E9420E916
D635547C546622CF5CC741CF8163570AA493566BCA6B0070515CD84518806079
9859F8FA916B763E83632764369C0E6497A95D96A8272561347F9902E80BD06E
285D21
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (exam2.dvi)
@start /Fa 157[36 38[23 23 58[{}3 83.022 /CMMI10 rf /Fb
135[39 1[38 45 28 34 3[42 47 1[21 2[25 42 38 1[38 42
38 1[42 24[62 13[25 12[30 32[47 12[{}19 83.022 /CMTI10
rf /Fc 167[120 88[{}1 83.022 /CMEX10 rf /Fd 133[37 44
44 60 44 46 32 33 33 44 46 42 46 69 23 44 25 23 46 42
25 37 46 37 46 42 4[42 2[62 62 85 62 62 60 46 61 65 57
65 62 76 3[30 1[65 1[57 63 60 59 62 1[39 1[65 1[23 23
1[42 1[42 42 42 42 42 42 42 1[23 28 23 1[42 32 32 23
2[42 1[42 19[69 46 46 48 11[{}72 83.022 /CMR10 rf /Fe
134[50 50 1[50 53 37 38 39 1[53 48 53 80 27 2[27 1[48
1[44 53 42 53 46 16[65 10[63 3[72 19[32 30[80 1[53 12[{}25
83.022 /CMBX10 rf /Ff 240[42 13[23 1[{}2 83.022 /CMSY10
rf /Fg 135[62 3[46 46 3[59 65 98 33 2[33 7[59 12[85 3[80
10[80 13[59 1[59 2[59 8[46 46 4[98 35[{}18 119.552 /CMR12
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1018 530 a Fg(Exam)38 b(#2)g(\(75)g(P)m
(oin)m(ts)f(T)-10 b(otal\))p 0 TeXcolorgray 415 895 a
Ff(\017)p 0 TeXcolorgray 41 w Fe(Exp)s(ected)28 b(v)-5
b(alue)24 b Fd(is)h(giv)n(en)e(b)n(y)h(summing)h(lik)n(eliho)r(o)r(d)f
(times)h(v)-5 b(alue)24 b(o)n(v)n(er)e(all)i(p)r(os-)498
995 y(sible)k(outcomes:)741 1177 y(Exp)r(ected)f(V)-7
b(alue)106 b(=)1737 1098 y Fc(X)1586 1293 y Fd(Outcomes)27
b Fb(i)2022 1177 y Fd(Probabilit)n(y\()p Fb(i)8 b Fd(\))18
b Ff(\001)h Fd(V)-7 b(alue\()p Fb(i)8 b Fd(\))q Fa(:)p
0 TeXcolorgray 415 1489 a Ff(\017)p 0 TeXcolorgray 41
w Fd(A)34 b Fe(P)m(areto)40 b(e\016cien)m(t)34 b Fd(\(or)f
Fe(P)m(areto)40 b(optimal)p Fd(\))33 b(allo)r(cation)g(or)g(outcome)h
(is)f(one)498 1588 y(in)c(whic)n(h)f(it)h(is)g(not)f(p)r(ossible)g
(\014nd)h(a)f(di\013eren)n(t)h(allo)r(cation)f(or)f(outcome)h(in)h
(whic)n(h)498 1688 y(nob)r(o)r(dy)k(is)g(w)n(orse)f(o\013)h(and)g(at)g
(least)g(one)g(p)r(erson)g(is)g(b)r(etter)g(o\013.)54
b(An)34 b(allo)r(cation)498 1787 y(or)28 b(outcome)g(B)g(is)h(a)f
Fe(P)m(areto)34 b(impro)m(v)m(emen)m(t)f(o)m(v)m(er)h(A)29
b Fd(if)g(nob)r(o)r(dy)f(is)h(w)n(orse)e(o\013)498 1887
y(with)h(B)g(than)f(with)i(A)e(and)h(at)f(least)h(one)f(p)r(erson)g(is)
g(b)r(etter)h(o\013.)p 0 TeXcolorgray 415 2053 a Ff(\017)p
0 TeXcolorgray 41 w Fd(In)h(an)f Fe(ascending)33 b(price)g(auction)p
Fd(,)c(the)g(price)g(starts)e(out)i(at)f(a)h(lo)n(w)f(v)-5
b(alue)28 b(and)498 2153 y(the)34 b(bidders)f(raise)f(eac)n(h)g
(other's)g(bids)i(un)n(til)f(nob)r(o)r(dy)h(else)e(w)n(an)n(ts)h(to)g
(bid.)54 b(In)33 b(a)498 2252 y Fe(descending)e(price)i(auction)p
Fd(,)28 b(the)h(price)e(starts)g(out)h(at)g(a)g(high)g(v)-5
b(alue)28 b(and)g(the)498 2352 y(auctioneer)35 b(lo)n(w)n(ers)f(it)j
(un)n(til)g(someb)r(o)r(dy)e(calls)h(out,)i(\\Mine.")e(In)g(a)g
Fe(\014rst-price)498 2452 y(sealed-bid)44 b(auction)p
Fd(,)f(the)c(bidders)g(submit)h(bids)f(in)h(sealed)f(en)n(v)n(elop)r
(es;)44 b(the)498 2551 y(bidder)27 b(with)g(the)g(highest)g(bid)g
(wins,)g(and)f(pa)n(ys)g(an)h(amoun)n(t)f(equal)g(to)h(his)f(or)g(her)
498 2651 y(bid)32 b(\(i.e.,)h(the)f(highest)f(bid\).)49
b(In)31 b(a)g Fe(second-price)36 b(sealed-bid)f(auction)p
Fd(,)e(the)498 2751 y(bidders)e(submit)h(bids)g(in)f(sealed)g(en)n(v)n
(elop)r(es;)h(the)g(bidder)f(with)h(the)f(highest)h(bid)498
2850 y(wins,)c(but)g(pa)n(ys)f(an)g(amoun)n(t)g(equal)g(to)h(the)f
Fb(se)l(c)l(ond-highest)37 b Fd(bid.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1902 523 a
Fd(\(5)27 b(p)r(oin)n(ts\))h(Name:)p 0 TeXcolorgray 392
988 a(1.)p 0 TeXcolorgray 41 w(The)38 b(follo)n(wing)f(game)h(is)f
(just)i(one)f(example)f(of)i(ho)n(w)e(game)g(theory)g(migh)n(t)i(b)r(e)
498 1088 y(applied)c(to)f(in)n(ternational)g(climate)h(negotiations.)57
b(\(Rep)r(eat,)37 b(it's)e(just)g(one)f(ex-)498 1187
y(ample.\))47 b(The)31 b(game)f(in)n(v)n(olv)n(es)f(pla)n(y)n(er)g(1)i
(\(the)g(U.S.\))h(c)n(ho)r(osing)d(whether)i(to)g(uni-)498
1287 y(laterally)25 b(cut)i(emissions)e(\(\\cut"\))h(or)f(whether)h(to)
g(dela)n(y)f(\(\\dela)n(y"\))g(in)i(the)f(hop)r(es)498
1386 y(of)31 b(reac)n(hing)e(agreemen)n(t)h(on)h(an)f(in)n(ternational)
g(climate)h(treat)n(y)-7 b(.)46 b(In)31 b(either)g(case,)498
1486 y(pla)n(y)n(er)j(2)i(\(China\))g(then)g(c)n(ho)r(oses)f(whether)g
(to)h(agree)e(to)i(an)f(in)n(ternational)g(cli-)498 1586
y(mate)25 b(treat)n(y)f(\(\\agree"\))e(or)i(refuse)h(to)f(b)r(e)h(part)
g(of)f(an)h(in)n(ternational)e(treat)n(y)h(\(\\not)498
1685 y(agree"\).)33 b(The)20 b(outcomes)g(could)g(b)r(e)h(considered)e
(to)i(b)r(e)f(measures)f(of)i(so)r(cietal)e(w)n(ell-)498
1785 y(b)r(eing)24 b(in)g(the)g(t)n(w)n(o)f(coun)n(tries)f(\(U.S.,)k
(China\).)36 b(Analyze)23 b(the)h(follo)n(wing)f(sequen)n(tial)498
1885 y(mo)n(v)n(e)k(game)f(using)i(bac)n(kw)n(ard)d(induction.)p
0 TeXcolorgray 888 2906 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 2.0 SD  end
 
@endspecial
888 2906 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 2.0 } false /N@T-0 11 {InitCnode
} NewNode end end
 888 2906 a 810 2843 a Fd(U.S.)1596 2646 y
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 2.0 SD  end
 
@endspecial 1596 2646 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 2.0 } false /N@T-0-0 11 {InitCnode
} NewNode end end
 1596
2646 a 1488 2583 a Fd(China)1596 2646 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 1596 2646 a 1596
2646 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 2.0 NCLW add def /l 8.33334 def
/r 8.33334 def /h 3.81946 def /d 3.01385 def /flag true def VPutAdjust
LPutCoor end PutBegin  end
 1596 2646 a 1527 2671 a Fd(Cut)1596 2646 y
 tx@Dict begin PutEnd  end
 1596
2646 a 2305 2516 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 2.0 SD  end
 
@endspecial
2305 2516 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 2.0 } false /N@T-0-0-0 11
{InitCnode } NewNode end end
 2305 2516 a 2338 2541 a Fd(\(10)p Fa(;)14
b Fd(10\))2305 2516 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2305 2516 a 2305 2516 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 2.0 NCLW add def /l 12.65279
def /r 12.65279 def /h 3.81946 def /d 4.9583 def /flag true def VPutAdjust
LPutCoor end PutBegin  end
 2305 2516
a 2200 2541 a Fd(Agree)2305 2516 y
 tx@Dict begin PutEnd  end
 2305 2516 a 260 x
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 2.0 SD  end
 
@endspecial 2305 2776 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 2.0 } false /N@T-0-0-1 11
{InitCnode } NewNode end end
 2305
2776 a 2338 2801 a Fd(\(6,)28 b(12\))2305 2516 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2305
2516 a 2305 2516 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 2.0 NCLW add def /l 21.26392
def /r 21.26392 def /h 3.81946 def /d 4.9583 def /flag false def VPutAdjust
LPutCoor end PutBegin  end
 2305 2516 a 2128 2541 a Fd(Not)g(agree)2305
2516 y
 tx@Dict begin PutEnd  end
 2305 2516 a 1596 3166 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 2.0 SD  end


@endspecial 1596 3166 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 2.0 } false /N@T-0-1 11 {InitCnode
} NewNode end end
 1596 3166 a 1488 3103 a Fd(China)1596
3166 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 1596 3166 a 1596 3166 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 2.0 NCLW add def /l 12.43057
def /r 12.43057 def /h 3.93059 def /d 4.9583 def /flag false def VPutAdjust
LPutCoor end PutBegin  end
 1596 3166 a 1493 3191
a Fd(Dela)n(y)1596 3166 y
 tx@Dict begin PutEnd  end
 1596 3166 a 2305 3036 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 2.0 SD  end
 
@endspecial 2305 3036 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 2.0 } false /N@T-0-1-0 11
{InitCnode } NewNode end end
 2305 3036 a 2338
3061 a Fd(\(8)p Fa(;)14 b Fd(8\))2305 3036 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2305 3036
a 2305 3036 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 2.0 NCLW add def /l 12.65279
def /r 12.65279 def /h 3.81946 def /d 4.9583 def /flag true def VPutAdjust
LPutCoor end PutBegin  end
 2305 3036 a 2200 3061 a Fd(Agree)2305 3036
y
 tx@Dict begin PutEnd  end
 2305 3036 a 260 x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 2.0 SD  end
 
@endspecial
2305 3296 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 2.0 } false /N@T-0-1-1 11
{InitCnode } NewNode end end
 2305 3296 a 2338 3321 a Fd(\(3,)28 b(3\))2305
3036 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2305 3036 a 2305 3036 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 2.0 NCLW add def /l 21.26392
def /r 21.26392 def /h 3.81946 def /d 4.9583 def /flag false def VPutAdjust
LPutCoor end PutBegin  end
 2305 3036 a 2128 3061
a Fd(Not)g(agree)2305 3036 y
 tx@Dict begin PutEnd  end
 2305 3036 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 533 4103
a Fd(\(a\))p 0 TeXcolorgray 42 w(\(5)22 b(p)r(oin)n(ts\))g(Iden)n(tify)
g(\(e.g.,)h(b)n(y)e(circling\))h(the)g(lik)n(ely)f(outcome)h(of)g(this)
g(game.)p 0 TeXcolorgray 529 4236 a(\(b\))p 0 TeXcolorgray
42 w(\(5)f(p)r(oin)n(ts\))g(Is)f(this)i(outcome)e(P)n(areto)f
(e\016cien)n(t?)35 b(Y)-7 b(es)21 b(No)f(\(Circle)h(one.)34
b(If)22 b(it)f(is)681 4335 y(not)e(P)n(areto)f(e\016cien)n(t,)j(iden)n
(tify)-7 b(,)22 b(e.g.,)f(with)f(a)g(star,)g(a)f(P)n(areto)f(impro)n(v)
n(emen)n(t.\))p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 840 523 a Fd(2.)p 0 TeXcolorgray
41 w(\\A)38 b(P)n(areto)e(e\016cien)n(t)i(outcome)g(ma)n(y)f(not)h(b)r
(e)h(go)r(o)r(d,)h(but)e(a)g(P)n(areto)e(ine\016cien)n(t)946
623 y(outcome)28 b(is)f(in)h(some)f(meaningful)h(sense)f(bad.")p
0 TeXcolorgray 982 805 a(\(a\))p 0 TeXcolorgray 41 w(\(5)41
b(p)r(oin)n(ts\))g(Giv)n(e)g(an)f(example)h(or)f(otherwise)g(explain,)k
(as)c(if)h(to)g(a)g(non-)1129 905 y(economist,)23 b(the)g(\014rst)f
(part)g(of)g(this)h(sen)n(tence,)g(\\A)f(P)n(areto)e(e\016cien)n(t)j
(outcome)1129 1005 y(ma)n(y)k(not)h(b)r(e)g(go)r(o)r(d.")p
0 TeXcolorgray 977 2157 a(\(b\))p 0 TeXcolorgray 42 w(\(5)41
b(p)r(oin)n(ts\))g(Giv)n(e)g(an)f(example)h(or)f(otherwise)g(explain,)k
(as)c(if)h(to)g(a)g(non-)1129 2257 y(economist,)h(the)f(second)e(part)g
(of)h(this)g(sen)n(tence,)i(\\A)e(P)n(areto)e(ine\016cien)n(t)1129
2357 y(outcome)27 b(is)h(in)g(some)f(meaningful)g(sense)g(bad.")p
0 TeXcolorgray 840 3559 a(3.)p 0 TeXcolorgray 41 w(\(5)40
b(p)r(oin)n(ts\))f(\\If)g(situation)g(A)h(is)f(P)n(areto)e(e\016cien)n
(t)i(and)g(situation)g(B)g(is)g(P)n(areto)946 3659 y(ine\016cien)n(t,)
31 b(situation)e(A)h(m)n(ust)g(b)r(e)g(a)f(P)n(areto)f(impro)n(v)n
(emen)n(t)g(o)n(v)n(er)g(situation)i(B.")946 3759 y(Do)j(y)n(ou)f
(agree)e(with)j(this)g(claim?)52 b(If)32 b(so,)h(explain.)52
b(If)32 b(not,)i(pro)n(vide)d(a)h(coun)n(ter-)946 3858
y(example)c(or)e(otherwise)h(explain.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 392 523 a Fd(4.)p 0 TeXcolorgray
41 w(Consider)26 b(a)h(division)g(problem)f(suc)n(h)h(as)g(the)g
(division)g(of)g(cak)n(e)f(or)g(the)i(allo)r(cation)498
623 y(of)g(\014shing)f(quotas.)p 0 TeXcolorgray 533 805
a(\(a\))p 0 TeXcolorgray 42 w(\(5)34 b(p)r(oin)n(ts\))g(Economists)f
(tend)i(to)f(place)g(a)f(great)g(deal)h(of)h(imp)r(ortance)e(on)681
905 y(pro)n(viding)19 b(opp)r(ortunities)h(to)h(trade)f(\(e.g.,)i(allo)
n(wing)d(the)i(buying)f(and)g(selling)681 1005 y(of)27
b(\014shing)h(quotas\).)36 b(Brie\015y)27 b(explain)g(wh)n(y)g(this)h
(is.)p 0 TeXcolorgray 529 2157 a(\(b\))p 0 TeXcolorgray
42 w(\\Ev)n(en)37 b(if)i(there)g(are)f(opp)r(ortunities)g(to)h(trade,)i
(the)e(initial)g(allo)r(cation)f(of)681 2257 y(resources)30
b(\(e.g.,)k(the)f(determination)f(of)g(who)g(gets)g(the)h(\014shing)f
(quotas)g(in)681 2357 y(an)c(ITQ)g(system\))h(is)f(imp)r(ortan)n(t)h(b)
r(ecause)f(it)h(helps)g(determine)f(whether)h(or)681
2456 y(not)e(w)n(e)h(reac)n(h)e Fb(the)34 b Fd(P)n(areto)26
b(e\016cien)n(t)h(allo)r(cation)g(of)g(resources.")p
0 TeXcolorgray 748 2597 a(i.)p 0 TeXcolorgray 42 w(\(5)c(p)r(oin)n
(ts\))g(Is)f(there)h(suc)n(h)g(a)f(thing)h(as)f(\\)p
Fb(the)29 b Fd(P)n(areto)21 b(e\016cien)n(t)i(allo)r(cation)836
2697 y(of)28 b(resources"?)34 b(Circle)27 b(one)g(\()56
b(Y)-7 b(es)55 b(No)g(\))28 b(and)g(explain)f(brie\015y)-7
b(.)p 0 TeXcolorgray 725 4013 a(ii.)p 0 TeXcolorgray
42 w(\(5)27 b(p)r(oin)n(ts\))h(Do)f(y)n(ou)f(agree)g(that)h(initial)h
(allo)r(cations)e(are)g(imp)r(ortan)n(t)h(in)836 4113
y(order)k(to)h(ac)n(hiev)n(e)f(P)n(areto)f(e\016ciency)-7
b(,)33 b(or)f(do)g(y)n(ou)f(think)i(that)f(they're)836
4213 y(imp)r(ortan)n(t)23 b(for)f(a)g(di\013eren)n(t)h(reason,)f(or)g
(do)h(y)n(ou)f(think)h(that)g(they're)g(not)836 4312
y(imp)r(ortan)n(t?)37 b(Supp)r(ort)28 b(y)n(our)e(answ)n(er)g(with)i(a)
f(brief)h(explanation.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 840 523 a Fd(5.)p 0 TeXcolorgray
41 w(Catalytic)27 b(con)n(v)n(erters)d(are)i(devices)h(that)g(reduce)g
(the)g(amoun)n(t)f(of)h(p)r(ollution)g(pro-)946 623 y(duced)35
b(b)n(y)f(motor)g(v)n(ehicles.)56 b(Imagine)34 b(that)g(eac)n(h)g(of)g
(the)h(500,000)d(residen)n(ts)h(of)946 722 y(X-ville)26
b(\(including)g(y)n(ou\))f(o)n(wns)g(a)g(car)f(without)i(a)g(catalytic)
f(con)n(v)n(erter,)f(and)h(that)946 822 y(eac)n(h)e(of)h(y)n(ou)e(has)h
(to)h(decide)f(whether)h(or)e(not)i(to)f(purc)n(hase)f(one.)35
b(Imagine)23 b(further)946 922 y(that)i(\(1\))g(it)g(will)f(cost)g(y)n
(ou)g($100)e(to)j(purc)n(hase)e(and)h(install)g(a)g(catalytic)g(con)n
(v)n(erter;)946 1021 y(\(2\))k Fb(e)l(ach)35 b Fd(car)27
b(that)h(do)r(es)f(not)h(ha)n(v)n(e)e(a)h(catalytic)g(con)n(v)n(erter)f
(results)h(in)h(extra)e(p)r(ol-)946 1121 y(lution)d(that)g(imp)r(oses)g
(health)f(costs)g(of)h(one-ten)n(th)f(of)h(one)f(p)r(enn)n(y)h
(\($0.001\))e(on)h(y)n(ou)946 1220 y(and)35 b(ev)n(ery)e(other)g
(residen)n(t)h(of)g(the)h(cit)n(y;)i(and)d(\(3\))h(lik)n(e)f(y)n(our)f
(fello)n(w)h(X-villians,)946 1320 y(y)n(ou)27 b(just)h(w)n(an)n(t)f(to)
h(do)f(whatev)n(er)g(has)g(the)h(lo)n(w)n(est)e(cost)h(for)g(y)n(ou)g
(p)r(ersonally)-7 b(.)p 0 TeXcolorgray 982 1503 a(\(a\))p
0 TeXcolorgray 41 w(\(5)19 b(p)r(oin)n(ts\))h(If)g(y)n(ou)f(and)g
(other)g(X-ville)g(residen)n(ts)g(are)f(eac)n(h)h(allo)n(w)n(ed)f(to)h
(c)n(ho)r(ose)1129 1602 y(whether)24 b(or)g(not)g(to)g(purc)n(hase)f(a)
h(catalytic)g(con)n(v)n(erter,)f(what)h(outcome)g(do)r(es)1129
1702 y(game)j(theory)g(predict?)p 0 TeXcolorgray 977
2735 a(\(b\))p 0 TeXcolorgray 42 w(\(5)k(p)r(oin)n(ts\))g(Is)g(this)g
(outcome)f(P)n(areto)f(e\016cien)n(t?)47 b(Explain)31
b(brie\015y)-7 b(,)31 b(e.g.,)h(b)n(y)1129 2834 y(iden)n(tifying)23
b(a)f(P)n(areto)f(impro)n(v)n(emen)n(t)g(if)i(the)g(outcome)f(is)g(P)n
(areto)f(ine\016cien)n(t.)p 0 TeXcolorgray 986 3967 a(\(c\))p
0 TeXcolorgray 42 w(\(5)28 b(p)r(oin)n(ts\))f(\\The)g(cen)n(tral)g
(di\016cult)n(y)h(here)f(is)g(that)h(eac)n(h)f(residen)n(t)g(m)n(ust)g
(de-)1129 4067 y(cide)e(what)g(to)g(do)f(without)i(kno)n(wing)d(what)i
(the)g(other)g(residen)n(ts)f(are)g(doing.)1129 4166
y(If)k(y)n(ou)e(knew)h(what)g(the)h(others)e(decided,)i(y)n(ou)e(w)n
(ould)h(b)r(eha)n(v)n(e)g(di\013eren)n(tly)-7 b(.")1129
4266 y(Do)36 b(y)n(ou)g(agree)f(with)h(this)h(argumen)n(t?)62
b(Circle)36 b(one)f(\()73 b(Y)-7 b(es)109 b(No)73 b(\))36
b(and)1129 4365 y(brie\015y)27 b(explain.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 392 523 a Fd(6.)p 0 TeXcolorgray
41 w(It)20 b(just)g(so)e(happ)r(ens)i(that)f(eBa)n(y)f(is)i(curren)n
(tly)e(running)h(an)g(auction)g(for)g(a)g(collection)498
623 y(of)33 b Fb(al)t(l)j(\014ve)k Fd(*NSYNC)33 b(b)r(obblehead)g
(dolls.)53 b(Imagine)32 b(that)i(y)n(our)e(v)-5 b(alue)33
b(for)f(suc)n(h)498 722 y(a)g(collection)g(is)g($20,)g(meaning)f(that)i
(y)n(ou)e(are)h(indi\013eren)n(t)g(b)r(et)n(w)n(een)g(ha)n(ving)g(the)
498 822 y(dolls)27 b(and)h(ha)n(ving)e($20.)p 0 TeXcolorgray
533 980 a(\(a\))p 0 TeXcolorgray 42 w(\(5)44 b(p)r(oin)n(ts\))g(In)h(a)
e(\014rst-price)g(sealed)h(bid)g(auction,)k(should)c(y)n(ou)g(bid)g(an)
681 1080 y(amoun)n(t)37 b Fa(b)g Fd(that)h(is)g(\()75
b(less)38 b(than)75 b(equal)37 b(to)113 b(more)37 b(than)76
b(\))38 b(y)n(our)e(true)681 1179 y(v)-5 b(alue)36 b(\($20\)?)63
b(Circle)37 b(one)f(and)g(explain)g(brie\015y)-7 b(.)64
b(It)37 b(ma)n(y)f(help)h(to)f(write)681 1279 y(do)n(wn)27
b(an)g(exp)r(ected)h(v)-5 b(alue)28 b(calculation.)p
0 TeXcolorgray 529 1996 a(\(b\))p 0 TeXcolorgray 42 w(\(5)d(p)r(oin)n
(ts\))g(In)g(a)g(second-price)e(sealed)i(bid)g(auction,)g(explain)g(wh)
n(y)g(it)g(mak)n(es)681 2095 y(sense)31 b(to)g(bid)h(y)n(our)e(true)h
(v)-5 b(alue)31 b(\(i.e.,)i($20\).)47 b Fb(Hint:)j Fd(Consider)30
b(the)i(highest)681 2195 y(bid)25 b Fb(excluding)32 b
Fd(y)n(our)24 b(o)n(wn)g(bid.)36 b(If)25 b(that)g(bid)h(is)e(more)g
(than)h($20,)f(can)g(y)n(ou)g(do)681 2295 y(b)r(etter)h(than)h(bidding)
f(y)n(our)f(true)h(v)-5 b(alue?)36 b(If)25 b(that)h(bid)f(is)g(less)g
(than)g($20,)f(can)681 2394 y(y)n(ou)j(do)g(b)r(etter)h(than)g(bidding)
f(y)n(our)g(true)g(v)-5 b(alue?)p 0 TeXcolorgray 538
3891 a(\(c\))p 0 TeXcolorgray 42 w(\(5)20 b(p)r(oin)n(ts\))h(What)f(do)
r(es)h(it)f(mean)h(for)f(a)g(pla)n(y)n(er)e(to)j(ha)n(v)n(e)e(a)h
Fe(dominan)m(t)j(strat-)681 3990 y(egy)q Fd(?)36 b(W)-7
b(rite)27 b(a)e(de\014nition)h(and)g(then)g(write)g(do)n(wn)f(or)g
(circle)g(one)g(of)h(the)g(fol-)681 4090 y(lo)n(wing)k
(\(\014rst-price,)i(second-price,)f(b)r(oth,)i(neither\))f(to)g
(indicate)f(in)h(whic)n(h)681 4190 y(auction)27 b(eac)n(h)g(pla)n(y)n
(er)f(has)h(a)g(dominan)n(t)g(strategy)-7 b(.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
