%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95b Copyright 2005 Radical Eye Software
%%Title: 2008-1.dvi
%%CreationDate: Mon Mar 10 09:22:30 2008
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR12 CMBX12 CMR10 CMTI10 CMSY10 CMMI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe 2008-1.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.03.10:0921
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def% return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def% return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 60 /less put
dup 62 /greater put
dup 98 /b put
dup 120 /x put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667271C1FD06DBA26AC7504FCD81979D968F25FBF2C61B4822DFD416D2
8FAA9120511EF04ADA431D911C4BBFC9F75B97286EF528C117FEC1C8FF9C4275
F7C4B6595CE4072590A210C7740E110C16073A9B3B2886FCF0AA1D57A5117DB4
CB7EAAB4063AD29EB90F423D0F633A2FFCDE865A642A17C3C883256B9875FFEF
0062C5B8583BBEAC76C4262B753BBBD4231E48AE5FEA54974091ECECD1101192
55780F806CF0421B5FB4C54BD6356483D7BBBD2F27BA06FD90854F00B55FF754
B90A5B40BDB391E3B9C1E0900D66E1D62FA6D50B17253DDEE3CCDB393F02D5CC
8B06B4474A876670547198EE620F9DEC39ABAA101BEC03F7211C51F671D269C4
83C948262545E7D60358A2B903852F511B9D535447E0E243BB095E6588E9B36D
3C99B1C449E4FB444EC09F535AB6C394AA89586FDB9941A9FC26CAE9E284D2D6
2D285134DF0E136F00494DDA458FFA128D0B252733A483A0BADE473CB9FC3EBD
4529B78032D9D39B602E78D22BC8EEDE44CF8F6F15779B07C3C49CB8F47D39DE
42123D6C12576603E4FC1AE70CD4AB37CE2E396F1EE6F201107FF44B81F36C33
3B38CE01C849D160D9FD3185152188C0906F14C787C8870189F6243846AAC07B
1224D93ACA99F9A914B430DE79DF83BE3D588CDA8CA8B84A9B1AB90385DAABAB
02B78B6D9FDA3EED7ED0488727A1D908385A36C70FF6EF56E3F6FA5D7ABFF760
F20192BEEDB86043FDC7A761487EB98C5DF65FA3A569C178EFAED7DE1C3F5BAA
1EFDB60119719F962BAC96837373184DDAB3D0C6201206ACFC6C02D5556B70B0
AFE638305463D5384325360B813650A170AC7B786E3A58DC024A5A37A3B5A3D9
CB24DEA3E440545C2E015A6FE0536BCEC48F9684DA0A4F69D49EF098AAE29B61
6AD5097DD443816D16CE5AA323524D6AA7CD510055B9CAE2AAE5C36B5A3B297E
4DD2D23B6C977C71E0B88D73194F72BA2F296D96912669A0F5B8BEFDFF569C79
A21B68EAD889BF2EDE00377FD8915337E566CEB258F9BA2DE202A4AC7020EC1E
08D9B70EB477E08441DE784BE0DE22532AF7ECE71F60563B9B11B26D51298E05
49760B40D2CBB06597A4887E3CC1D0ABBD5B5A1283C9BF39617E1C74D4195F50
AA8BFD1899AB39A87049A7D4BAAF4C354FAF5101BB0411E13BC3AA4DE7A130C1
34E2394F002E34A51574DDF8E51C92D1D1E2C4946D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57036431151EC603C8BCFE359BBD953AD
5F3D9983B036D9202C8FCC4FA88AF960E1E49914EC809263862931DB14B61EEE
6D37A389B488D0B64CFB7DA527AAED80494F79A073D895AA287BB47BD5246090
A76CE91680C1F37E77037F276BB789562C9F6EF55B70A908BB796404E1A607AE
F7FD408B9BFE94D46EA4A9ADE519AF64951144EE2EC1C682F522F500AE2DCD93
DD2CAC5EDB11C360972DF7B145E951ACAC91F823C26C9132D7FDB1B98E1484B3
BAC1EDCAA45D214F0511337C33B847A6D0EB96C7D709BCACC9A8E69DAB6B43BB
4787EFB2E4DDA476DE3171417D4499DDB862759D6FA8F39096AD160235678C33
2CAC8B5D00DA5B40496DBC2D77D27E01020DD2613B9B01A35154F5F8981E07A5
2E2AB588958580EC177D5969
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 46 /period put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B3DA102B
6DF94E62408E24154BAAC66B2B249C695BC0FA37A28699D9C0F3EE94AA32E3C5
8F8D7F803B5D25014D43A353D719B14B247A87898A960DF68C0C0BAF70C83917
6E9F7B3ACC64DBAEF3FDCD3A80C0AB907EE342E543D607556CBE5A9089B86D1D
E768F27D74A613F3ABF883222A8596B542EBF54E9DCE327B5682AEE5F6BCC38A
2A052EC4018AE3189DC1963BA39ACDED8F0C60C83F8873FBBF0302010956C520
A7F3F8ECD0F177EDF5F4D5522C5984A3678FF32EEEB570B69C142AB89467641F
917155D646DAF3352E27BF2AA0746E062E48532256AF364EFC0F0AAE3766F68E
89DF9AEAE43DE6B2E2EBCB666FB344286445FFA4714A341419C7FE51D43CF1B8
01FC0B0071F73EA4FEB08FEAB64FC98F56EDA5E27B7A71F1F8E350BD94C093D5
9A86175C46B78C65BD85BA347656778AEEBC81467970F644D32D6F2BF2A3F14A
6B05DAE8858A02D212177F15DABAFB2961F2746D4C3176FDDB5AB9821C57C417
0C8E0DC8B069090D8C95DCC3340643C68E5CFA60C3F41326579B869EA5D832D9
85119A957DE314546187E8C4AD9841F42DCAE231C5FDDB483481FF29FDE695C8
45FEC01A911F1390E3E3B80D59A30805601366FC0535E62E0CD9EAEBDE4DDEE0
260B40C3F20D80944ADEBD496A4C82985FA55362CEF5AA91377F3E5E2C3300AA
C24A28B5DE446EA56CE7173EA3A3983F8A39C1C04DC1117A9AD9EE90A6B0A6B8
340651456ECDE53615252416539F5CDCC809BBEB1FD5312D83E683356670AACC
97E95202657848F59D564FC6F4DD08792FCA977F09DBB0ECF3A57BAAC110DF24
29AA33642650834A240116F984213A043B38FDC4922254789F951FE907B95881
392D5C07DFD22F4FEFD663C5F27E0ED314F0217D72A81F97CD619F8E41D2C103
A4AE8AF82E1824DB1554F4AFE09D0D1FD4E4E72CEF4B55E1428091F0073FE94D
C38792F9B5061C0C9223059FF912AAECB1A028971B25C13AD37C030CB68CFD7C
0DBD1568C651003865ABC7B08480D26ACB12B677058054233C32E746FF1D56CB
057E84CF0E8CE3FF86D19CADAED0E3AF01F23D92D68BE1640B7723F8406AC042
DB2E9B5A6AF04BB8583C856510E5B136618CAC6414DDA98A70B55B258B6CF8F6
EB5FF4E148B23CDDEDE82460C2FAB0ADF448979D671B07C1BE1C8D9DB544B282
5A483067226A3B909B26682C7E8B93D65A92BBC2041772735065EE1356E3A78B
6A911EC2822070A0E3B08500F0AFD5F83E3EB6D0B16CBBC9F6C7646CB072DBAD
2CB032BBD28DCD137AE65F9BCEDA2D4D22AD5AB21C8C1D35CF0704CE12371BAB
524C24BF27D8997C0474F4FF7C42196930D0E98DA619631D98F89EED980A5E63
17E55A8ABAA5299604731B97337100F70B068D791982F01E39E84439B8287101
15EDBEAE6420E28BAAC897263408A20D511FCF11F00B7DEBE54EB911D6968736
C99C9B980BE2D64883A0D90792A7D433060CAC1F085608E487D575087CA8F6E4
D802469A5A218ED067BAB54229310D0A884D37DA5162D402369AC488949D2940
DB0D1248C6BE737D6B19C354E46C8CC112BABA42DA7E9058BF16C16598133B9A
4E665CD0EE9B20D6C2CAE00452D0D7AAA029410A424CC9602FFE58E226F33266
1094B6FABA4E767C7055C4DEE35E66B0DEE7BC06E71ECB5344B1B89CDE4F9CC5
8967C89060AF34808E1FA1172F6AEB75FB58A2A8E8379F7E904C99692EA65C76
E3C462A6942A5244C59A34D2C11D4C1EDBB5DF018E13ABE0F8317A389791CDE0
52F98212B37B782314B713040BDFA62DF2B7203C24197B69832CC04171145DCE
5B23E9AB049D302E5A4E97EA1DD04ED5837B427308CC737514D8D70FAD8CE17B
FEBCB0DD3BC66F1B7D4E2BFF0F8D93463C7A7E81651B10917B3B77C1984017E6
03BC0B739FDE5134258E5076C9678D76364A3CFFFD00B33191A862C67CD1944C
D291F8DE370E255A5817555512CC62C14F23140B19B86FEED25F54F9E1330A47
739B54BC449675256CB3A1861005DBCDABF12704ADE09126C63959E571440B47
3E4DEFAE36241A6515C58643438FA7D92FEC4D1B9975BDA1F0320A6BD715FEB6
9B9E3E997497120FCF594D72B43CD7BD8889040F14FBBC5B981C71A1FB184E48
E7D556ED8F306C880EEA81EC0BE73EAF66F65D9530F5E59BB21A245693CD9257
58A6B99CACF59891A5D31CD112134AECBF5643D8076F9CE77CA9109816298C57
57270EC7185D61F3BB9B0FA2F775B5524B19A1837E80A5D66E383077FA74C3A9
6F16DFE92EBA9E8E111A8116689218CA963E9889EFE50E453CDBBD5B08396B42
7FA6725BAF041B2B2AC02477047EDB351EED4B9566DAB81175E3D6D738923D8B
E3C2AE1C56D035B932217CBF7DD64A2CE2EBFFFFB6B06332A54EAA34B760CC41
F55FCC97378815134A290FC610EE5B6A1285E888842522568330D8A3FC920454
D2D79DB82C303A5E9AB449C405E6F455DE4E990D05DAEFF27AC792D8F6ABF3A1
CEF1E578EC30202D5B79CDEBEE2C65F703657ACCB7FF7E925A96F5B7963974AD
69DB7B1D86B5CDA6FD90FC90D591BB876E4FFFB3E9CDF06E79B2FB473BB23578
502656223E7639AA98DCB4CDD8E669753D6909D6CE026E56A955CC79D61608A0
7268C1997DE79AF4CCDAFBBEDFF09DEF474134CA5AB2D4468C0F725C2AB6F51F
1D575F3FFAA8608C55EF149EB57E704BE0A6EDB26B5A1E94FE36D1EA9B38984C
FF970AE080718FCA90861160784C525139F90CFE940AFB43472C61439DEB2601
C70A13F465F11856C837017E8F8467B166999B8311314D0FCAC2813CA6F3C5CE
15835B73E108A1AE19C1AD9CBA5404E5365D379782212EAFB430C88401CCE2CC
1D91E0034FF6F621D4B8C3E763B3282BC73952FB688ED3570D6CC6EF7DA7DB61
E99CF94C0AB157201A5936C960F1460B004A078CF49804E040FA079A7F58F44F
AC866283249AAAA61FB33DB30F9F14CD9F25D8F782B13E4C225F82FF46444B3F
CF2B458AA9252B6185C6689F45DF8EF6A30ECF8A9AC77A699581861292003E0D
BBB31C811907E6A543D2C648E33B37E3A4632003A87C6D8B2BF2479175032408
81D06DBF45EB3FE9E34B8A8EA30AA8D9827EEE107C0BFA4C6CF200479BE8A075
0B338CF1C93231C97BAE5FA86FA6E0A6A50835C92463D601460293B3733666F2
CC93A175E0D5A65E61CE70127BB7BDAA84494E878B48B0441E59709F2F2D0A03
67E17AD783C0C7A85158817D1506573A3476629D5605C7ADF813918210002D35
CDE86968E9AAF22EA604BCF1615B3A05197D9A3663CBB432E2D8225F8DFFE4D5
F47F55215CFF3E6C1B4B7C8AE75B631D4636928FA49364996BB82777C5DFCA20
E198FFB01C0BEAEC9A15D627DA3B83CE02F699802B88FECA597F8A5000852A78
C8EECADD9BBCBADE86EC8D8621761795DE2942DC3C8690ACCEF8EC43FC1C2C2B
B9019EB680805C3874D7449074B6D08654D0469DD69915F3951AB6920C72FBDA
A650834F824F04E0ED25606B2AA1CF59AAABD7BB072CBC051E410D2EA895993D
B152563CF418040A2AC12DD5CA859AD82C4C12C8B5C47AB7A0B87E2DB478DE62
5F2A4EC1288228AE5B5A6492702BFB2C85CC44819D940AB034446711A5058824
7FB007205CF649283C887E8C773F31D0A187B5ABDAB063A160565CAF83500F6E
167F699C944388CBC40D69A56B2C77218C6D62393A3A02C2C5EFA5F52CBE3919
FA7482D22BAF665397BF0AA4A9D84B1CFAAEBD1FE3E7C8954CA393FA64FFB32C
1A0EEBAD5F95F8C74291D68E4368EECDB153D1253343F0FEC6EF6FE71CAEC5D8
738AA7C2C3E230B2CEB8AAB183DAD551D082BB5B9C41304303330FB545643BFD
B9A95D0BF41E9C69F70FDE3B5F6935D8BFC8E445659D792D85420CD2FE7271CA
A8028010BD4FFB65D04FC7AA2FD757F2DCC1C83FB05091AAC5D840D1BD91552F
B4F6FBB7C9631FDC5A4D7E9E7F4DC3FF2DEE1E5D778F5D5BE3A0C12750967726
EFDE4A225BFF497A6C1BF3D26AF7E28552E627B3A5CEE4FB9C58199A8707414B
7E2CA7F5A27C67DCD82E69615F645B272ECAB8ADBF2AB8EC45E59D46AD10F444
AD5A3AE20377B601B78EB6D864D1CB771F7869D96800065239ACCB15E67A19EF
5B243E3ADD651EC212927C85873D6D7B2641E44044BA2DA735B887258F1E577B
7354D064BBE84E414BAD2350F1B772B18E0034A4873A3BD7BCB9E055AC612ED4
294F3303A00A0C67A7B2EFC3C0CC59C56FAF8B11B296D987B98A6D2A446778FF
15D890678A5CAC706A198E791575AD0DB35EC428DCE97C16A20D8DD7C65B691D
2E4B98E51B30C607F04427157BD5B53D449C30EBC3DEFA6D63A78643163FAB8D
477CD6861EA67BCD64E0A682631C6A28845377491B5B0A4B7B4EA31C4B95B310
A9E4E452568521A6F7C7076421EC12CAE71971B12F019D6D69EAD524B02269B1
CD7BAE0735B8DD74BF6F5116BF8735710D873C40C5E9553553E06A541BEE9625
E1F564146D0B58D5CD5A39C4415F13B3360CA80E47CB92B0B3E49E428E4BC01F
1B8D7862A52ACCAC763961E146A3E88C29B397F58623FA02FB59774EC255AC54
24B8D78A2D9F6D03ECC3C0AC5FF2DE0C28624AAFC201B73F9F727DF82D450548
42D69BB46C88734FB135FE4CFF13514A2DA742E35E0CD17E1B951F2C071E33E4
3BA79EC21546F7311329783A028B6FDAC7BA5CA81C987FD3FED7ABE2ABFCF540
8CAD8ABABDF3272D59D4E1A10C2298072A654E6E8327A40579E23BB3D8D395E9
C86E8AFF40E1FC59FA81C5C280E7ADF92CE42DD4746332C9FA9DF16369FA6988
C9FFC1837E68B7EC79AE50065A5FE19E1E1A7DD68E9C85DF1881A6D1BA235164
80F442AC637A4CEE0D85EFAFCB497442CB29438E4BFE365E6F579013A61E2E18
BC860F8D930C731E0185EF7B0AB3F32568B94642
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 36 /dollar put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 124 /emdash put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BA8B194E613047BF469C7B4261CACC1DF1648E8A86E926F8702B5ACA
6CEB4E3E85EF23EF5C9C53097F3BF17243B8D4BF0E6B0C5982FD14E4E916D363
E265322DF0823E9990F966A842ED69BADFAC2CD1754FC84C0FF6750D2373F997
362DDA16A0D73B178FB7B67307204AF174AB871C254B8E7CD77058113B702B2C
13F341A972B0B8EFEB67FEB9BC3AD786EE2880AEBF96A02CAEAD8252EEA08799
37C4EEC3DB23E2EB1C523291C59C87146E80CFFE79F58F29A11E48CC6A8AE100
116920383B0A69281E3DD8A266D4864A64205A59976EB87E6A05028584679B33
04F5E545748872FACE5A1AD475D19CCD33559230048DCEC6FF1972F83B2966D4
3815155BA8B7525DCF548F37818D034843FB6925F499359933AFC43C67753AF2
865FF57A92F678EE3A056AABADE63266E27DC0D18D36839317A57C024EE41D2C
246C285CFC845AB8ACF0C00272C7BE8C87D21CE028B83D137786AA2637A941C8
C1A3D216D41F9CF93F9FCEEC1A93DD064944571026FF1D3965B4AF6560D7E334
7BAC6FD3CC280608B8C9F1E30284AC7DF913CB4B0725471FF82E6DED15B32E69
0589BF794EA774CAD2ECA4581BD58ADB6AB154DAE79624327559465FFB90BB57
BADF1019900BD7DF733F062DAD9541A72A0D9F4EFDADB14CE5089CDD41BD89B7
D05BF3C57C5A6B61053A79F8529CFC2177F0060F8F94009F5573163BAC037AA9
19EB41A2A7E0C1B97EF578F264A44A9D6175C9EA2184C2C5A9CCB9688E76ED5A
A7BAEBEB668CE13286559F1254CCA06667A86A00C3A63DF1E31276A5091340FA
5EF971F08399B1453DFBEF79570FCFC6600196DE9ED27F8DF650516F54C844F4
5F721483791B16AEB07B22CC9A1E2A74625AC9FEC3FDF4B289A60805793D904F
A4650A8FDDC5FC36043C847D1BD581D4CAB1D767079A60DC81049E2B911C5C75
46DA6547A46577668CC5A3E07D021C172810C3F47366BFBF8721AAC295059B37
7DC58FC79F4BF48FB7EF964D23460E54C2D49B2140FF19F5A2C3548A1463D69E
B1B1164EDDC161347B2FE81252FCC0A218008CCE87508EEA4A8F68A5745AE8EE
1F8ACD9031768D7E666E25494A29DA65B2D0E4E4F8E36434591905BBAA86657F
8C75429DE3A5DAEF4FB3B136FE6D1810A15792FF96E5EFC600F9B7AC1787DA64
5B23F0D4A6D03073D658C8E036E4E671E52588E38C2A60461817A5D4D5022E30
7E56251C8E6882BF9A712449BD79EBC648CCDF1690683929CF957CD9DDFC74A5
15D7309B34A897C24801EB2EAAB158CE6E937E3DA9B8EF1CC6F93885E646AC2F
30930C2AB7113EB9599FE99BAF52D0FD1F7DBD973ADB465A6283626C222DB4B9
2DDFC945F4B464F05F1EAB060382EA8BEDA6C25AE721FF0B0694D08B3B3A8C8D
B4A0C2F4BEEC0389C0E76278C8215B9F542D811284F86F8C098CD4C04368C335
EEB5D8A9E8ABCB1FB7859066C02B85B3A03A4AF4F0FA7E8DDAA7E09A5965E23A
ACD1C978787C8926D3E9A98484680217B80EFDAB4822820F3D59D88DA65F8B8D
44105E1B10094AA167CE994D016CBA45368C0B232995245623F243E51D0C7138
D32D57A6415EC64B66BF66F2E587EBF13ABA84EEEF1EB2E2693E0786C452670D
7C544BC55DC58F56805CA84BF7B34DF8044C9FC98F26904E89F31235CD7377F7
9960173E5905EB30397508CA3B562B14449925189AC73B31875266CE576D6C40
1D4A13D7C99B72909575532840688CAA86CF94B198FAE413CF0538A3B3721BDB
576E1AEC8FE05F650EAA4E14CC266A9A7A0913D0BD3FAEF7FE8DB08EFBCDC681
95F70942E1E523726F34D98C07BC323EC176891EB7FA687AFBFC62DA15AA0C7D
F19AE237A74BDD0C18D2FF0722C4F17E56E5A1414222921F4D11D27878665DC0
39A4615A318E8B59696713DA71EF494A28B85A471FE2E378E4EDB01621328DEF
3B7DF6628EB73F31B15EE35A67129B305AB52E3C38727EC9CA3DB659C5840864
705A5C4FF5870FF3C9B5B7A3B31FB36FCC38F336717DAE9BC3AC86236FA11502
3BEE6AA3D5FBAAFCC07F997CFDEBC334075BE8DBF2A971EE7792DFDD3EED3FE2
76EFC2610CCD2B7884B80EE9F17CFB75C4ED7899BC7AA7B0E32556334319BBEC
A2E87AC0DF5E547E68F267980BFE77C45203CD3048ACC370A9AB00E6C7EAEEC7
6C4A086171D2C3073DC6D9179C6C764D965E51E958F0FB00356F9606E2FFDD12
BA5B6CE534935E2F35A8223F3570316C2E71D531738F363801570C7AE292785C
F576F7D1AAB242600B3AA10E6BFFB50242B676FBE05F37A4705D66FDA0D43AD3
E3332E1E8C07F4C589AA68EF8A60ACAC6055396BC6090ABB4B05211B458247A6
62B0601107FD91A1E213CEEE8FACC4F00265649A5ABA9E87605FD4B545C8CBA4
07BCAF5D0BBBA630DDD750CBC596F59028A3CEE7391DC1A1CA480E6BC3F10558
5672FA4359819F4DF53B97BFB57CF4F92F6064941E62A2346266053817138146
966B486E63AABF7D1E607D5B37B63C4740B8A334800CA4818BFA552E2FFE7628
2DBF103FF0BABD94161C82ADDDE62002DF4E0FD076C64FEE6015B37E5D177D63
0EA145AB5B158F28BF5D2A435C5404A1A0F3D0F00E2994186098C694EBF230BD
1574E3C0CD60D2C544855F1736D1FB3BE0AFA7D2E6CC3FAE48051757B65B4413
D9D94492AFE6D06611FF0BB48E6ACD398477E169DDDCBAC70BEBA4B0B6940CA1
4208A36E0FBB4C65673F392B3F9C46FCDB0B1C3B3D01B256BAFF99CCB05ABC50
FB473EEF712BF2AD99A5D0C2A3AD1B41F2797F8AB40F4D7A6001B2562B258077
CD5119F3EBCD3FB24B932FA0943B4170BC9EBAA4979E7A88058052A83A5ED2EA
062052340A3A19E89F7C8F8F63BF4ADDFBA2A196FF527DDB128259F6A897644A
21ACCA90BF392CE01EC2DE26092A8605873F30509A62C683DA3557E5A837415D
06048E8DB27FA7E4CB7B423919D1C531FB798F9F961247BBCE16B5E00D92DE93
31E6B951FACB978B255426564F18E4A56A727D7E4237A9EB8C2DCD255C4836A4
79EB2313168135978219243F5B0F4B7197FC8BAA981A09858841CBA5C1F31EBE
A013B3DBCB2305352298F5AF4024E40CB59275FCC91B28BF6E8ACA902E848E61
20C9C3F3E31B8B22EA397A8AB2DDD94FF0BD65901C56D5C384A2AE3FC61F7E65
1216FCA4C857184A482F38849375CAB3B4261E0B85142B51DDC3CDCFBB9C9E9D
21C52FF2DDCFC115F4807252EA1CE9614E497D22ADF96B9E160CC4146E843F7D
AC19AC0CD183A70C12962D2EDF4F6BAFB4B7D60917572B637B9D72D4C9B16BCE
EF4717DB4683AA0EBD45A0EAAE61EBC0CA70F940BA6B3B64FD2A0F7A33D6B057
4F0DCFAD8CAAD9C994497629C9DB2DC03AB4DAB1418163BF7F2FAA2889B3E578
68BACD1802981D889A700933391757424CF864A2241419FBEB69D133B3788022
F755225ABAA5D58F865EEBBAAECAB65A072DC93AABE157438DEB734CCB06A8E1
654AAAC300E6A54018C7D18F82EBEABD367A09D2AB7045856E543C98A0560686
619C7A7BF24C1FECCECF46D6C349959C453F62B121DFF93796031D4ED95FE2E9
C477E49A2D09D3E82A924B198C28DFAC547520C17F67E8DB51DF599F093693E1
B2E078032A22AC20492564B002199EBD81990015F71A8D51552B188680E43CF0
52EC009F12C4A0B5FDF055A36B1777E54B67F88DABFF24FACE3681AB4438545A
95C0AD3D04C0F7F266B5C7ED5343D2B2C2BEF67EE9CF72C3A8B00FDADDA8ECE9
B8149AF9AF4187D213A344766541ADCD4B88FC632FE04757D757CB943F4A9D18
972D7ADA9B8D5B56E6A53DC2378E413C49E12FF8E670073955E03A69F1EF078A
E1D273E2B74564EE96CFEA2179B41B0329DA9BEC80DA94A04FE8D3C5D5B3BEA5
8823C872DCDF8D298866E11A5F48027688978B81C45C141602A3EF85F488FA5F
919A4E5B4860A46BC6DC909FA75A796D3E113ECC8A03B2093BD3786A8ACC7A2B
F263073A700FEDB3DFFCEC9AAC9468BDC43435CBCDB2C7D493D0D12E70CD5495
701FAA2A6683577765042834D6276E8D8FF1A80F5B55ABE7F5B94D36D1D8EBB9
72AAC98ABDE5865B1B19B84E0DBA2236278B10FD8E5FBDE1F9EAE14A6CD035B8
B77029644ACE52E9F352EBC5BB59AAD72CC6A0B250082506CABD4F91F43E3F05
371E237FDBEE0A55206CEEC0A22A68F7E25AED55046179AF109E53724A910E25
28A0DCDE4DF73C8CCB1B40936519AE8FD741DB9A9E9C1CE4BBF3B22C9F3D3A4D
D269FB001C5F21D6B743CE905A25E80BD7ACC314CC987BC32A3B1DFFD9472294
79139F2384B454DA3D5C246BBB8326FBC0139C8E377FABD952D3F132BE1A1B16
0003F569FFC6C97E12604D1C934E8FF4664904F8F481ABF4EF0EDFD642139C99
0A179A0B8AF1C2429D359383FDCCC70208D6DF86C275FCD66F7738234E53EFB2
DA9CA6E6C6ABE2BEFA998F4F7A87D0C3941B00BE340B5AC36E37116C2ED118E7
1AA49F7691343CC007E6DCE22801E20DA199D46615EF9BECE67C6E89C373DAD2
BD719E0B10E977A85F5BC6112FCFC2DB057A2FB1F68B8D6E89D9F5CC585E9417
6EDE342E80E2DC05C9B775126BCA03843AAE801CD2F7574101CBA7E25F4F47DC
DC0E36B339E3C236EB7A87F0E2FD265B5DBFAF1B5AAF2093CB4C66198130EACA
3FDCF7A5D4AC5B12F80FEC758703D25C9B8227BD3C7A20512CEEA2A25B59D02E
77CA1ABF66C7393CD6F5992CF24E830421FE8F6DFB6E6676EF800E9FFA56DC7D
A5E1A2E5E420AF714834A8F44FFEF0D74A32CA3C50A8C3941F2674482D53D031
E4DF6FECBCDB3B9F9DFD5BE6FB7E49C65571B3366BEA76DF0F8C38B6287E5EE0
F444623E3F87C59915A4075FCE2D1D73275503724CD8307D0B2AF6BA946922E0
D5B440567163CB18594D5328DEBFBF7EB1E5CE689D3363030A2216ED48AEE0E0
C5922FFE54C7063A149C8E29D662E238CEE054FA053B42820B1E5B6714E7015C
BD6DE0363D605D75DE32E6606CEAA623547E9A2376F8460ED8B7DF30DC1A6E7D
17102C31813C682DF2C82D025969C6C59A2BB45E09A99CB2834FA53F1EB88DA8
A3B9C26A1DBBE2F19B31A6D888451C7A2E897216A4658A4DFD42A5CCF23E3667
252EC62642DB4AAC86A354FA7EC43F3C62B971F6ADE91BBF504418716F52DBD0
57776DB49DB30C2267A84505B2CBA5832C9F78D2F8D7CE40CD8792EDFFC5AB56
B06BCB07990E39BBB06B6EE5BDF21374E3D1E24D16547007B19260F10E74B099
10D0BB68D7FD462E1479B407C7A107CCE840DE182DEE2E512672AB749752EDC1
CCCDC0EEA009D336A7B7792D96C62C26B45846FDEE4E061F2CBBDAF46684F700
091B9AB15C3868EB7E283AB871683C36790B0CFBA0651A6541004067D53DFA35
C466172CC7E3D830F25BDAF33CFB7070375A5DA9CFCEAF47EB6A531BE7A67F50
400A0B59FF8C27B84F6C436DCC2F5F651785E9A730A96AF1CFD843B206A41AD0
6688EAE4B2FC94D8830233C0E5808F9EE8D460D3EB88FE640BEF50471548AA2F
0F237E7453B3D93FB1454761AE65F194E2B8F0F659F25CD2E7E45E849D4DBC40
B50F1A89D06BF2F7F3C72A42134A59901B49EA1CF17082C93EF3DBFBAEFE5033
A843024B40C161EE013F97955DAA15D1F1296BAB49D9C6318232441F4BEFE83B
D94B15E0BCA8AF9AC5F9F8839CB0333D1187C6DB8962A899454BBFF7D9D4F22F
A9117A9459D83624CB8C239563B2BE3D09C6F18C4FE8FD49FCEFE1552C77B957
4C7B4D157E55DFAC302B0A8B2835E8C61D9EDF8B002928AFF37FC03501E2723F
28210F832DAB8C8BC6F1075BF47D3295AB094DCA9D53855E4CCEB2EB3B395EA7
CC75BD12E15B0C769CACA134EC3CAD955CFA19DDE229EE4BB35814EFB11BB0F6
2BAB58C9C3F243CF85B0C3624479486BC92D17C505D5C60E3AFCEC8536461D11
355D13E97FEEEAF20F7BBF40D62CA2B8C72B7CBED46A57B3C472C0CD60414C63
3D7EF63737689405174EC7497F226405FBAB00C923E7AF66ACCC4A0CCBF52243
C27EB4BA54450DE84C27BA911A2754DC80277DB1B507E9E15D7CCB49E72D1238
63A4D35F5ACD0F0C9DF36769EEA73753B46F44C1DF90EFED0F616A5472D29D45
13C1F35C2351AD3E2504FB7A4A7C8FA069EC86E46D79D0DF8A1CD7BDBA33FB64
392EFFB2A88FFEB81C418921718E4EB83EA57023A51EDF8C46294E7B1D1C0983
BBD4E6E2055299438DC01F3890523EB58B4B529385DE9786B4C46A9E0D0920A5
37879E231ECAA622EF38619F202F967368F85BED8086B05711ED1362DED6C3ED
451C89B258C9F8464285DA3E90B0329A3EB360672E2C7F2304DF4E157EE16C56
1BC21CA217A708D3D2536F0BC3EAACB2DCDCE72778346FA3C1813CDB4AEAA478
FBE7266A4B6406BF14E4EE1390BBCEFA0A70C207CF98C68DCDF26FD1FF6D1D9A
A7B5577C196E9058D5738593C8A631B927F8E1AFF1718849EF02B896E66489F8
DE4A1751095B0414A7AD1C5D2213A5D2FB8F6C88F8861078AD265E0C8D030BCC
A53BD0276E25614B3FF311EC7157A08A53C04DD41A7822523357C5AF1481E03F
A1D49EF3B058D7299D41D49DBF3278160ABF1F7A1F43C1F8604C2F5B1E8E3718
9BB9DFBB49D6DCF59B7ACDFBC615BDBBC052E7B12DD0D169976C7294A0EC6438
C7EC84485688734E6F0CA6FFD6425B8978A739DA112E47B45EBD128D953D3E7A
E2036E55DD2C5931CAD2D60FBAF588BE602C13E31FF63AC7D9EE5911D584BCC8
855C49A42784B215CDFA41B6710370145F606854E25EC31BEAC033429B70D419
50916F4998A160F5D2D86C4ABD6AEBE38A6BA41A88D8B6914515844D268655F9
EBA29BF6534383AACAF9AF775D8F355BF1F60E4591C05CA02B9ED2CBD98BEC83
4379682AC24CDD9BF3D4B1216635D7BA24013BDF5F9336B02A7A427D9F3D38A7
11237A12E6006173FF53805683F52998FAFC731CEF2B4C78B43934AA46EA6EC6
04163D0BBB70E4AAE8B5CA2284524C2647D37A7DAD3849C038E3BDFBBD602309
98133DF50BF05D49EB1F9C80FC3FD494398A76C2CF855CFB8D098AE61BD3DEEC
BD03F6A335312A8E964B42542343417CBCBA6F9AD7F601682CA9379D438E3A28
C542BC79027246F18C4150E26CB273B750B9B1489441C5A06A079E63BED53278
F7A9105E3991A6FB10E1D574DA217EE2BA08B18DC48C4908E7034393D608DD0E
D1368F63178E93CE73C2A6E936FA23BEB4FA1B0B3B504527287B6444D21D283E
3276714E21461EC27568D6054EF783C9481E796F7AF9870DEBCB2FB125E82FFA
7A1D99088DE43B490C5350ADD6E3E07B98774B7C72AF473BD0152A5F1D80825A
29640003509C9D019E6C9E5E37FB1AB7B1487C05E783D650764FBCFC720AFEE7
E1B049B707CB6C5FCE0645976CCEF449FD97C3D63D1C0A15B92378CCF3BE8C91
9A56085D31BE6CCA5FB9732F6604BE47236626B577ABDBF5FDFCB24E418011AC
1285DAE14D3011DDFDD266D0558EF1F5DA3A5AB2622719FADEA0CD539349EA8B
975088924E04B049722309A80DA1817387003F4F46061DFD2C5D69F6971FEFB9
5B6F499C3D34B852AFAD4002B8F10A249D69E50A5BA593E0F220F68BD30070A6
8002B77AE3F39767E87ACA36D14ADB5A91F258C5F5DFCAA1B5F17DD1D640E492
E82137E7E2037983A8202D79ED1A71D64993C9038FC8AEC2726FDDEA7F2F2695
A241FFF5DB5D7134784F8B8E1B981A496EC2D45B4040072F487F69144AB9DA60
ABF41A37A34673A463F275CA6FBC7D3E5C5A1DEBC9A1DBD8A83BDCDD99FA73B7
61F822910FAAA5D0DC1EEF320F6A5EAC325AE1FA4E69EDB80743247FF1FF720C
6643FB6F557E7AB812FF9B39F83EDED93C022DF0A59018B8E214018E82B90C16
AE2925E0E8BD3F4B78EDF83524BDE20E3D12AE7B5F43111850E6F69E0B8F4F27
141E9FF9207B30DF20345AB171BA8B481EF2CA2251A9249FF1BD3AD4C3DAC9B6
467FE90CDC41EFD904D1DB42F285AF06FBBCADA457B033C2482A2451C86E8796
B729FA6CD91CCCB2A67F251D43743331714DA77C8E09E81804C34E859225C425
5C8957998C36AAEF03FA7888574A5AE58EA895C27AFA1D43C4AECDC24B1031C8
152BA56B72786471813692E18FF64D5C59C2474E1CB22118C57A82011E0FE34C
2797341B34F117C472432844F158B93BBAB8CF8D9D16DCC4222C15E9BCF54693
1D7C4EB242DD17104747F0E3A6B484E7F0D7073702188FA9CD513A560550CC1B
80F8C2EBAC60BFD0109D2D2790B9F6C8CEB42C7438C2A24F6E61A54C8A4CC613
566F1264E8DF7BD0E003D09CF72072570DD36B33D44E91D85B739E998BC3DE0D
43F54AC4544394BBEF3BC5E4C1383A234C1A066DD3D47E97AD34C0696AC508C8
E47DBB6715D7ED1D8F0F5EA97FCFF7A35DD753FDFED346F3E42B7A8F6ED9E21B
C3CA63224940DD70C53587D564572EF6D7481B5BB55EB7498F4F7A10B902A660
F19A11ABDFBC587E44559DA64E8A4337DBC8CBE8EC4275EB96E9628F7961D1FF
700B776082483D270CF23C1602C6F69817D98CA73A1ED22059FEC4D608CC0C9B
E536057940984FBB3AE00DAE649DD46D504DD805968A58B0A09AEDD1C90E9630
4DA1ED72C647D04A4DF473F08C835AF3A6786C0D4DB288CA3E3A9AF837E1AF6C
D948B4956AFFEBF9E63C10A826C308E2F6A21BEFD024B8DE44F61CFA702D80A9
B149935B1F403A9CB761ECD453EEFA806294D71DEE2A105120EF15E5D50A98B1
9DD7F7677C627B334A67A63B15004EA25B78A9D94847895D84B5AEC63B9721E8
0BA7706012C965FC1F216D328CDC71865DC8CDE6F5F508A7FB738CEB1605F449
D187FE3ECF7450D2B4B34A1DE85786FDB61ED70719312F472152B444347BD9EA
C401958BC68C3BB28D4F098079A5961A4D2930342828595131D892B14B578D86
0484562AC81ABC1750FE02A03CA33B0E4026ADF5A06D56228872803BFB40E5A1
62E27A71B2EA3B2998D7AF4AD2EBCBEA7477BFF6238B7CC5FE4AFA0FFB1033EB
FE177220A9ADA8CC002F9E8C56E95B996105C8B7552ED751C393F443E1F7AE89
59070FB7AFB0D210235E7C3BB8BCFE63A547463AC84FF5BAEE6C811AB1F4BA43
6D5A6486950D24EBC9D9A235C7D505130CB5A642137423BC3DDC027CB707454E
ECF3791AA05B2FD5153C7664E398A67C8DE11DE62B4D66A065E8D0AD7216D19D
4A15DCF0D48BFCFA296DDA98F22E47113229943E7F2AE8ED0D46A6CA2472B7C4
814534EFFFC6CA80ADBEE9E75603463423C064F3956F0ACEDA3F1F3ABAE8CBEF
F249C2531627A1B2F179A3D7808F882523A685EA47863659F0B7B48B18B4B8C7
CB301A16B40B1FB9CDF63EB92F5548F7235C293BD75DA37224C83A4CD7926EDE
CD2CCE46ECA28D878B5C7036710883E9E6DA790402751ED4002BECECABD1B3B5
BA69C0A389B7DC7A15600508B663552888D7F459D48AC661309E3BC9F60046EB
9E7F1CB617D7343DD3EED61ECBC3C8BB0DB2B6B3CB87DA287F8C9F8F1B065B86
5AD63371B9DAFB583B1974224278926C4583FA9702353F653E52F2ADB667C23F
407210FF3114CC9347088D10C6698153C1140443EECD768A08C96BC58414C4CF
F10E3395CF30E96A967875D0019CCF9D03BA88F6EF0D0A6D4DA63F2468551413
D32E56B2809E801F8EC88776BA827CF61DA93894748216F2657A6CA1BE255BB5
870B45F7945CA6B2C6DD328D019A0FD091872A2ECDFB3D04D26EA1DC94D7985A
14B39373A331C2A934B20D3E142CA4064D88E319882487613F180E795E2337B6
2FDE87C762779C844A1391DABE84E9D7E5570157112CEC65840027324CF964A6
9D30362C1F841E21B8A9E41B41531122802BBD9C47D5EC60F370F8594B50D4CD
A8F627B7016451179C199A1587125269D0D7207C230CF279FC571F6000425736
4A6C130B995F53EEC44B85DF286D69C89278FE4A45CA4D2E389F46FCCEFDBD96
E4898A912458DA35B7430135BB681396D25CE777996B8B8EFF4050B5B7252DE9
BEDB5FD68176730BF82710E5D1BBC06FAD3A0BD88894DC1DC13063F21356E9F8
6FA935A199BFE4EDB03D23453A1D0E6D3C38080076582068269E8587DB7C62F0
8FB37D40BB7FF1A2A3C8420E560BE78847A7892F2AE061AF35E7A56EC333162B
F93641F4F596D06D06841C528A63576B07F57A3E4C8982AB278577676A3BB5F4
B6F5CB9EEB53D97CCE5FA145C063D0DD18ACBF0C69857EB30F94310F038595F9
61A3372465BCC91B22CB2B766FB7FCC344DF1EE6A81DD47BDFE73A0CAE6BDE84
D6A1F61D251E23B8C59DA0EB952D8BFFD28549EBD06ED8E47CBBEB9330FBD452
94CC00EA62497C8F82350A188D602148753AA5C9E0913F6A80973FFA20D8E3C3
B4C6BE7D9CD48D0CCAF9CE441AC604DB66F5D9C2C241AEABD46ED439E8602FFD
25EDB0CA1BDB7167B632EC80B2C7C371CD0DDFD5ACC011A3FA864301F259F746
A8A1CEB1A14EDC3764269A640A2BBB775ACFD2450D5766B1C5B77A721B96ECD1
11896433BAA448319D83B2BDDB832B86CC06B751C7A4FEFBD029BDD0E233BF57
DE859C2D814384E13E91681919997E40C2D6C79EEED89BAEC868946485236542
C27C169EABD5F6C55A8A9D02824AB1E65018268FF94B1F876907DC17575B5E5E
7B577835306D1BDE68A3E6E2FE654BA017C0FEA6D3224B3737C126E18A91B379
FAFCCD21B2D172A203C80F3B3A27B75F3C2F63A93E55EA367D3F5CD3D4C41A73
12C93364E446673F72E5F9270C62BC42F5FA11790A25ACB5CA5CAF77B38F7BF0
FA303D7EEB3C620AE4B90F435AA4E3F685D630F2A1BDED6958527DDDEA8FD99E
3A08CC1CF687BA150151D8FC809157D8D897597D3B05E4A957060C29663B1833
4B9A778DD2CB8FF5315C6E58A9DB8574232E105C68E24D5DFFED795FE72C9FA0
D4EDAD4C850818ECB7BD534FE81B2995F2EA270ADC8BEFB49C056A83E4B5D1D9
A701ECB1EF09D17DEABEC9B3AA6E86DDDF523FDD19397FF87659593EB86D06CD
E562E54CDCA6BCC7B4AE006FE6AAAE712EE2885ADD90CF5840E7EA1E8FE2A750
37D2D11F3860BC2BE9FAAE879137C5FBA1CC1EDC16F697E50EB1DEE364083126
D8D89BE4ADB42FD78C79E821F68C3E13A3B601BE54FC2ED4E8400DB6D6992464
65C87E0D9D0E5B7DA987FADEB7E381B50E184BD0D42E47D40E1D4B4216EFD851
02B2D8A366F567DC16326DC3577799447F05CBDFCF40CBCE0106B60503CB0430
FE25A14159C7F4FFDE6CD4E24D45A60EF2A46B73074480E07E22257E55F9FE13
6DAFC998DD42FDAD34C4F50F717320AD90150CDCED6B44FD8F58D9AE16AD316F
780651D592D6C2913E8C15748F0A8AD5AD51401BED7AD62340BD8150AF5A9509
7F636465DD3F63317469E3F566F6DAE34585EDF4D1AC6EA033B45CDE353F6BB2
180F7CE25399C276C4BBCD59525E58B3015168BF324C43EA5C9F04D2C4B3087E
4810AD1C065DF978BF338D7A3767B7182A6562405607AFBBB322735D8B73812B
93AB33844B2838531E4BB3585573F68A75774DAC97EE5A010C9C1E8777E6C700
6D166838D72803600049A3D3A00C84306C32CB20D3C8E66238A9D4324F06E2CF
F12A3C7D14516F18B171EA6CFFA8945ED59C3DE7BE4E0CA34EDCA7FC891B0591
647FD06C4F8B773EA6C1F25C0DA406555071E33403FD9C508C00DBF8D7D22578
DDACB6E126AF347C56053A9E84E6F69620D979A50527267B182A5E5D4CB015E3
C9B14AC2F488C8DEEB5891A6CA5CE5A880C3A2ECC5159796CDAC3E277AB29CC8
FF141B3375DD83E9F0BA309E43112B3804E71ED0F8E84EE778F837B559D0E596
0F490546E7F63EB5F25A614BCDEB098E879EC9A9F7E951FEC45CD2F35D74AAD6
8FC53EB1777AFFE58A7081395E0500F823FCB49D6CB703ED95EDD07D654FDB40
7D1012D54296393C24F5738F021BAD507C478E3534B6470C65EC96FE04E1C84A
0739E945785870AFB33B9EDEEB9BEE958A70A044D93D36E0D6C4D27D1DA4A06C
FD25B147BDC78D4DDDC3F79976EBB194A1F15D030E7973CF975A91F42360F536
7EB9FA80AB9A9723102B9BE89BD067D63EFFC26066C52CC2B9A9DD8E047CCD06
358E4BF30D6E5BBD21F4061BC2E642741C061DE4DC7B2C26491F145ADA2D31FE
06D111C36C022D09693378D4C44F8F63379039832BD394E7898C9BED2CD8F7C4
C275C8BC6BA3D7F1633F27FD4D3DAE927C59FD2EAFE99B639AED3D915CACFE72
DA38512CAFDD632E9F7406E15EE540718B2C09B6F204C2891062B75F4F306289
F594789CA488C6DCDF9882EC82DFC8C48FE80BD726E217B04AD417DB2BFBB5B4
ED6A95840D5E556B61C735E8DB2BE6893BC8CFAB4456853EE1A2787C0B4652E2
8D984425BE698E9DF78CBBAFBD6D7CDA6C7B862C069AC84B22DFDCDAF7F9E1F0
3B86833039BD1179DE5543F32E86791866E9C3EEBD2D32DC21D22DF22EA76088
84D52040550E46E68A788862822A1DE1621781F406AFD143D6F078CC0FCDE796
42085B37AE3F263B0C66CA7FA3E9B27D2165508B5B2134F6BCC2EBEEA15D2ABB
C74E3FDDE3480BACA593407FBC4C7F847F25251BDB7C3680ABAEF7E736ECDBBB
EA7FF0D6548B9C64714F2B69029D50538B1052999E66F0C78FDB0833F5992139
0C9258FD17FB08FBF20448E0A1025FE627DE2100B0F900E93442C0300EC6D555
F3511ADDC27EE56969C52E5572E096336FB3345EC07491EAA256D3D0549C19C6
85C16EA428ED34DD249523252A677D65BA00CC6E317C295A0B789E718370945C
BC8124CD74118EB97554873653CA7E3586AFD885E76312F0A4D4B1D9A7D22F96
1E6B9C544DB836190C7E1FDC5C8F6D77F94ACD1F61914AC27D132D8984FD80E0
27E87A53B8F8642F118600D5572AE558D97070DC865C20AB59866B85416F0861
D8801740A718B977472BD08FB1CA0977266F1ABFF3D092CD917D1EB68AD7B5EB
2D88955BCA105FF661137950DDDA79B3A745F5761DD800AD16D9AA7D5F992C9C
150F2469EF7AA1763C432DF909894AA46895A0877D49680B9933A8059655B2D6
F57458F6E151708861A217157D2966203AD52BAACCB09B622CC6407F254EE68F
AF82FE6D4EEAD4C13F2026CA32F3A51AD5628E4436AA3E64DF5F00C7F05D597C
CDE2646C29E0E6454FC222E9951BFE1061A83A65F1055BCB7F9897DC224BFD91
CE9F23AC5F7FD89C5929FCC836DA2340A5E91C843D811631F8AB7570EC739893
0C525AA75402BC1D545B402A5F936289D558B0C61F304F9F52E65ADFD4ED7D3A
05E8D2953C6A38D3E69325FBF0EDAE9A4CB1DBCF1CD827157A865B0CDF77AB66
DC1A71BDADF0D6A0C6C3669EA95F1F96744EB416340CE7519D6AA63AB30479A5
E9C6AC5CAD8B207B0C9377817C02948C14A0417CF869746F98D76B9D0A40F260
161AD5C90F3FCEFD8CE6A87435B1BD77ECA3E04EDC27EEE06F51FB244564E7E2
1BD4EC5037DAA75EFD3B0A63390A22D5722E1E02B637E5DAA6EF7D69CE1D2BBF
1EDA050A3D82C24DA0970410E86B16AD3CE37BB0E21A67E352D67F49D778206C
C5646D02189B4ED86CFA3810F56E02FE9D23E4B945A83FCBF76BB5F45BDD88FD
8CA56A480EE46CA46188E472706B5BEA0EBF5BFC6C2977353FF4C8E468FDB9E4
AE3E45E1F76C53F20A11DF7297C989B06A12919467A3AF1C4135CB399F995D27
064C80F06829CA7148E5AC64FE58D5714D4C2242699D6688B859902C5B11980B
58BD42476B2A9957952EF6FAAD44ED3890E8EBFDB2832649F711877469B87DE6
416140C9C6676254193CA77F38009913F3A2DEAB1B4ED5E5D6789AA9D1B4F49D
AF41ADACF7A74CD5C2F3C50B7237C3F0FBFDDACAA9A7CD1D16316F4E29D28670
4CC98112C06C79E77541ADE9CF42AC9EF06CC720B64731CE33424778DFCF7FD1
E7584F54D09DC8EBFCCC201A2347CE4BBDDDB97E287CBF6ECAE308FFEEC36820
6238E3EEE424758C706EEBBF6887BAAC618FF42DEF56B8558E8612735D44317C
FB15A846E09CF4B83BE77A9DB10FE08EA159C1C06ABFD66F92D164D1CD80C73C
099236F52EC571268C44AD580AE1B56015F197A4FABF4DA306C130B31DFA63A9
29630C0B9D322C13C77B0F5DD91009E10961A2C2FC4D430A0C3C96DBB8632BED
B290BC159C14CD211354A4CD24522F89261C880EFD834CA25C7967268EF18FA1
ECD9929F5427CE9523AB8B1DF6A990CFC071CB40DF9AF1040F1277FFB40B073B
64D2927446BBB2D90BA7F2D89B4C6D6A56A234E5DE831CFFF4E04A4AB5231D1D
A38E4C45691220B4652F80B2BB2791F9AFF318B2B55B08B64AAFF90BB7168A72
194E48128E872BB0533336F841C74171479BF9150550EFE1D3C684A2F1C49C2C
9624853DE9A443874224DA754CF8C3F61A6E8BDCC0B1726B3D85EFF69B840D8A
FB29575D23B831987C91ECCBA7D7AE38217C3E116E5991EEACD8EE3180398E01
0C0EE6FBA1CD4F069434FB21B5B30CE3FF22728684DE7FEAC1359431E870162E
2DA5D6CDD3AEE261D5166D597FD760D6DADB2D686A0567EAE19573C73E863052
A70D9219A90D45373AEE70CD5D06B6EEB142388C879E8AFB9AA72A5B710BF84C
8E63097EC23F82719FDEA0D0FC757676FDB4BC93F7991B203E250EB2604F688A
6C0AC3016DF51714057A6D31B456EDADF516445BFBA325A230F62AC5D3954EE9
8317F9521D0D46562D37078399042F70A34D668B82733F3DFECD86A327D3875A
068A8A4DB7AB3AF917315BF056F75B40F2FC757611A027C530B72CD274F2FC8E
C4044727B5C166685CDE3738810AF448FCC4B466B9A970EFE16F6449434E8139
2DF92780EDD2B78A4E1C93F20F148E358D90DFDDC70673991228B5EA9FE0758B
E7B4C3EFAF88CD23450C0EE16DC5E1F5DB7B239918C9092E595CE031E0C71D6D
B9BD6D4EBBB1D01B5EACB6DFEDE62AF75068DA9C6643224BC60FF10C3E340748
CBAB7799A1D90AA77A42F15A3A048656530CB05B39E50772807470EF247F59DE
4794CB472DD28EA5AC1950245BAA5F6A2B15E696C94596D87BE036A1E6B9B761
3E04DCA6C70C655C7914FFBB087B6D5A47A6B9D88942B426BADCEEB98C212E15
D2608E9D9957D5853B346C828C27AE53BF3947789F6B1991EC51BF6571FF0ECD
12252A5E9A253F0E8A75FBC7D3D585554838D2F3B90B03AEC4CBA34476FD8D1A
743DA76E018D448C233D04D88E67019B6B12996EBB0A0BEF2D17CA32FD009FC1
1B8D59659B279E55AC0369B811CE8C5A039938C3BF82DA7A6A7BA780A6DA40EC
11C88BAD9942CCADD998260993B04B49F2C714FA3A8529F1AF85DB511224A66C
4C3A921A6AEF3F2DCE886C559D015D2261A9F5D1B2C1DDEEECFA137D7F6ACD7B
24561DF87DBF30FD8F77CFB8436A40E3C1A660091C55EC5B9A845FCA66D6FAC4
FE947782B67A209E32AA03D725B60DB42000FF57ADE3FFB8B8D92B1689A8671A
526C35B377CB8E9E7C94E7C0AFA4058A79BA7F02CA5A816FA96511FEEAEC0089
2578D1B67761937D6E9B26CD222F16AC95D0C1E3C624705D090526CFC59018C6
3B800D7DF04ADD10ABB171347EBC3625AC005D54E66E855A3CF7515FE60B67D6
23CD8D853B45BB82D7BD53A7F9EB970DE343A7FE732530F60CA0374607C7D798
B438B5122D2A4C4A27AB81FB2A3B5AF654877A4906357D07D97D5668AD4BD31D
95A0F6D7A05645512F5159A5982ABE23288A07FD94DC29B564A871B9DB09771D
E4D393233934F21968FB1BA7282BF7A7EB720600EEBAA58F8F793F55ACBD86D8
C2E5A3426C48C4EF8625115BBB2310F28F48D8F987AF390221DBF37289276FC5
D4E7786D9668C890920006EB6A920E9B3EAA4F3D655FDCA41646712EF16751E0
1105C7B2945062BFAB32FE3EC938EE81EDD38D3765ED2806F94B4C53B9819116
EC14CF405F378244D9ED60487CCDC7F1AE5A55E096C570D718E4E39216B2D38C
77271336D81CF82D11949C0F758A52852C7F35FBDDF6069198E9A4069BE0EAAD
99F5B88835AC80722A2E8A9AE0403578FA46E8D1A612436315998549A07A087A
5426D54B816036DE2BEC2E6A68A62479B952568BC688F696E2BA0B4E8FCB687A
736BF01A71A99C78FB55AE47DA7A166DBAD96099EC5F7EAFA060A074C53803A8
5F181EE1513F43604A9448C9FD4865FE17DF596ECE3C20754FE7C49518D6E444
282439DAB1F9134300F387B3D8A303AD76F3093625D63DA47721F6E38DEF9CF0
29BB7CBAE8F5D696898C77506442BA207E6578A103E4BC668F014D06CD839D5A
19E4B952DFBEED9EA75416200C438B84FF1B75EF305B025757CE3CD76B4AA2EE
808B7C72DAF6F9979654277BE009B300ADD2A3EA09ABEB419AC2296A7306E565
AF673176D7C8628FD3DB4F9AD763FA5725CEF259EB4C1F9F74EE8C1D79C56193
5E891F79B1F77FF58B6A2C50F6242371FE347E6DF6C7E55A7E6CEC79B5928208
F1364B5E567BC76C80F3B77C153EDCEAC6EBBE6E153E41E7D5824AC9BA4474B1
08F99F3AFF376D5DA78D2A8D659C76608E0A134657AEEB15BBB20A6CB3B29A99
FD7D04394F84DB661D380A5E102F3F127F479E7089548DC1226DA6A57F184271
7381DEC00FC253FC5353F11647A5AFDC922D2946EAE33F8EE8A5D61788DB8724
11612949FB1E9476B2F96017FD6863131A191E9C28E0278DDBBF5026C3FB67A7
EB3D144CB3D2F40ED8E25B42A4A35037A4103C5951B557B2CDE91778DE8F1C5B
2346441E6120333524E6C9EB127BCB50D6F03B6CDE74B801C251B4F3AF466DA1
5BD3168E8D9431B16AF7ADAF60AE2490FB209BCD9E488A7E01160466A8BDBC3A
F63E6DA1CEC7336A16FFD4743B46BA938AB1F3FF1357BEEAC6F8312921C67280
0FBE6AD6570080DBCE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 75 /K put
dup 101 /e put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE23767DB5
CA5E8A96258B222BA6F0BF16FB387093D7D500516F9A1206AF2347935B01E1B8
22C2BAF9EE6C7D122C2AF05A48EDEF6025FDD3ED44FCA4EE3475FEFAB35720B6
F9FA37B9AEAD4CCBF5B7DF4EA9FF51E724E1102EEAA85B5ECBFAA98FB23CF740
57F636750C53964140675C756BD263254EDA13C9C71E7E63DF2E33222F778698
28140758587EC1E0BB839BC9F4AE2C9CE3699C72BA33C21624CAD57259FB0F50
41AA0E7D51E93A8A8109760991BE4F8A71164DB8B34791AC2A4385BB906AB3E6
2C2A9BC59F5D2DB583B8BA2B7B065F9C89242D61BE2CF27C2D1E549E67CD7800
8F7D32983148BCE02D01E1D8770C097A4EA7868DE155D436E6DDE1BAE7C66E9C
F2B4D79ECBC132C56A8BBFDE71E616DE896FAF967076649B1EED2576C0AFD1CF
BB1476B5BCA6AF92929B70332070D8173E0321C4D050C4B921C396CEDC0D028E
4AA69A007FC11DDCB07660BA40B7A0FA549FBFA647404EB82C5820C9B49D53CF
5BF05FFEA55320CB890080F6CCE8F007489438C2D561773A245B16526F2D39E5
0BD72D1B445A6571955DCD9F498EC958350F365B22C37DB0632E18012D428D6B
3EEEF4C300D7B8CA43249F342D01FF36E8281C9AB7719B8E6046F6A0A54921B1
EC0D5F13A50D966B9FAD30FDE59A8BF72B8CB6A9EE43CC8C8CBCFAAE2A03FED5
AABAF56986D78B2DCDBE1E9BDFDD76946B14D8774E209FC6C94BF7BC4DA2BBE8
982EE1202F8B79ECC5D203D041276B742364B4C870C7E4D16745A61ED50F6139
68AC6245936E2CD43512F67C4DA37A4737E171B84DA3214B2C90508DD530F989
E7C76568EA0A09991BB7779286AEECEB77410CFFD26D826DCD91DBA8BAA64072
54776DCF9DE06B2FFC89A13417E47AFEB659DED8D13DDCD8E89D767D7282818D
3019D9812ECFBC4FD99F99C1F5DAE964509CC8E6CC956C07CF21E6788377ABF5
E939380FD99BCB879E26EB01C66644DDA72C791624794A5BDF60DCBFAACC6A62
49D4CEEB9DCCE8343B17E5BA7F1C2D7CAFC7294D3F79BEB9044C946C50D25EC5
2CA3B40F01CDC8704ECFD1B694AA6610B701AB9CD485DD3E5BECD42C237A02B2
E988638E2E0F10FE84AA2311EB21556EC96255169F1934D1A47366B09C4EC20F
A12BD644E42F9BBF1CDE5D07C57266E37FE91AC965B4A9958033E4B7D3533C01
2D71ECBFD7AB1693411D4E2D5B94E9E95A8DEBADE09E9E63893F528BD91F7A0C
D81ABB2F7931DB90CE40FEEA88B97D5E81740B1C22FA6A34F709B52F8F1DDC68
D995AF778E314E6BCA24CD365754B92730EEA1883CA4F3FB4611EB6E94CD9804
F7AC7D492F832EB198872A2C89702B6968F356E879E7EEE8FD76BE4837AC7C4B
812CAEEAC5150AD98AC7A766CC13F7DB1C41F0F52DD9B405F1D5F6119DB77D8E
1AC526A30BDD9667E7DC6201D2DB8894A1F6195187CE54D4E427CFC699CFBB93
828D5DB4C91B4313D0EF3D10E886A933531BAA5295BE2831F8C7E3FB5A414EAD
9EA3CCA82199CFFD03F541BD14B9B2D2B025067983CA373546140C46891A0D8D
C423B311456A48D08EDAFF3A2B265E9AF1F0B8F050CC8CA7E011ACD8A401846D
C10A42C20E76A35220DB63AB1E3355D4FBA8F48D0DF500DA003323776C299EF3
B32B71F920BA8A727C7479272BDB9196A02D756E52FA14BEB01693D61D679B0E
8788FE04E0175947934153602F8F35936A885E5C6BFD05D355A36475B7B38CC2
4C64BFAF84E35B4DF7B5E86532E02BB63E6BBF34799EBE0EDE7ADE54532C7D00
A5D52268BE56C3CAE817EBF5DC1875E442ECA857C7AB246559F636316360C45A
EC840D982FC3C9E5CA566A32E1A2712A7030CADB0D96CDED9B71A853D97F66D5
B12C3FF90B96F9526A018A5307814F17B6EA0B6749BEAA942FA7572B29129011
15A5CF03A97BD45F95C0D4F3C50F77C1E15F01A3EFD21CD8EFC2B1B60E67E439
3236EB1CAE83C5C80B16002F8D6D31A3B44618C1FDCD98279FA0E2996EAE77DA
5429DE79EB3D39C8E916A1461DA0131C587275D1BCD12807DFFF603BEF7299CD
E171C80CDD71B4E11C2DE880F81017487E5A8A8263E63B01A37E9DBBE709C952
4D7A9EF680
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /numbersign put
dup 40 /parenleft put
dup 41 /parenright put
dup 50 /two put
dup 53 /five put
dup 55 /seven put
dup 69 /E put
dup 80 /P put
dup 84 /T put
dup 97 /a put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CEB0F7F496AD
7A919E031AC74FE7BEBA9DAFC46FC250984181AA58FABE1CF516AD7D1EB408C9
5CD3109A8C42D2C47326A3031F336B79A8E06B5A0BB1E17B05277CA833E23A03
D2E242D4EDAAAB5BA3A41BE95A16EEFD9BF2D65F6D21EACD4CC2D055638663C8
823F9BD513C7E54300C160FAA7957FF9472D7CFC92AB9245492D6C40611AC518
59A10CB0F69EAC34078B1831EEEF416813FB8EA79FB7BF36F372703F218368C7
F0F2A3F52494736F1505BAD60E90F13DFD5B2C93CAEF588A721206F6EA620B22
21EECF5AC02E615C8AE09345F7F7C9F21218887757245F925121ED1621308ACF
2F395805CA90FD8872A5BC2A52EACB20CCE29C4CDE0BAC5B365D7161E4CBE50C
98D6DA395E292E19876C6AAE72736DB75A040692EE20CDBF309DF4608E266309
52A47EBE4DB46091CD14FEC2144811CB2B7A88C218CEF47C7BC5581ED9E05B01
0D1C49651D4690A08BDC1A8863B05D759BA4162E66E5A299FFE338D364171A51
D9D6867EF1E4FCFD1B5EF84BB104947416E4575D2967C97188C79183885BBA0D
05300FF6ADA9E2F0CEAE89606F6CF5D2D399A52CCBB8AB904D74FA8618240FDB
D47352DCAB2B637FE62AE5DD66A61113EA11416033928353DC706EA48BD5662E
30E02E059E0FE5EA090407A54DA862D75452559F7E172B8A4E6BF10F6CB5AD63
888C26E4800704AD858590B3B0BE05DE49D760558359290CBABCA09D32E602B5
6DC3FE2A5FE74D1533D5631CF5BA7589A57013AF24C2BAF59C5C53A027FAF479
016594B95B4F08D99D55884AE54E4FFED1349238C9C67C0222721EDD63D413EC
6A2E30CEB48C02F2F8F65ED329640D16A2383F9E8D1CA2E6BF59C421F7DA6CE3
53729E1B76AE61B4C62F122A9FF248B3F518976AFF056206FA66F8C4D36D73AE
A1931EC12BF3EFF8CC6AFB952DAF823E82BC8447633EC52CEAF8908FE605377B
60D8BA3688C28E1B64D36C9B79282D0D35DF83420FA875A01F89B4E57D58BDBD
985EEAA30C0AED995FEBE26351CDCA149F6FE563AAFA2C76B645FFCA33206C14
46CF54CAD7129A5EA264FB09884810E16E68A6B3E109918689989E8D52409381
37B84F178417973D8E162FFAABA9270C630D541AB9E487A8EC8F795E6B7A5605
B20F82F32AD21EB267D05F0FD7FEBAF2462D2AA078371916741DBE8991B48A16
0DC20136D961D93C56441E8AD3BE9B7FBBC8D8E10AADC49BC8282E119DF1796C
82C4D5C72F51B0DA573D2FA2A0FF3A8DA505BBB9C8164817108141D1F584A817
94D323C02E828956483767E1E580645B5183DC1E88B8E46F785E4CCB0B902C52
543C4ADA618DA089E0140EB3161060C7C202E48A9E714938E6D7D9508ABE8268
EC05211EBF001658B45863358F9A397D9DE22D94355472A08F26FE7956F15E93
47CD3BEE41B1CC3EA188568D7644A39CD5A34308CD0D0750273F050E2EDB59E5
0B2BF73C0D10FF4FD0A5896B73772E0D2E91A39EA1E3BC2E9AE7824AD966DFE4
2B50A626163E24006C6C6BB19323E1EBA1055C451988B53D8CE7760A5AD2C81C
8A205933560A4A03B7D61D06D394F2F015A8652EE543711C4ADC3CCEC3640525
ABD8A50EE392E7C7849B632EB7EB1CC9824DA0C418355ADB767C26790F9EA933
40B4F197148B1CC3FC6AE436CDB4ACBCDED3F08284B9605C293C43E337E82831
09CAB03484CE3F5DED53C67A9F8A30F8595C20418BCA9CAD764FCD6A48704444
FB9135B92C8E42C99FEBF8EC962989D6AB0A9B2B469DFCCB2E822AEFF2F29BB4
2CC3BB12882F7B8ACE913D35ACB4434F46CE1A30DD61C4AF51E89FCC7F1327D2
27BFF674F3F1F81ACEFDD6FCF6D4CF9294888A15D7CFDFEC6A7E3B2C095C5DCA
DC340CB6043496B9EAF398A7BAE7BF8E3AECE702401DA8BA9E78D9C4222BA24F
16C085DC21A269343A984EEFF1DF2AF1F0B00DEAA4CC0585FBA97F50045F0D89
EE33660DC4B666F19AB822A7EE50FFA7C68DA1FBD907D2D390AD8725367BA297
91578B4795323E609A04C26BF8B65FCAB8126E56F6C79DE89F62459215CCF3FC
7F3ECEAB54970BA8C903747C149FDC8F00E6B64FAA7BBC3FB68939A575533100
FC35FD6E57B74D821ABB15A780DECB891EF85D43594D35D042CBB4432D9AB8BB
48128A643BC2B8708AF19961F3AD35AE8E5774D4B0079C1C7C6135775DB507E4
3192434AB5D929DAEC78DCE1F687BB09F73FC5743B7B3466136052486E7022B5
1964326D95FB2A1AB451BFE8E965D1CA2F1998BDCCB43D0F81F9A4750E382505
E55F5B4BA3DC9003F4083F2A1DCF856FBD0D35C0FA9C6BDFAE6E7A74D39F9068
ACDEBD9FE3E8E971C8DE773D9E4ECA63104100E376A69B47FD2B9FE2A19FA611
4441DC210404A6372ED1B7A69A6BCB6E12F16F5D02FC6CC3C87910C3D970A9E6
66B36F30FC011C4094D5E0F5296813CDB70EB14390AC3C5F08689C858DE7E6D4
FEA2663A1B657B68626D8181F0A658DEF82B2D6A24A6A92B4E3FCD8A2D781FB8
05D3132F5EDC9D5A846A9BEF4F35810F35DF2AFCE30066E5A9913A2F5601BA07
B6361E75E1CAFEC64CDFA9CF187AD6EC37C04AD5780EAEF403961DA3001784D0
8C106410ED462F66163C624C3CA8ADCD06084B4382C64D2828DE16A2E61F4CE4
DC836D444048ECCF68910E05CE457A21521CBC24899B68E0C64688F20CEBD805
642728C4E72934012A79AA081EDF7B96E98D37F75F5731D42D2089BEC411A7AE
56C2B1B745DF4825EA10308FEF6628626304314D7DD2FF745F696FCED16EFB79
0B5C5D11B63DF888F93A651EF8D68C2C7D779F0AF4CADEEA23AE87B68AB62973
9F83BFB5DCECCBD912C5B8B57DBB911149D9A3DD3C756DF0298D9BBF3593F36F
135D7964F61DBA3081D1EE5BD75428353AD5C3AC841E0558479F461DC88E59EF
BC9E3A1306D65809CC59409DA6741965347B07DDF332B7BA384081A7A23B89DC
B882A02294609C1C1580E9D6E6E6D57E752F1BF39533FF8FF89C79AF6549820A
9174FD284C02990F746434858F03262F16F30114A9D2032FA9D8E33B3AAE6F27
446DCA65308A33B9ABF05521596DD1843A5995CC98A16DCD22CF92936EA7D71F
471C87A19321D31A033E9B0781EEA6C322AD138CC851474777CA9C6F2E6F042E
111363CEADE68D2858BF4006934EC3FA2C2919C1B11A0F2C298CC28DFFB66693
B3F3B13B03CBA0AD119C39E1EE10EF465537BF810D7A22A29A1F827E0AFF2509
B7CD1505DA84A33B4DA37DA14B880582CCD035E8713EE2ED656582A028E70057
0F5CD2DF51FEBD1F2B4698700FAF74D24F92A8DFB971ABA00FC65B288A2B88C5
1A2A51692DAF0287A3A5611794F40095291E0B4D3EF1A70ED86A919455AF6495
7BAF597293265FAA57E96E4A79BB98809B5F725653C7AEB69573BEE4A2ABA542
284AF8B4221CE18388A029AD761222FBC12864DC07916924495C8E4008C87CAF
19CBA1AF5FFDB58F0DB206AEC652D862ABA427F8F04584683F8413FF656E244D
E9469E1782B67B6471042495768AD5478B5E7D60B81551E4DDE1AFFEA55AD7EF
9963B95897E2B91C3401FD65D6628ABE3F20EA2460927C515417ED18228BAA3C
93C2C4F7F723806D6B957AC407FD9ACF6BC55D964E800AE92BD2C613AD86A572
B3EB5F5F2EBB4063E9E504EBB4537F2F5C061F366E06F37AEF898C317C09A8F9
B41EAB9B7BC89223E7DC5325838015245A282A22EA06A4667536CE8A201A2D3C
8D8447363CCF63336373534608597D5C5DFF21E51AE2064F7903AB79491C8430
E9DE1593F4B9B69C740D526BFB2914AF251DB3A722BB189FEA878E099B4A4409
4181BAA709030E0725FC66EF1FA8787E79500F511451D96C32A4CCFEBCBD7DA6
FF92709A7F6CDF1590C2E9F8583963E5CC4F58AF6888DD7829A87875EDA1D1F1
2BEA5EFC52BC37678F76948803F8657FE9E5E67A8D526B944F2DC1868D6D78A5
20FC358575931341207FC91501577E2DC76B441CEFA475A3AAC86BFB28D083DF
AB087E92452EBB8E45BC1E3E890E67B324A4F6353B3EFF8327F41B8F1D981882
F89FC20853D837ABDFE607654442DCFA051726B52606AE8FE7B1038BA082D955
EA113D75F0FC9B9B57C370EFB3B7C40C9E2444D5A3405EABFA04EA1367C658D6
0756B248F873D2FE0C804E94B6A141CDE64BD28A17459D54B9F5860DB97491A4
DFB5973F7BD5BBDDBAE5749B762D5FD230F8374DE11B65D0EE06E678C095300B
31F4716DEAE8A78FA1633D3F564BADE5AE93CF86B509932AA23C4C4E9420E916
D635547C546622CF5CC741CF8163570AA493566BCA6B0070515CD84518806079
9859F8FA916B763E83632764369C0E6497A95D96A8272561347F9902E80BD06E
285D21
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (2008-1.dvi)
@start /Fa 135[47 21[36 35[65 1[65 1[23 58[{}5 83.022
/CMMI10 rf /Fb 254[23 65{}2 83.022 /CMSY10 rf /Fc 137[38
1[28 34 35 2[42 47 1[21 2[25 42 38 25 38 42 38 1[42 50[25
30 32[47 12[{}18 83.022 /CMTI10 rf /Fd 131[83 1[37 44
44 60 44 46 32 33 33 44 46 42 46 69 23 44 25 23 46 42
25 37 46 37 46 42 7[62 1[85 62 1[60 46 2[57 65 62 1[52
2[30 1[65 54 57 1[60 59 62 1[39 1[65 1[23 23 1[42 1[42
42 42 42 42 42 42 1[23 28 23 65 42 32 32 23 2[42 21[69
1[46 48 11[{}67 83.022 /CMR10 rf /Fe 134[71 1[97 3[53
55 3[75 8[61 25[105 9[102 65[{}8 119.552 /CMBX12 rf /Ff
135[62 3[46 46 3[59 65 98 33 2[33 7[59 12[85 3[80 10[80
13[59 1[59 2[59 8[46 46 4[98 35[{}18 119.552 /CMR12 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 637 530 a Ff(Exam)38 b(#2)g(\(75)f(P)m
(oin)m(ts)g(T)-10 b(otal\))37 b Fe(Answ)l(er)45 b(Key)p
0 TeXcolorgray 392 924 a Fd(1.)p 0 TeXcolorgray 0 TeXcolorgray
76 w(\(a\))p 0 TeXcolorgray 42 w(Bac)n(kw)n(ard)25 b(induction)j
(predicts)f(an)h(outcome)f(of)g(\(8,)h(8\).)p 0 TeXcolorgray
529 1062 a(\(b\))p 0 TeXcolorgray 42 w(No;)f(a)g(P)n(areto)f(impro)n(v)
n(emen)n(t)g(is)i(\(10,)f(10\).)p 0 TeXcolorgray 392
1238 a(2.)p 0 TeXcolorgray 0 TeXcolorgray 76 w(\(a\))p
0 TeXcolorgray 42 w(A)33 b(P)n(areto)f(e\016cien)n(t)h(allo)r(cation)f
(of)h(resources)e(ma)n(y)i(not)g(b)r(e)h(go)r(o)r(d)e(b)r(ecause)681
1338 y(of)26 b(equit)n(y)h(concerns)e(or)h(other)g(considerations.)35
b(F)-7 b(or)26 b(example,)g(it)h(w)n(ould)g(b)r(e)681
1437 y(P)n(areto)k(e\016cien)n(t)j(for)f(Bill)h(Gates)f(to)g(o)n(wn)g
(ev)n(erything)f(\(or)h(for)g(one)g(kid)h(to)681 1537
y(get)22 b(the)h(whole)f(cak)n(e\),)h(but)g(w)n(e)f(migh)n(t)g(not)h
(\014nd)g(these)f(to)g(b)r(e)h(v)n(ery)f(app)r(ealing)681
1637 y(resource)k(allo)r(cations.)p 0 TeXcolorgray 529
1775 a(\(b\))p 0 TeXcolorgray 42 w(A)34 b(P)n(areto)d(ine\016cien)n(t)j
(allo)r(cation)e(is)i(in)f(some)g(meaningful)h(sense)f(bad)g(b)r(e-)681
1874 y(cause)c(it's)i(p)r(ossible)f(to)g(mak)n(e)f(someone)h(b)r(etter)
g(o\013)h(without)f(making)g(an)n(y-)681 1974 y(b)r(o)r(dy)e(else)f(w)n
(orse)f(o\013,)i(so)f(wh)n(y)g(not)g(do)h(it?)p 0 TeXcolorgray
392 2151 a(3.)p 0 TeXcolorgray 41 w(The)36 b(claim)g(that)g(an)n(y)g(P)
n(areto)e(e\016cien)n(t)i(allo)r(cation)f(is)h(a)f(P)n(areto)f(impro)n
(v)n(emen)n(t)498 2250 y(o)n(v)n(er)25 b(an)n(y)h(P)n(areto)f
(ine\016cien)n(t)i(allo)r(cation)f(is)g(not)h(true.)37
b(F)-7 b(or)26 b(example,)g(giving)g(one)498 2350 y(c)n(hild)h(the)h
(whole)f(cak)n(e)f(is)h(a)g(P)n(areto)e(e\016cien)n(t)j(allo)r(cation,)
e(and)h(giving)f(eac)n(h)h(c)n(hild)498 2449 y(one-third)36
b(of)g(the)h(cak)n(e)e(and)h(thro)n(wing)g(the)g(remaining)g(third)g(a)
n(w)n(a)n(y)f(is)h(P)n(areto)498 2549 y(ine\016cien)n(t,)28
b(but)g(the)g(former)f(is)g(not)h(a)f(P)n(areto)f(impro)n(v)n(emen)n(t)
g(o)n(v)n(er)g(the)i(latter.)p 0 TeXcolorgray 392 2725
a(4.)p 0 TeXcolorgray 41 w(Consider)e(a)h(division)g(problem)f(suc)n(h)
h(as)g(the)g(division)g(of)g(cak)n(e)f(or)g(the)i(allo)r(cation)498
2825 y(of)g(\014shing)f(quotas.)p 0 TeXcolorgray 533
3021 a(\(a\))p 0 TeXcolorgray 42 w(When)44 b(p)r(eople)g(trade)f(they)h
(bring)f(ab)r(out)g(P)n(areto)f(impro)n(v)n(emen)n(ts|wh)n(y)681
3120 y(w)n(ould)35 b(an)n(y)g(individual)h(engage)e(in)i(a)f(trade)g
(unless)h(it)g(made)f(him)i(or)d(her)681 3220 y(b)r(etter)f(o\013)6
b(?)52 b(P)n(areto)31 b(impro)n(v)n(emen)n(ts)g(are)g(a)h(go)r(o)r(d)g
(thing)h(in)g(and)f(of)h(them-)681 3320 y(selv)n(es,)25
b(and)g(if)i(y)n(ou)e(get)g(enough)g(of)h(them)g(then)g(y)n(ou)f(end)h
(up)g(with)h(a)e(P)n(areto)681 3419 y(e\016cien)n(t)j(allo)r(cation)e
(of)i(resources.)p 0 TeXcolorgray 529 3557 a(\(b\))p
0 TeXcolorgray 0 TeXcolorgray 109 w(i.)p 0 TeXcolorgray
42 w(No.)37 b(There)27 b(are)f(m)n(ultiple)j(P)n(areto)c(e\016cien)n(t)
j(allo)r(cations.)p 0 TeXcolorgray 725 3676 a(ii.)p 0
TeXcolorgray 42 w(Initial)g(allo)r(cations)f(are)g(a)g(matter)h(of)g
(equit)n(y;)g(economists)f(tend)h(to)g(fo-)836 3776 y(cus)i(on)f
(e\016ciency)-7 b(.)43 b(As)30 b(long)f(as)g(there)h(are)e(opp)r
(ortunities)i(to)g(trade,)f(a)836 3875 y(P)n(areto)d(e\016cien)n(t)i
(outcome)g(will)g(result)g Fc(r)l(e)l(gar)l(d)t(less)k(of)f(the)f
(initial)i(al)t(lo-)836 3975 y(c)l(ation.)p 0 TeXcolorgray
392 4171 a Fd(5.)p 0 TeXcolorgray 0 TeXcolorgray 76 w(\(a\))p
0 TeXcolorgray 42 w(A)h(go)r(o)r(d)f(prediction)h(is)g(that)g(ev)n
(eryb)r(o)r(dy)e(w)n(ould)i(c)n(ho)r(ose)f(to)g(not)h(purc)n(hase)681
4270 y(a)j(catalytic)g(con)n(v)n(erter.)61 b(F)-7 b(or)36
b(an)n(y)g(giv)n(en)g(driv)n(er,)h(purc)n(hasing)e(the)i(device)681
4370 y(w)n(ould)26 b(cost)g($100;)f(doing)h(without)h(it)f(w)n(ould)g
(imp)r(ose)h(health)f(costs)g Fc(on)j(that)681 4470 y(driver)38
b Fd(of)27 b(only)g($.001.)p 0 TeXcolorgray 529 4608
a(\(b\))p 0 TeXcolorgray 42 w(This)39 b(outcome)h(is)f(not)h(P)n(areto)
d(e\016cien)n(t.)73 b(With)41 b(eac)n(h)e(residen)n(t)g(b)r(earing)681
4707 y(health)25 b(costs)g(of)g($.001)f(for)h(eac)n(h)g(of)g(the)h
(500,000)c(cars)j(in)g(Seattle,)h(the)g(total)681 4807
y(health)31 b(cost)g(for)g(eac)n(h)f(residen)n(t)h(is)g($500.)46
b(A)32 b(P)n(areto)d(impro)n(v)n(emen)n(t)h(w)n(ould)681
4907 y(b)r(e)j(for)f(ev)n(ery)n(one)f(to)h(buy)h(the)g(catalytic)f(con)
n(v)n(erters,)g(in)h(whic)n(h)g(case)f(eac)n(h)681 5006
y(residen)n(t)27 b(w)n(ould)g(only)g(b)r(ear)g($100)f(in)i(costs.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 986 523 a Fd(\(c\))p 0 TeXcolorgray
42 w(The)38 b(cen)n(tral)e(di\016cult)n(y)i(is)f Fc(not)45
b Fd(that)38 b(y)n(ou)f(don't)h(kno)n(w)e(what)i(others)e(are)1129
623 y(going)j(to)h(do;)47 b(y)n(ou)39 b(ha)n(v)n(e)h(a)g(dominan)n(t)g
(strategy)-7 b(,)42 b(so)e(the)g(other)g(pla)n(y)n(ers')1129
722 y(strategies)26 b(are)h(irrelev)-5 b(an)n(t)26 b(for)h(determining)
h(y)n(our)e(optimal)i(strategy)-7 b(.)1129 839 y(A)27
b(reasonable)d(mec)n(hanism)i(migh)n(t)g(b)r(e)h(passing)e(a)h(la)n(w)g
(that)h(ev)n(eryb)r(o)r(dy)e(has)1129 938 y(to)j(purc)n(hase)e(a)h
(catalytic)g(con)n(v)n(erter)f(or)g(pa)n(y)h(a)g(large)f(\014ne.)p
0 TeXcolorgray 840 1104 a(6.)p 0 TeXcolorgray 41 w(It)20
b(just)g(so)f(happ)r(ens)g(that)h(eBa)n(y)e(is)h(curren)n(tly)f
(running)h(an)g(auction)g(for)g(a)g(collection)946 1204
y(of)34 b Fc(al)t(l)h(\014ve)40 b Fd(*NSYNC)33 b(b)r(obblehead)g
(dolls.)53 b(Imagine)33 b(that)g(y)n(our)f(v)-5 b(alue)33
b(for)g(suc)n(h)946 1303 y(a)f(collection)g(is)g($20,)g(meaning)g(that)
g(y)n(ou)g(are)f(indi\013eren)n(t)i(b)r(et)n(w)n(een)f(ha)n(ving)f(the)
946 1403 y(dolls)d(and)f(ha)n(ving)g($20.)p 0 TeXcolorgray
982 1586 a(\(a\))p 0 TeXcolorgray 41 w(Y)-7 b(ou)31 b(should)g(bid)g
(less)f(than)h(y)n(our)e(true)i(v)-5 b(alue.)46 b(Otherwise)30
b(y)n(our)g(exp)r(ected)1129 1685 y(v)-5 b(alue)25 b(from)g(the)g
(auction)g(will)g(nev)n(er)g(b)r(e)g(more)f(than)i(zero)e(\(and)h(will)
g(b)r(e)h(less)1129 1785 y(than)i(zero)e(if)i(y)n(ou)f(bid)h(more)f
(than)h(y)n(our)e(true)i(v)-5 b(alue\):)1534 1968 y(EV)23
b(=)f(Prob\(Win\))c Fb(\001)h Fd(\(20)f Fb(\000)g Fa(b)p
Fd(\))g(+)g(Prob\(Lose\))f Fb(\001)h Fd(\(0\))p Fa(:)p
0 TeXcolorgray 977 2283 a Fd(\(b\))p 0 TeXcolorgray 42
w(If)37 b(the)f(highest)g(bid)g(excluding)g(y)n(our)f(o)n(wn)h(bid)g
(is)g Fa(x)i(>)e Fd($20,)h(y)n(ou)f(cannot)1129 2383
y(do)31 b(b)r(etter)h(than)f(bid)h($20)e(\(and)h(lose)g(the)g
(auction\);)i(the)f(only)f(w)n(a)n(y)f(to)h(win)1129
2482 y(the)38 b(auction)f(is)g(to)h(bid)g(more)e(than)i
Fa(x)p Fd(,)i(but)e(if)g(y)n(ou)f(do)g(that)h(then)g(y)n(ou'll)1129
2582 y(end)30 b(up)f(pa)n(ying)g Fa(x)p Fd(,)h(whic)n(h)f(is)h(more)e
(than)i(y)n(our)e(true)h(v)-5 b(alue.)42 b(On)29 b(the)h(other)1129
2682 y(hand,)h(if)g(the)g(highest)g(bid)f(excluding)h(y)n(our)e(o)n(wn)
h(is)g Fa(x)f(<)e Fd($20,)j(y)n(ou)g(cannot)1129 2781
y(do)39 b(b)r(etter)g(than)g(bid)g($20)e(\(and)i(win)g(the)g(auction,)i
(pa)n(ying)d($)p Fa(x)p Fd(\);)45 b(raising)1129 2881
y(y)n(our)28 b(bid)i(cannot)f(help)h(y)n(ou,)f(and)h(lo)n(w)n(ering)d
(y)n(our)h(bid)i(do)r(esn't)g(reduce)f(the)1129 2980
y(amoun)n(t)h(y)n(ou'll)f(pa)n(y)-7 b(,)31 b(but)f(do)r(es)g(increase)f
(y)n(our)g(risk)h(of)g(losing)f(the)i(auction)1129 3080
y(when)d(y)n(ou)f(w)n(ould)g(ha)n(v)n(e)f(lik)n(ed)i(to)f(ha)n(v)n(e)f
(w)n(on)h(it.)p 0 TeXcolorgray 986 3213 a(\(c\))p 0 TeXcolorgray
42 w(If)k(a)f(pla)n(y)n(er)f(has)g(a)h(dominan)n(t)g(strategy)-7
b(,)30 b(they)h(alw)n(a)n(ys)d(get)i(their)h(b)r(est)g(out-)1129
3313 y(come)g(b)n(y)g(pla)n(ying)g(that)h(strategy)-7
b(,)31 b(regardless)e(of)j(what)f(the)h(other)f(pla)n(y)n(ers)1129
3412 y(do.)36 b(Bidding)26 b(y)n(our)e(true)i(v)-5 b(alue)25
b(is)h(a)f(dominan)n(t)g(strategy)g(in)g(a)h(second-price)1129
3512 y(sealed)37 b(bid)g(auction.)65 b(There)37 b(is)g(no)g(dominan)n
(t)f(strategy)g(in)i(a)e(\014rst-price)1129 3611 y(sealed)27
b(bid)g(auction)g(b)r(ecause)g(y)n(our)f(strategy)g(dep)r(ends)i(on)f
(what)g(the)h(other)1129 3711 y(pla)n(y)n(ers)33 b(do,)k(e.g.,)g(if)e
(y)n(our)f(true)h(v)-5 b(alue)35 b(is)g($10)e(and)i(other)g(pla)n(y)n
(ers)e(all)i(bid)1129 3811 y($1.00)26 b(then)j(y)n(ou)e(w)n(an)n(t)h
(to)f(bid)i($1.01,)d(and)i(if)h(they)f(all)g(bid)g($2.00)e(then)j(y)n
(ou)1129 3910 y(w)n(an)n(t)e(to)h(bid)f($2.01.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
